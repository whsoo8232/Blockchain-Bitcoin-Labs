{"id":"9e3cc7a9f9eb63be7649d13762a42ead","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267Upgradeable {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n// EIP-2612 is Final as of 2022-11-01. This file is deprecated.\n\nimport \"./ERC20PermitUpgradeable.sol\";\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20PermitUpgradeable.sol\";\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/cryptography/ECDSAUpgradeable.sol\";\nimport \"../../../utils/cryptography/EIP712Upgradeable.sol\";\nimport \"../../../utils/CountersUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n *\n * @custom:storage-size 51\n */\nabstract contract ERC20PermitUpgradeable is Initializable, ERC20Upgradeable, IERC20PermitUpgradeable, EIP712Upgradeable {\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    mapping(address => CountersUpgradeable.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    function __ERC20Permit_init(string memory name) internal onlyInitializing {\n        __EIP712_init_unchained(name, \"1\");\n    }\n\n    function __ERC20Permit_init_unchained(string memory) internal onlyInitializing {}\n\n    /**\n     * @inheritdoc IERC20PermitUpgradeable\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSAUpgradeable.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20PermitUpgradeable\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @inheritdoc IERC20PermitUpgradeable\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        CountersUpgradeable.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20PermitUpgradeable {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary CountersUpgradeable {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../StringsUpgradeable.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSAUpgradeable {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", StringsUpgradeable.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSAUpgradeable.sol\";\nimport \"../../interfaces/IERC5267Upgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:storage-size 52\n */\nabstract contract EIP712Upgradeable is Initializable, IERC5267Upgradeable {\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /// @custom:oz-renamed-from _HASHED_NAME\n    bytes32 private _hashedName;\n    /// @custom:oz-renamed-from _HASHED_VERSION\n    bytes32 private _hashedVersion;\n\n    string private _name;\n    string private _version;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        _name = name;\n        _version = version;\n\n        // Reset prior values in storage if upgrading\n        _hashedName = 0;\n        _hashedVersion = 0;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator();\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSAUpgradeable.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        // If the hashed name and version in storage are non-zero, the contract hasn't been properly initialized\n        // and the EIP712 domain is not reliable, as it will be missing name and version.\n        require(_hashedName == 0 && _hashedVersion == 0, \"EIP712: Uninitialized\");\n\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Name() internal virtual view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Version() internal virtual view returns (string memory) {\n        return _version;\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead.\n     */\n    function _EIP712NameHash() internal view returns (bytes32) {\n        string memory name = _EIP712Name();\n        if (bytes(name).length > 0) {\n            return keccak256(bytes(name));\n        } else {\n            // If the name is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the name hash in storage if non-zero, otherwise we assume the name is empty by design.\n            bytes32 hashedName = _hashedName;\n            if (hashedName != 0) {\n                return hashedName;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead.\n     */\n    function _EIP712VersionHash() internal view returns (bytes32) {\n        string memory version = _EIP712Version();\n        if (bytes(version).length > 0) {\n            return keccak256(bytes(version));\n        } else {\n            // If the version is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the version hash in storage if non-zero, otherwise we assume the version is empty by design.\n            bytes32 hashedVersion = _hashedVersion;\n            if (hashedVersion != 0) {\n                return hashedVersion;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[48] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/TestPoL.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\";\n\ncontract TestPoL is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, PausableUpgradeable, OwnableUpgradeable, ERC20PermitUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize() initializer public {\n        __ERC20_init(\"TestPoL\", \"TP\");\n        __ERC20Burnable_init();\n        __Pausable_init();\n        __Ownable_init();\n        __ERC20Permit_init(\"TestPoL\");\n        //transferOwnership(msg.sender);\n        //mint(msg.sender, 10000000 * 10**decimals());\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public {\n        _mint(to, amount);\n    }\n\n    function multisend(address[] memory dests, uint256[] memory values) public returns (uint256) {\n        uint256 i = 0;\n        while (i < dests.length) {\n           transfer(dests[i], values[i]);\n           i += 1;\n        }\n        return(i);\n    }\n    function transferWithPermit(address owner, address spender, address recipient, uint256 value,uint256 fee, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n        // permit 함수 호출\n        permit(owner, spender, value + fee, deadline, v, r, s);\n\n        // 토큰 전송\n        transferFrom(owner, recipient, value);\n        transferFrom(owner, msg.sender, fee);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1847],"Initializable":[326],"OwnableUpgradeable":[132]},"id":133,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":133,"sourceUnit":1848,"src":"127:41:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":133,"sourceUnit":327,"src":"169:63:0","symbolAliases":[{"foreign":{"id":3,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"177:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6,"name":"Initializable","nameLocations":["769:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"769:13:0"},"id":7,"nodeType":"InheritanceSpecifier","src":"769:13:0"},{"baseName":{"id":8,"name":"ContextUpgradeable","nameLocations":["784:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1847,"src":"784:18:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"784:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"234:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":132,"linearizedBaseContracts":[132,1847,326],"name":"OwnableUpgradeable","nameLocation":"747:18:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":11,"mutability":"mutable","name":"_owner","nameLocation":"825:6:0","nodeType":"VariableDeclaration","scope":132,"src":"809:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":17,"name":"OwnershipTransferred","nameLocation":"844:20:0","nodeType":"EventDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"881:13:0","nodeType":"VariableDeclaration","scope":17,"src":"865:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"865:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"912:8:0","nodeType":"VariableDeclaration","scope":17,"src":"896:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"864:57:0"},"src":"838:84:0"},{"body":{"id":26,"nodeType":"Block","src":"1076:43:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":23,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"1086:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1086:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":25,"nodeType":"ExpressionStatement","src":"1086:26:0"}]},"documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"928:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":27,"implemented":true,"kind":"function","modifiers":[{"id":21,"kind":"modifierInvocation","modifierName":{"id":20,"name":"onlyInitializing","nameLocations":["1059:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"1059:16:0"},"nodeType":"ModifierInvocation","src":"1059:16:0"}],"name":"__Ownable_init","nameLocation":"1033:14:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"1047:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[],"src":"1076:0:0"},"scope":132,"src":"1024:95:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":37,"nodeType":"Block","src":"1187:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":33,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"1216:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1216:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":32,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"1197:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":36,"nodeType":"ExpressionStatement","src":"1197:32:0"}]},"id":38,"implemented":true,"kind":"function","modifiers":[{"id":30,"kind":"modifierInvocation","modifierName":{"id":29,"name":"onlyInitializing","nameLocations":["1170:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"1170:16:0"},"nodeType":"ModifierInvocation","src":"1170:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1134:24:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[],"src":"1158:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"1187:0:0"},"scope":132,"src":"1125:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":45,"nodeType":"Block","src":"1345:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":41,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":69,"src":"1355:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1355:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":43,"nodeType":"ExpressionStatement","src":"1355:13:0"},{"id":44,"nodeType":"PlaceholderStatement","src":"1378:1:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"1242:77:0","text":" @dev Throws if called by any account other than the owner."},"id":46,"name":"onlyOwner","nameLocation":"1333:9:0","nodeType":"ModifierDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[],"src":"1342:2:0"},"src":"1324:62:0","virtual":false,"visibility":"internal"},{"body":{"id":54,"nodeType":"Block","src":"1517:30:0","statements":[{"expression":{"id":52,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":51,"id":53,"nodeType":"Return","src":"1527:13:0"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1392:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":55,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1471:5:0","nodeType":"FunctionDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1476:2:0"},"returnParameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":55,"src":"1508:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"1508:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1507:9:0"},"scope":132,"src":"1462:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":68,"nodeType":"Block","src":"1665:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":60,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"1683:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1683:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":62,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"1694:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1694:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1683:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1708:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":59,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1675:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1675:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67,"nodeType":"ExpressionStatement","src":"1675:68:0"}]},"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"1553:62:0","text":" @dev Throws if the sender is not the owner."},"id":69,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1629:11:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[],"src":"1640:2:0"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"1665:0:0"},"scope":132,"src":"1620:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":82,"nodeType":"Block","src":"2139:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":78,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2176:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":77,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2168:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":76,"name":"address","nodeType":"ElementaryTypeName","src":"2168:7:0","typeDescriptions":{}}},"id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2168:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":75,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2149:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2149:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"2149:30:0"}]},"documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"1756:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":83,"implemented":true,"kind":"function","modifiers":[{"id":73,"kind":"modifierInvocation","modifierName":{"id":72,"name":"onlyOwner","nameLocations":["2129:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"2129:9:0"},"nodeType":"ModifierInvocation","src":"2129:9:0"}],"name":"renounceOwnership","nameLocation":"2094:17:0","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[],"src":"2111:2:0"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[],"src":"2139:0:0"},"scope":132,"src":"2085:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":105,"nodeType":"Block","src":"2405:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":92,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2423:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":94,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2435:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:0","typeDescriptions":{}}},"id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2435:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2423:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":98,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2447:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":91,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2415:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2415:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":100,"nodeType":"ExpressionStatement","src":"2415:73:0"},{"expression":{"arguments":[{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"2517:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2498:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2498:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":104,"nodeType":"ExpressionStatement","src":"2498:28:0"}]},"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"2192:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":106,"implemented":true,"kind":"function","modifiers":[{"id":89,"kind":"modifierInvocation","modifierName":{"id":88,"name":"onlyOwner","nameLocations":["2395:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"2395:9:0"},"nodeType":"ModifierInvocation","src":"2395:9:0"}],"name":"transferOwnership","nameLocation":"2344:17:0","nodeType":"FunctionDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"newOwner","nameLocation":"2370:8:0","nodeType":"VariableDeclaration","scope":106,"src":"2362:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2361:18:0"},"returnParameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"2405:0:0"},"scope":132,"src":"2335:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2750:124:0","statements":[{"assignments":[113],"declarations":[{"constant":false,"id":113,"mutability":"mutable","name":"oldOwner","nameLocation":"2768:8:0","nodeType":"VariableDeclaration","scope":125,"src":"2760:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"2760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":115,"initialValue":{"id":114,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"2779:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2760:25:0"},{"expression":{"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":116,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"2795:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":117,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2804:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2795:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":119,"nodeType":"ExpressionStatement","src":"2795:17:0"},{"eventCall":{"arguments":[{"id":121,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"2848:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"2858:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":120,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"2827:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"EmitStatement","src":"2822:45:0"}]},"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"2539:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":126,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2696:18:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"newOwner","nameLocation":"2723:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2715:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2714:18:0"},"returnParameters":{"id":111,"nodeType":"ParameterList","parameters":[],"src":"2750:0:0"},"scope":132,"src":"2687:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2880:254:0","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":131,"mutability":"mutable","name":"__gap","nameLocation":"3159:5:0","nodeType":"VariableDeclaration","scope":132,"src":"3139:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3139:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":130,"length":{"hexValue":"3439","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:2:0","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3139:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":133,"src":"729:2438:0","usedErrors":[]}],"src":"102:3066:0"},"id":0},"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol","exportedSymbols":{"IERC5267Upgradeable":[157]},"id":158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":134,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267Upgradeable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":157,"linearizedBaseContracts":[157],"name":"IERC5267Upgradeable","nameLocation":"142:19:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"168:84:1","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":137,"name":"EIP712DomainChanged","nameLocation":"263:19:1","nodeType":"EventDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"282:2:1"},"src":"257:28:1"},{"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"291:140:1","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":156,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"445:12:1","nodeType":"FunctionDefinition","parameters":{"id":139,"nodeType":"ParameterList","parameters":[],"src":"457:2:1"},"returnParameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"fields","nameLocation":"527:6:1","nodeType":"VariableDeclaration","scope":156,"src":"520:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":140,"name":"bytes1","nodeType":"ElementaryTypeName","src":"520:6:1","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"name","nameLocation":"561:4:1","nodeType":"VariableDeclaration","scope":156,"src":"547:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":142,"name":"string","nodeType":"ElementaryTypeName","src":"547:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"version","nameLocation":"593:7:1","nodeType":"VariableDeclaration","scope":156,"src":"579:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":144,"name":"string","nodeType":"ElementaryTypeName","src":"579:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"chainId","nameLocation":"622:7:1","nodeType":"VariableDeclaration","scope":156,"src":"614:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"verifyingContract","nameLocation":"651:17:1","nodeType":"VariableDeclaration","scope":156,"src":"643:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":148,"name":"address","nodeType":"ElementaryTypeName","src":"643:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"salt","nameLocation":"690:4:1","nodeType":"VariableDeclaration","scope":156,"src":"682:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"682:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"extensions","nameLocation":"725:10:1","nodeType":"VariableDeclaration","scope":156,"src":"708:27:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":153,"nodeType":"ArrayTypeName","src":"708:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"506:239:1"},"scope":157,"src":"436:310:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":158,"src":"132:616:1","usedErrors":[]}],"src":"107:642:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1796],"Initializable":[326]},"id":327,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":159,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":160,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":327,"sourceUnit":1797,"src":"138:44:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"184:2209:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":326,"linearizedBaseContracts":[326],"name":"Initializable","nameLocation":"2412:13:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"2432:109:2","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":164,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:2","nodeType":"VariableDeclaration","scope":326,"src":"2546:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":163,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"2579:91:2","text":" @dev Indicates that the contract is in the process of being initialized."},"id":167,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:2","nodeType":"VariableDeclaration","scope":326,"src":"2675:26:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":166,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"2708:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":172,"name":"Initialized","nameLocation":"2809:11:2","nodeType":"EventDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:2","nodeType":"VariableDeclaration","scope":172,"src":"2821:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":169,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:2"},"src":"2803:33:2"},{"body":{"id":227,"nodeType":"Block","src":"3269:483:2","statements":[{"assignments":[176],"declarations":[{"constant":false,"id":176,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:2","nodeType":"VariableDeclaration","scope":227,"src":"3279:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":175,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":179,"initialValue":{"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:2","subExpression":{"id":177,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3302:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":181,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"3347:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":182,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"3365:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:2","subExpression":{"arguments":[{"arguments":[{"id":191,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$326","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$326","typeString":"contract Initializable"}],"id":190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:2","typeDescriptions":{}}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":187,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"3388:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1796_$","typeString":"type(library AddressUpgradeable)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1484,"src":"3388:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":195,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"3436:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":203,"nodeType":"ExpressionStatement","src":"3325:201:2"},{"expression":{"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":204,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"3536:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":207,"nodeType":"ExpressionStatement","src":"3536:16:2"},{"condition":{"id":208,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"3566:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":214,"nodeType":"IfStatement","src":"3562:65:2","trueBody":{"id":213,"nodeType":"Block","src":"3582:45:2","statements":[{"expression":{"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":209,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3596:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":212,"nodeType":"ExpressionStatement","src":"3596:20:2"}]}},{"id":215,"nodeType":"PlaceholderStatement","src":"3636:1:2"},{"condition":{"id":216,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"3651:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":226,"nodeType":"IfStatement","src":"3647:99:2","trueBody":{"id":225,"nodeType":"Block","src":"3667:79:2","statements":[{"expression":{"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":217,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3681:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":220,"nodeType":"ExpressionStatement","src":"3681:21:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":221,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3721:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":224,"nodeType":"EmitStatement","src":"3716:19:2"}]}}]},"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"2842:399:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":228,"name":"initializer","nameLocation":"3255:11:2","nodeType":"ModifierDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"3266:2:2"},"src":"3246:506:2","virtual":false,"visibility":"internal"},{"body":{"id":260,"nodeType":"Block","src":"4863:255:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:2","subExpression":{"id":234,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4882:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":236,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"4899:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":237,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"4914:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"ExpressionStatement","src":"4873:99:2"},{"expression":{"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":243,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"4982:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":244,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"4997:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":246,"nodeType":"ExpressionStatement","src":"4982:22:2"},{"expression":{"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":247,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"5014:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":250,"nodeType":"ExpressionStatement","src":"5014:20:2"},{"id":251,"nodeType":"PlaceholderStatement","src":"5044:1:2"},{"expression":{"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":252,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"5055:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":255,"nodeType":"ExpressionStatement","src":"5055:21:2"},{"eventCall":{"arguments":[{"id":257,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"5103:7:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":256,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5091:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"EmitStatement","src":"5086:25:2"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"3758:1062:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":261,"name":"reinitializer","nameLocation":"4834:13:2","nodeType":"ModifierDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"version","nameLocation":"4854:7:2","nodeType":"VariableDeclaration","scope":261,"src":"4848:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":230,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:2"},"src":"4825:293:2","virtual":false,"visibility":"internal"},{"body":{"id":270,"nodeType":"Block","src":"5356:97:2","statements":[{"expression":{"arguments":[{"id":265,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"5374:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":264,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":268,"nodeType":"ExpressionStatement","src":"5366:69:2"},{"id":269,"nodeType":"PlaceholderStatement","src":"5445:1:2"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"5124:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":271,"name":"onlyInitializing","nameLocation":"5337:16:2","nodeType":"ModifierDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[],"src":"5353:2:2"},"src":"5328:125:2","virtual":false,"visibility":"internal"},{"body":{"id":306,"nodeType":"Block","src":"5988:231:2","statements":[{"expression":{"arguments":[{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:2","subExpression":{"id":276,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6007:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":280,"nodeType":"ExpressionStatement","src":"5998:66:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":281,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"6078:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":283,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":282,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:2","memberName":"max","nodeType":"MemberAccess","src":"6094:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":305,"nodeType":"IfStatement","src":"6074:139:2","trueBody":{"id":304,"nodeType":"Block","src":"6111:102:2","statements":[{"expression":{"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":288,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"6125:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":290,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":289,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:2","memberName":"max","nodeType":"MemberAccess","src":"6140:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":295,"nodeType":"ExpressionStatement","src":"6125:30:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":298,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":297,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:2","memberName":"max","nodeType":"MemberAccess","src":"6186:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":296,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"6174:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":303,"nodeType":"EmitStatement","src":"6169:33:2"}]}}]},"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5459:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":307,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:2","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[],"src":"5968:2:2"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"5988:0:2"},"scope":326,"src":"5939:280:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":315,"nodeType":"Block","src":"6393:36:2","statements":[{"expression":{"id":313,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"6410:12:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":312,"id":314,"nodeType":"Return","src":"6403:19:2"}]},"documentation":{"id":308,"nodeType":"StructuredDocumentation","src":"6225:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":316,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:2","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"6360:2:2"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":316,"src":"6386:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":310,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:2"},"scope":326,"src":"6329:100:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":324,"nodeType":"Block","src":"6601:37:2","statements":[{"expression":{"id":322,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6618:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":321,"id":323,"nodeType":"Return","src":"6611:20:2"}]},"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"6435:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":325,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:2","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[],"src":"6569:2:2"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":325,"src":"6595:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":319,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:2"},"scope":326,"src":"6545:93:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":327,"src":"2394:4246:2","usedErrors":[]}],"src":"113:6528:2"},"id":2},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1847],"Initializable":[326],"PausableUpgradeable":[454]},"id":455,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":328,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":329,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":455,"sourceUnit":1848,"src":"130:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":331,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":455,"sourceUnit":327,"src":"172:63:3","symbolAliases":[{"foreign":{"id":330,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"180:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":333,"name":"Initializable","nameLocations":["718:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"718:13:3"},"id":334,"nodeType":"InheritanceSpecifier","src":"718:13:3"},{"baseName":{"id":335,"name":"ContextUpgradeable","nameLocations":["733:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1847,"src":"733:18:3"},"id":336,"nodeType":"InheritanceSpecifier","src":"733:18:3"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"237:439:3","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":454,"linearizedBaseContracts":[454,1847,326],"name":"PausableUpgradeable","nameLocation":"695:19:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"758:73:3","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":341,"name":"Paused","nameLocation":"842:6:3","nodeType":"EventDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"857:7:3","nodeType":"VariableDeclaration","scope":341,"src":"849:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"849:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"848:17:3"},"src":"836:30:3"},{"anonymous":false,"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"872:70:3","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":346,"name":"Unpaused","nameLocation":"953:8:3","nodeType":"EventDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"970:7:3","nodeType":"VariableDeclaration","scope":346,"src":"962:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"962:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"961:17:3"},"src":"947:32:3"},{"constant":false,"id":348,"mutability":"mutable","name":"_paused","nameLocation":"998:7:3","nodeType":"VariableDeclaration","scope":454,"src":"985:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":347,"name":"bool","nodeType":"ElementaryTypeName","src":"985:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":357,"nodeType":"Block","src":"1137:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":354,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1147:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1147:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"1147:27:3"}]},"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"1012:67:3","text":" @dev Initializes the contract in unpaused state."},"id":358,"implemented":true,"kind":"function","modifiers":[{"id":352,"kind":"modifierInvocation","modifierName":{"id":351,"name":"onlyInitializing","nameLocations":["1120:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"1120:16:3"},"nodeType":"ModifierInvocation","src":"1120:16:3"}],"name":"__Pausable_init","nameLocation":"1093:15:3","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[],"src":"1108:2:3"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[],"src":"1137:0:3"},"scope":454,"src":"1084:97:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":367,"nodeType":"Block","src":"1250:32:3","statements":[{"expression":{"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":363,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1260:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1270:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1260:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":366,"nodeType":"ExpressionStatement","src":"1260:15:3"}]},"id":368,"implemented":true,"kind":"function","modifiers":[{"id":361,"kind":"modifierInvocation","modifierName":{"id":360,"name":"onlyInitializing","nameLocations":["1233:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"1233:16:3"},"nodeType":"ModifierInvocation","src":"1233:16:3"}],"name":"__Pausable_init_unchained","nameLocation":"1196:25:3","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"1221:2:3"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"1250:0:3"},"scope":454,"src":"1187:95:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":375,"nodeType":"Block","src":"1493:47:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":371,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"1503:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1503:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":373,"nodeType":"ExpressionStatement","src":"1503:19:3"},{"id":374,"nodeType":"PlaceholderStatement","src":"1532:1:3"}]},"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"1288:175:3","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":376,"name":"whenNotPaused","nameLocation":"1477:13:3","nodeType":"ModifierDefinition","parameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"1490:2:3"},"src":"1468:72:3","virtual":false,"visibility":"internal"},{"body":{"id":383,"nodeType":"Block","src":"1740:44:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":379,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1750:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":381,"nodeType":"ExpressionStatement","src":"1750:16:3"},{"id":382,"nodeType":"PlaceholderStatement","src":"1776:1:3"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1546:167:3","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":384,"name":"whenPaused","nameLocation":"1727:10:3","nodeType":"ModifierDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"1737:2:3"},"src":"1718:66:3","virtual":false,"visibility":"internal"},{"body":{"id":392,"nodeType":"Block","src":"1932:31:3","statements":[{"expression":{"id":390,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1949:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":389,"id":391,"nodeType":"Return","src":"1942:14:3"}]},"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"1790:84:3","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":393,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1888:6:3","nodeType":"FunctionDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"1894:2:3"},"returnParameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":393,"src":"1926:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":387,"name":"bool","nodeType":"ElementaryTypeName","src":"1926:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1925:6:3"},"scope":454,"src":"1879:84:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":404,"nodeType":"Block","src":"2082:55:3","statements":[{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2100:9:3","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":398,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2101:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2101:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2111:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2092:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":403,"nodeType":"ExpressionStatement","src":"2092:38:3"}]},"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"1969:57:3","text":" @dev Throws if the contract is paused."},"id":405,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2040:17:3","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[],"src":"2057:2:3"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[],"src":"2082:0:3"},"scope":454,"src":"2031:106:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"2257:58:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":410,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2275:6:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2275:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2285:22:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":409,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2267:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2267:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"2267:41:3"}]},"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"2143:61:3","text":" @dev Throws if the contract is not paused."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2218:14:3","nodeType":"FunctionDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[],"src":"2232:2:3"},"returnParameters":{"id":408,"nodeType":"ParameterList","parameters":[],"src":"2257:0:3"},"scope":454,"src":"2209:106:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":431,"nodeType":"Block","src":"2499:66:3","statements":[{"expression":{"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":422,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"2509:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2519:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2509:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":425,"nodeType":"ExpressionStatement","src":"2509:14:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":427,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2545:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2545:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":426,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"2538:6:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2538:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"EmitStatement","src":"2533:25:3"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"2321:124:3","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":432,"implemented":true,"kind":"function","modifiers":[{"id":420,"kind":"modifierInvocation","modifierName":{"id":419,"name":"whenNotPaused","nameLocations":["2485:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":376,"src":"2485:13:3"},"nodeType":"ModifierInvocation","src":"2485:13:3"}],"name":"_pause","nameLocation":"2459:6:3","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"2465:2:3"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[],"src":"2499:0:3"},"scope":454,"src":"2450:115:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":447,"nodeType":"Block","src":"2745:69:3","statements":[{"expression":{"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":438,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"2755:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2765:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2755:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":441,"nodeType":"ExpressionStatement","src":"2755:15:3"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":443,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2794:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":442,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2785:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"EmitStatement","src":"2780:27:3"}]},"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"2571:121:3","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":448,"implemented":true,"kind":"function","modifiers":[{"id":436,"kind":"modifierInvocation","modifierName":{"id":435,"name":"whenPaused","nameLocations":["2734:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"2734:10:3"},"nodeType":"ModifierInvocation","src":"2734:10:3"}],"name":"_unpause","nameLocation":"2706:8:3","nodeType":"FunctionDefinition","parameters":{"id":434,"nodeType":"ParameterList","parameters":[],"src":"2714:2:3"},"returnParameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"2745:0:3"},"scope":454,"src":"2697:117:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"2820:254:3","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":453,"mutability":"mutable","name":"__gap","nameLocation":"3099:5:3","nodeType":"VariableDeclaration","scope":454,"src":"3079:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"3079:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":452,"length":{"hexValue":"3439","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3087:2:3","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3079:11:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":455,"src":"677:2430:3","usedErrors":[]}],"src":"105:3003:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1847],"ERC20Upgradeable":[1067],"IERC20MetadataUpgradeable":[1427],"IERC20Upgradeable":[1145],"Initializable":[326]},"id":1068,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":456,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"./IERC20Upgradeable.sol","id":457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1068,"sourceUnit":1146,"src":"130:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","file":"./extensions/IERC20MetadataUpgradeable.sol","id":458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1068,"sourceUnit":1428,"src":"164:52:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1068,"sourceUnit":1848,"src":"217:44:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":461,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1068,"sourceUnit":327,"src":"262:66:4","symbolAliases":[{"foreign":{"id":460,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"270:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":463,"name":"Initializable","nameLocations":["1661:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"1661:13:4"},"id":464,"nodeType":"InheritanceSpecifier","src":"1661:13:4"},{"baseName":{"id":465,"name":"ContextUpgradeable","nameLocations":["1676:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":1847,"src":"1676:18:4"},"id":466,"nodeType":"InheritanceSpecifier","src":"1676:18:4"},{"baseName":{"id":467,"name":"IERC20Upgradeable","nameLocations":["1696:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":1145,"src":"1696:17:4"},"id":468,"nodeType":"InheritanceSpecifier","src":"1696:17:4"},{"baseName":{"id":469,"name":"IERC20MetadataUpgradeable","nameLocations":["1715:25:4"],"nodeType":"IdentifierPath","referencedDeclaration":1427,"src":"1715:25:4"},"id":470,"nodeType":"InheritanceSpecifier","src":"1715:25:4"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"330:1301:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1067,"linearizedBaseContracts":[1067,1427,1145,1847,326],"name":"ERC20Upgradeable","nameLocation":"1641:16:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":474,"mutability":"mutable","name":"_balances","nameLocation":"1783:9:4","nodeType":"VariableDeclaration","scope":1067,"src":"1747:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":473,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"1755:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1747:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":480,"mutability":"mutable","name":"_allowances","nameLocation":"1855:11:4","nodeType":"VariableDeclaration","scope":1067,"src":"1799:67:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":479,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"1807:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1799:47:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":478,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"1826:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1818:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":482,"mutability":"mutable","name":"_totalSupply","nameLocation":"1889:12:4","nodeType":"VariableDeclaration","scope":1067,"src":"1873:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"1873:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":484,"mutability":"mutable","name":"_name","nameLocation":"1923:5:4","nodeType":"VariableDeclaration","scope":1067,"src":"1908:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":483,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":486,"mutability":"mutable","name":"_symbol","nameLocation":"1949:7:4","nodeType":"VariableDeclaration","scope":1067,"src":"1934:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":485,"name":"string","nodeType":"ElementaryTypeName","src":"1934:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":501,"nodeType":"Block","src":"2231:55:4","statements":[{"expression":{"arguments":[{"id":497,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2264:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":498,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"2271:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":496,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"2241:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2241:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":500,"nodeType":"ExpressionStatement","src":"2241:38:4"}]},"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"1963:171:4","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":494,"kind":"modifierInvocation","modifierName":{"id":493,"name":"onlyInitializing","nameLocations":["2214:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"2214:16:4"},"nodeType":"ModifierInvocation","src":"2214:16:4"}],"name":"__ERC20_init","nameLocation":"2148:12:4","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"name_","nameLocation":"2175:5:4","nodeType":"VariableDeclaration","scope":502,"src":"2161:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":488,"name":"string","nodeType":"ElementaryTypeName","src":"2161:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"symbol_","nameLocation":"2196:7:4","nodeType":"VariableDeclaration","scope":502,"src":"2182:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":490,"name":"string","nodeType":"ElementaryTypeName","src":"2182:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2160:44:4"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"2231:0:4"},"scope":1067,"src":"2139:147:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"2394:57:4","statements":[{"expression":{"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":511,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"2404:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":512,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"2412:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2404:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":514,"nodeType":"ExpressionStatement","src":"2404:13:4"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":515,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"2427:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":516,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"2437:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2427:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":518,"nodeType":"ExpressionStatement","src":"2427:17:4"}]},"id":520,"implemented":true,"kind":"function","modifiers":[{"id":509,"kind":"modifierInvocation","modifierName":{"id":508,"name":"onlyInitializing","nameLocations":["2377:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"2377:16:4"},"nodeType":"ModifierInvocation","src":"2377:16:4"}],"name":"__ERC20_init_unchained","nameLocation":"2301:22:4","nodeType":"FunctionDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"name_","nameLocation":"2338:5:4","nodeType":"VariableDeclaration","scope":520,"src":"2324:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":503,"name":"string","nodeType":"ElementaryTypeName","src":"2324:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":506,"mutability":"mutable","name":"symbol_","nameLocation":"2359:7:4","nodeType":"VariableDeclaration","scope":520,"src":"2345:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":505,"name":"string","nodeType":"ElementaryTypeName","src":"2345:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2323:44:4"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"2394:0:4"},"scope":1067,"src":"2292:159:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1414],"body":{"id":529,"nodeType":"Block","src":"2585:29:4","statements":[{"expression":{"id":527,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"2602:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":526,"id":528,"nodeType":"Return","src":"2595:12:4"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"2457:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":530,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2525:4:4","nodeType":"FunctionDefinition","overrides":{"id":523,"nodeType":"OverrideSpecifier","overrides":[],"src":"2552:8:4"},"parameters":{"id":522,"nodeType":"ParameterList","parameters":[],"src":"2529:2:4"},"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":530,"src":"2570:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":524,"name":"string","nodeType":"ElementaryTypeName","src":"2570:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2569:15:4"},"scope":1067,"src":"2516:98:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1420],"body":{"id":539,"nodeType":"Block","src":"2798:31:4","statements":[{"expression":{"id":537,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"2815:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":536,"id":538,"nodeType":"Return","src":"2808:14:4"}]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"2620:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":540,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2736:6:4","nodeType":"FunctionDefinition","overrides":{"id":533,"nodeType":"OverrideSpecifier","overrides":[],"src":"2765:8:4"},"parameters":{"id":532,"nodeType":"ParameterList","parameters":[],"src":"2742:2:4"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":540,"src":"2783:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":534,"name":"string","nodeType":"ElementaryTypeName","src":"2783:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2782:15:4"},"scope":1067,"src":"2727:102:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1426],"body":{"id":549,"nodeType":"Block","src":"3527:26:4","statements":[{"expression":{"hexValue":"3138","id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3544:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":546,"id":548,"nodeType":"Return","src":"3537:9:4"}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"2835:622:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":550,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3471:8:4","nodeType":"FunctionDefinition","overrides":{"id":543,"nodeType":"OverrideSpecifier","overrides":[],"src":"3502:8:4"},"parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"3479:2:4"},"returnParameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":550,"src":"3520:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":544,"name":"uint8","nodeType":"ElementaryTypeName","src":"3520:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3519:7:4"},"scope":1067,"src":"3462:91:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1094],"body":{"id":559,"nodeType":"Block","src":"3683:36:4","statements":[{"expression":{"id":557,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"3700:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":556,"id":558,"nodeType":"Return","src":"3693:19:4"}]},"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"3559:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":560,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3622:11:4","nodeType":"FunctionDefinition","overrides":{"id":553,"nodeType":"OverrideSpecifier","overrides":[],"src":"3656:8:4"},"parameters":{"id":552,"nodeType":"ParameterList","parameters":[],"src":"3633:2:4"},"returnParameters":{"id":556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":560,"src":"3674:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"3674:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3673:9:4"},"scope":1067,"src":"3613:106:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1102],"body":{"id":573,"nodeType":"Block","src":"3860:42:4","statements":[{"expression":{"baseExpression":{"id":569,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"3877:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":571,"indexExpression":{"id":570,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"3887:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":568,"id":572,"nodeType":"Return","src":"3870:25:4"}]},"documentation":{"id":561,"nodeType":"StructuredDocumentation","src":"3725:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":574,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3786:9:4","nodeType":"FunctionDefinition","overrides":{"id":565,"nodeType":"OverrideSpecifier","overrides":[],"src":"3833:8:4"},"parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"mutability":"mutable","name":"account","nameLocation":"3804:7:4","nodeType":"VariableDeclaration","scope":574,"src":"3796:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":562,"name":"address","nodeType":"ElementaryTypeName","src":"3796:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3795:17:4"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":574,"src":"3851:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"3851:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:9:4"},"scope":1067,"src":"3777:125:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1112],"body":{"id":598,"nodeType":"Block","src":"4183:104:4","statements":[{"assignments":[586],"declarations":[{"constant":false,"id":586,"mutability":"mutable","name":"owner","nameLocation":"4201:5:4","nodeType":"VariableDeclaration","scope":598,"src":"4193:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":585,"name":"address","nodeType":"ElementaryTypeName","src":"4193:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":589,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":587,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"4209:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4209:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4193:28:4"},{"expression":{"arguments":[{"id":591,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4241:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":592,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"4248:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":593,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4252:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":590,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"4231:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"ExpressionStatement","src":"4231:28:4"},{"expression":{"hexValue":"74727565","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4276:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":584,"id":597,"nodeType":"Return","src":"4269:11:4"}]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"3908:185:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":599,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4107:8:4","nodeType":"FunctionDefinition","overrides":{"id":581,"nodeType":"OverrideSpecifier","overrides":[],"src":"4159:8:4"},"parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"to","nameLocation":"4124:2:4","nodeType":"VariableDeclaration","scope":599,"src":"4116:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"4116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"amount","nameLocation":"4136:6:4","nodeType":"VariableDeclaration","scope":599,"src":"4128:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"4128:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:28:4"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":599,"src":"4177:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":582,"name":"bool","nodeType":"ElementaryTypeName","src":"4177:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4176:6:4"},"scope":1067,"src":"4098:189:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1122],"body":{"id":616,"nodeType":"Block","src":"4443:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":610,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4460:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":612,"indexExpression":{"id":611,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"4472:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4460:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":614,"indexExpression":{"id":613,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4479:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4460:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":609,"id":615,"nodeType":"Return","src":"4453:34:4"}]},"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"4293:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":617,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4354:9:4","nodeType":"FunctionDefinition","overrides":{"id":606,"nodeType":"OverrideSpecifier","overrides":[],"src":"4416:8:4"},"parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"owner","nameLocation":"4372:5:4","nodeType":"VariableDeclaration","scope":617,"src":"4364:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"4364:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"spender","nameLocation":"4387:7:4","nodeType":"VariableDeclaration","scope":617,"src":"4379:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"4379:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4363:32:4"},"returnParameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"4434:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4434:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4433:9:4"},"scope":1067,"src":"4345:149:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1132],"body":{"id":641,"nodeType":"Block","src":"4891:108:4","statements":[{"assignments":[629],"declarations":[{"constant":false,"id":629,"mutability":"mutable","name":"owner","nameLocation":"4909:5:4","nodeType":"VariableDeclaration","scope":641,"src":"4901:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"4901:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":632,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":630,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"4917:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4901:28:4"},{"expression":{"arguments":[{"id":634,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4948:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"4955:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":636,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"4964:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":633,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4939:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4939:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"ExpressionStatement","src":"4939:32:4"},{"expression":{"hexValue":"74727565","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4988:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":627,"id":640,"nodeType":"Return","src":"4981:11:4"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"4500:297:4","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":642,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4811:7:4","nodeType":"FunctionDefinition","overrides":{"id":624,"nodeType":"OverrideSpecifier","overrides":[],"src":"4867:8:4"},"parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"spender","nameLocation":"4827:7:4","nodeType":"VariableDeclaration","scope":642,"src":"4819:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"4819:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"amount","nameLocation":"4844:6:4","nodeType":"VariableDeclaration","scope":642,"src":"4836:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"4836:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4818:33:4"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":642,"src":"4885:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":625,"name":"bool","nodeType":"ElementaryTypeName","src":"4885:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4884:6:4"},"scope":1067,"src":"4802:197:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1144],"body":{"id":674,"nodeType":"Block","src":"5664:153:4","statements":[{"assignments":[656],"declarations":[{"constant":false,"id":656,"mutability":"mutable","name":"spender","nameLocation":"5682:7:4","nodeType":"VariableDeclaration","scope":674,"src":"5674:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"5674:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":659,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":657,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"5692:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5692:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5674:30:4"},{"expression":{"arguments":[{"id":661,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"5730:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":662,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"5736:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":663,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5745:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":660,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"5714:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5714:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":665,"nodeType":"ExpressionStatement","src":"5714:38:4"},{"expression":{"arguments":[{"id":667,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"5772:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"5778:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":669,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5782:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":666,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"5762:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5762:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"5762:27:4"},{"expression":{"hexValue":"74727565","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5806:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":654,"id":673,"nodeType":"Return","src":"5799:11:4"}]},"documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"5005:551:4","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":675,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5570:12:4","nodeType":"FunctionDefinition","overrides":{"id":651,"nodeType":"OverrideSpecifier","overrides":[],"src":"5640:8:4"},"parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"from","nameLocation":"5591:4:4","nodeType":"VariableDeclaration","scope":675,"src":"5583:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"5583:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"to","nameLocation":"5605:2:4","nodeType":"VariableDeclaration","scope":675,"src":"5597:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"5597:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"amount","nameLocation":"5617:6:4","nodeType":"VariableDeclaration","scope":675,"src":"5609:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"5609:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5582:42:4"},"returnParameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"5658:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":652,"name":"bool","nodeType":"ElementaryTypeName","src":"5658:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5657:6:4"},"scope":1067,"src":"5561:256:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":703,"nodeType":"Block","src":"6306:140:4","statements":[{"assignments":[686],"declarations":[{"constant":false,"id":686,"mutability":"mutable","name":"owner","nameLocation":"6324:5:4","nodeType":"VariableDeclaration","scope":703,"src":"6316:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"6316:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":689,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":687,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"6332:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6332:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6316:28:4"},{"expression":{"arguments":[{"id":691,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6363:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6370:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":694,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6389:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":695,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6396:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":693,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"6379:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":697,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6407:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6379:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":690,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"6354:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":700,"nodeType":"ExpressionStatement","src":"6354:64:4"},{"expression":{"hexValue":"74727565","id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6435:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":684,"id":702,"nodeType":"Return","src":"6428:11:4"}]},"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"5823:384:4","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":704,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"6221:17:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"spender","nameLocation":"6247:7:4","nodeType":"VariableDeclaration","scope":704,"src":"6239:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"6239:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"addedValue","nameLocation":"6264:10:4","nodeType":"VariableDeclaration","scope":704,"src":"6256:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"6256:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6238:37:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":704,"src":"6300:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":682,"name":"bool","nodeType":"ElementaryTypeName","src":"6300:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6299:6:4"},"scope":1067,"src":"6212:234:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":744,"nodeType":"Block","src":"7032:328:4","statements":[{"assignments":[715],"declarations":[{"constant":false,"id":715,"mutability":"mutable","name":"owner","nameLocation":"7050:5:4","nodeType":"VariableDeclaration","scope":744,"src":"7042:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"7042:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":718,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":716,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"7058:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7058:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7042:28:4"},{"assignments":[720],"declarations":[{"constant":false,"id":720,"mutability":"mutable","name":"currentAllowance","nameLocation":"7088:16:4","nodeType":"VariableDeclaration","scope":744,"src":"7080:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":719,"name":"uint256","nodeType":"ElementaryTypeName","src":"7080:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":725,"initialValue":{"arguments":[{"id":722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"7117:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"7124:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":721,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"7107:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7107:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7080:52:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"7150:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":728,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"7170:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7150:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7187:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7142:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7142:85:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":732,"nodeType":"ExpressionStatement","src":"7142:85:4"},{"id":741,"nodeType":"UncheckedBlock","src":"7237:95:4","statements":[{"expression":{"arguments":[{"id":734,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"7270:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":735,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"7277:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"7286:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":737,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"7305:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7286:34:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":733,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"7261:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7261:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"ExpressionStatement","src":"7261:60:4"}]},{"expression":{"hexValue":"74727565","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7349:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":713,"id":743,"nodeType":"Return","src":"7342:11:4"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"6452:476:4","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":745,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6942:17:4","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"spender","nameLocation":"6968:7:4","nodeType":"VariableDeclaration","scope":745,"src":"6960:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"6960:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"subtractedValue","nameLocation":"6985:15:4","nodeType":"VariableDeclaration","scope":745,"src":"6977:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"6977:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6959:42:4"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":745,"src":"7026:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":711,"name":"bool","nodeType":"ElementaryTypeName","src":"7026:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7025:6:4"},"scope":1067,"src":"6933:427:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":821,"nodeType":"Block","src":"7892:710:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":756,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"7910:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7926:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7918:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"7918:7:4","typeDescriptions":{}}},"id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7918:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7910:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7902:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7902:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":764,"nodeType":"ExpressionStatement","src":"7902:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":766,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7988:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8002:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7994:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"7994:7:4","typeDescriptions":{}}},"id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7994:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7988:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8006:37:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7980:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7980:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":774,"nodeType":"ExpressionStatement","src":"7980:64:4"},{"expression":{"arguments":[{"id":776,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"8076:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":777,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"8082:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":778,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"8086:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":775,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"8055:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8055:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"8055:38:4"},{"assignments":[782],"declarations":[{"constant":false,"id":782,"mutability":"mutable","name":"fromBalance","nameLocation":"8112:11:4","nodeType":"VariableDeclaration","scope":821,"src":"8104:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"8104:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":786,"initialValue":{"baseExpression":{"id":783,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"8126:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":785,"indexExpression":{"id":784,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"8136:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8126:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8104:37:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"8159:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":789,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"8174:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8159:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8182:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":787,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8151:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8151:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"8151:72:4"},{"id":808,"nodeType":"UncheckedBlock","src":"8233:273:4","statements":[{"expression":{"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":794,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"8257:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":796,"indexExpression":{"id":795,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"8267:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8257:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":797,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"8275:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":798,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"8289:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8275:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8257:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":801,"nodeType":"ExpressionStatement","src":"8257:38:4"},{"expression":{"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":802,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"8472:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":804,"indexExpression":{"id":803,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"8482:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8472:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":805,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"8489:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8472:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":807,"nodeType":"ExpressionStatement","src":"8472:23:4"}]},{"eventCall":{"arguments":[{"id":810,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"8530:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"8536:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"8540:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":809,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"8521:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"EmitStatement","src":"8516:31:4"},{"expression":{"arguments":[{"id":816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"8578:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"8584:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"8588:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":815,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"8558:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"ExpressionStatement","src":"8558:37:4"}]},"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"7366:443:4","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":822,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7823:9:4","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"from","nameLocation":"7841:4:4","nodeType":"VariableDeclaration","scope":822,"src":"7833:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"7833:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"to","nameLocation":"7855:2:4","nodeType":"VariableDeclaration","scope":822,"src":"7847:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"7847:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":752,"mutability":"mutable","name":"amount","nameLocation":"7867:6:4","nodeType":"VariableDeclaration","scope":822,"src":"7859:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"7859:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7832:42:4"},"returnParameters":{"id":754,"nodeType":"ParameterList","parameters":[],"src":"7892:0:4"},"scope":1067,"src":"7814:788:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":878,"nodeType":"Block","src":"8943:470:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"8961:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8980:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8972:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"8972:7:4","typeDescriptions":{}}},"id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8972:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8961:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8984:33:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8953:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8953:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"ExpressionStatement","src":"8953:65:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9058:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9050:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"9050:7:4","typeDescriptions":{}}},"id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9050:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":845,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"9062:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":846,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"9071:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":840,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"9029:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":848,"nodeType":"ExpressionStatement","src":"9029:49:4"},{"expression":{"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":849,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"9089:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":850,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"9105:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9089:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":852,"nodeType":"ExpressionStatement","src":"9089:22:4"},{"id":859,"nodeType":"UncheckedBlock","src":"9121:175:4","statements":[{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":853,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"9257:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":855,"indexExpression":{"id":854,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"9267:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9257:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":856,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"9279:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9257:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ExpressionStatement","src":"9257:28:4"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9327:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9319:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"9319:7:4","typeDescriptions":{}}},"id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9319:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":865,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"9331:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"9340:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":860,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"9310:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9310:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"EmitStatement","src":"9305:42:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9386:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9378:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"9378:7:4","typeDescriptions":{}}},"id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9378:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"9390:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"9399:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":869,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"9358:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9358:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":877,"nodeType":"ExpressionStatement","src":"9358:48:4"}]},"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"8608:265:4","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":879,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8887:5:4","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"account","nameLocation":"8901:7:4","nodeType":"VariableDeclaration","scope":879,"src":"8893:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"8893:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"amount","nameLocation":"8918:6:4","nodeType":"VariableDeclaration","scope":879,"src":"8910:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":826,"name":"uint256","nodeType":"ElementaryTypeName","src":"8910:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8892:33:4"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[],"src":"8943:0:4"},"scope":1067,"src":"8878:535:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"9798:594:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":888,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"9816:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9835:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9827:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"9827:7:4","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9827:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9816:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9839:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9808:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9808:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":896,"nodeType":"ExpressionStatement","src":"9808:67:4"},{"expression":{"arguments":[{"id":898,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"9907:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9924:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9916:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"9916:7:4","typeDescriptions":{}}},"id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9916:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":903,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9928:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":897,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"9886:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9886:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":905,"nodeType":"ExpressionStatement","src":"9886:49:4"},{"assignments":[907],"declarations":[{"constant":false,"id":907,"mutability":"mutable","name":"accountBalance","nameLocation":"9954:14:4","nodeType":"VariableDeclaration","scope":950,"src":"9946:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":906,"name":"uint256","nodeType":"ElementaryTypeName","src":"9946:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":911,"initialValue":{"baseExpression":{"id":908,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"9971:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":910,"indexExpression":{"id":909,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"9981:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9971:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9946:43:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":913,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"10007:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":914,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"10025:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10007:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10033:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9999:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9999:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":918,"nodeType":"ExpressionStatement","src":"9999:71:4"},{"id":931,"nodeType":"UncheckedBlock","src":"10080:194:4","statements":[{"expression":{"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":919,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"10104:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":921,"indexExpression":{"id":920,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"10114:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10104:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":922,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"10125:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":923,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"10142:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10125:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10104:44:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":926,"nodeType":"ExpressionStatement","src":"10104:44:4"},{"expression":{"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":927,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"10241:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":928,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"10257:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10241:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":930,"nodeType":"ExpressionStatement","src":"10241:22:4"}]},{"eventCall":{"arguments":[{"id":933,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"10298:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10307:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"10307:7:4","typeDescriptions":{}}},"id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10307:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"10319:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":932,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"10289:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10289:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"EmitStatement","src":"10284:42:4"},{"expression":{"arguments":[{"id":942,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"10357:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10374:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10366:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"10366:7:4","typeDescriptions":{}}},"id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10366:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":947,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"10378:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":941,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"10337:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10337:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"10337:48:4"}]},"documentation":{"id":880,"nodeType":"StructuredDocumentation","src":"9419:309:4","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9742:5:4","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"account","nameLocation":"9756:7:4","nodeType":"VariableDeclaration","scope":951,"src":"9748:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"9748:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"amount","nameLocation":"9773:6:4","nodeType":"VariableDeclaration","scope":951,"src":"9765:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"9765:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9747:33:4"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"9798:0:4"},"scope":1067,"src":"9733:659:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":995,"nodeType":"Block","src":"10898:257:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":962,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10916:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10933:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10925:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"10925:7:4","typeDescriptions":{}}},"id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10925:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10916:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10937:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":961,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10908:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10908:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"ExpressionStatement","src":"10908:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":972,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"10994:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11005:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"11005:7:4","typeDescriptions":{}}},"id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11005:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10994:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11017:36:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":971,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10986:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10986:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"ExpressionStatement","src":"10986:68:4"},{"expression":{"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":981,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"11065:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":984,"indexExpression":{"id":982,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"11077:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11065:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":985,"indexExpression":{"id":983,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11084:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11065:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":986,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11095:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11065:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"nodeType":"ExpressionStatement","src":"11065:36:4"},{"eventCall":{"arguments":[{"id":990,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"11125:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":991,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11132:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":992,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"11141:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":989,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"11116:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11116:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"EmitStatement","src":"11111:37:4"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"10398:412:4","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":996,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10824:8:4","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"owner","nameLocation":"10841:5:4","nodeType":"VariableDeclaration","scope":996,"src":"10833:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"10833:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"spender","nameLocation":"10856:7:4","nodeType":"VariableDeclaration","scope":996,"src":"10848:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"10848:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"amount","nameLocation":"10873:6:4","nodeType":"VariableDeclaration","scope":996,"src":"10865:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"10865:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10832:48:4"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"10898:0:4"},"scope":1067,"src":"10815:340:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"11526:321:4","statements":[{"assignments":[1007],"declarations":[{"constant":false,"id":1007,"mutability":"mutable","name":"currentAllowance","nameLocation":"11544:16:4","nodeType":"VariableDeclaration","scope":1038,"src":"11536:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1006,"name":"uint256","nodeType":"ElementaryTypeName","src":"11536:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1012,"initialValue":{"arguments":[{"id":1009,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"11573:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1010,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"11580:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1008,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"11563:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11563:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11536:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1013,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"11602:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11627:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"11627:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1014,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11622:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11622:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11636:3:4","memberName":"max","nodeType":"MemberAccess","src":"11622:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11602:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1037,"nodeType":"IfStatement","src":"11598:243:4","trueBody":{"id":1036,"nodeType":"Block","src":"11641:200:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1021,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"11663:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1022,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"11683:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11663:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11691:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11655:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11655:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"ExpressionStatement","src":"11655:68:4"},{"id":1035,"nodeType":"UncheckedBlock","src":"11737:94:4","statements":[{"expression":{"arguments":[{"id":1028,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"11774:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1029,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"11781:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1030,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"11790:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1031,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"11809:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11790:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1027,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"11765:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11765:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1034,"nodeType":"ExpressionStatement","src":"11765:51:4"}]}]}}]},"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"11161:270:4","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11445:15:4","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"owner","nameLocation":"11469:5:4","nodeType":"VariableDeclaration","scope":1039,"src":"11461:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"11461:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"spender","nameLocation":"11484:7:4","nodeType":"VariableDeclaration","scope":1039,"src":"11476:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"11476:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"amount","nameLocation":"11501:6:4","nodeType":"VariableDeclaration","scope":1039,"src":"11493:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"11493:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11460:48:4"},"returnParameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"11526:0:4"},"scope":1067,"src":"11436:411:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1049,"nodeType":"Block","src":"12520:2:4","statements":[]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"11853:573:4","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1050,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12440:20:4","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"from","nameLocation":"12469:4:4","nodeType":"VariableDeclaration","scope":1050,"src":"12461:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"12461:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"to","nameLocation":"12483:2:4","nodeType":"VariableDeclaration","scope":1050,"src":"12475:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"12475:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"amount","nameLocation":"12495:6:4","nodeType":"VariableDeclaration","scope":1050,"src":"12487:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"12487:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12460:42:4"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[],"src":"12520:0:4"},"scope":1067,"src":"12431:91:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1060,"nodeType":"Block","src":"13198:2:4","statements":[]},"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"12528:577:4","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1061,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13119:19:4","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"from","nameLocation":"13147:4:4","nodeType":"VariableDeclaration","scope":1061,"src":"13139:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"13139:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"to","nameLocation":"13161:2:4","nodeType":"VariableDeclaration","scope":1061,"src":"13153:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"13153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"amount","nameLocation":"13173:6:4","nodeType":"VariableDeclaration","scope":1061,"src":"13165:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"13165:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13138:42:4"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[],"src":"13198:0:4"},"scope":1067,"src":"13110:90:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"13206:254:4","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1066,"mutability":"mutable","name":"__gap","nameLocation":"13485:5:4","nodeType":"VariableDeclaration","scope":1067,"src":"13465:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage","typeString":"uint256[45]"},"typeName":{"baseType":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"13465:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1065,"length":{"hexValue":"3435","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13473:2:4","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"nodeType":"ArrayTypeName","src":"13465:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$45_storage_ptr","typeString":"uint256[45]"}},"visibility":"private"}],"scope":1068,"src":"1632:11861:4","usedErrors":[]}],"src":"105:13389:4"},"id":4},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[1145]},"id":1146,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1069,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"131:70:5","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1145,"linearizedBaseContracts":[1145],"name":"IERC20Upgradeable","nameLocation":"212:17:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1071,"nodeType":"StructuredDocumentation","src":"236:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1079,"name":"Transfer","nameLocation":"405:8:5","nodeType":"EventDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1073,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:5","nodeType":"VariableDeclaration","scope":1079,"src":"414:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1075,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:5","nodeType":"VariableDeclaration","scope":1079,"src":"436:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:5","nodeType":"VariableDeclaration","scope":1079,"src":"456:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:5"},"src":"399:72:5"},{"anonymous":false,"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"477:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1088,"name":"Approval","nameLocation":"636:8:5","nodeType":"EventDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:5","nodeType":"VariableDeclaration","scope":1088,"src":"645:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:5","nodeType":"VariableDeclaration","scope":1088,"src":"668:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1086,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:5","nodeType":"VariableDeclaration","scope":1088,"src":"693:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:5"},"src":"630:78:5"},{"documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"714:66:5","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1094,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:5","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[],"src":"805:2:5"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1094,"src":"831:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:5"},"scope":1145,"src":"785:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"846:72:5","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1102,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:5","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"account","nameLocation":"950:7:5","nodeType":"VariableDeclaration","scope":1102,"src":"942:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:5"},"returnParameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1102,"src":"982:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1099,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:5"},"scope":1145,"src":"923:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"997:202:5","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1112,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:5","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"to","nameLocation":"1230:2:5","nodeType":"VariableDeclaration","scope":1112,"src":"1222:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"amount","nameLocation":"1242:6:5","nodeType":"VariableDeclaration","scope":1112,"src":"1234:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:5"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1112,"src":"1268:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1109,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:5"},"scope":1145,"src":"1204:70:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"1280:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1122,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:5","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"owner","nameLocation":"1576:5:5","nodeType":"VariableDeclaration","scope":1122,"src":"1568:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"spender","nameLocation":"1591:7:5","nodeType":"VariableDeclaration","scope":1122,"src":"1583:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:5"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1122,"src":"1623:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:5"},"scope":1145,"src":"1549:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"1638:642:5","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1132,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:5","nodeType":"FunctionDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"spender","nameLocation":"2310:7:5","nodeType":"VariableDeclaration","scope":1132,"src":"2302:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"amount","nameLocation":"2327:6:5","nodeType":"VariableDeclaration","scope":1132,"src":"2319:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:5"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1132,"src":"2353:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1129,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:5"},"scope":1145,"src":"2285:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1133,"nodeType":"StructuredDocumentation","src":"2365:287:5","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1144,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:5","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"from","nameLocation":"2687:4:5","nodeType":"VariableDeclaration","scope":1144,"src":"2679:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"to","nameLocation":"2701:2:5","nodeType":"VariableDeclaration","scope":1144,"src":"2693:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1136,"name":"address","nodeType":"ElementaryTypeName","src":"2693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"amount","nameLocation":"2713:6:5","nodeType":"VariableDeclaration","scope":1144,"src":"2705:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:42:5"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1144,"src":"2739:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1141,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:5"},"scope":1145,"src":"2657:88:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1146,"src":"202:2545:5","usedErrors":[]}],"src":"106:2642:5"},"id":5},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1847],"ERC20BurnableUpgradeable":[1210],"ERC20Upgradeable":[1067],"IERC20MetadataUpgradeable":[1427],"IERC20Upgradeable":[1145],"Initializable":[326]},"id":1211,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1147,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":1068,"src":"149:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../../utils/ContextUpgradeable.sol","id":1149,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":1848,"src":"183:47:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":327,"src":"231:69:6","symbolAliases":[{"foreign":{"id":1150,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"239:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1153,"name":"Initializable","nameLocations":["557:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"557:13:6"},"id":1154,"nodeType":"InheritanceSpecifier","src":"557:13:6"},{"baseName":{"id":1155,"name":"ContextUpgradeable","nameLocations":["572:18:6"],"nodeType":"IdentifierPath","referencedDeclaration":1847,"src":"572:18:6"},"id":1156,"nodeType":"InheritanceSpecifier","src":"572:18:6"},{"baseName":{"id":1157,"name":"ERC20Upgradeable","nameLocations":["592:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"592:16:6"},"id":1158,"nodeType":"InheritanceSpecifier","src":"592:16:6"}],"canonicalName":"ERC20BurnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"302:208:6","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1210,"linearizedBaseContracts":[1210,1067,1427,1145,1847,326],"name":"ERC20BurnableUpgradeable","nameLocation":"529:24:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1163,"nodeType":"Block","src":"673:7:6","statements":[]},"id":1164,"implemented":true,"kind":"function","modifiers":[{"id":1161,"kind":"modifierInvocation","modifierName":{"id":1160,"name":"onlyInitializing","nameLocations":["656:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"656:16:6"},"nodeType":"ModifierInvocation","src":"656:16:6"}],"name":"__ERC20Burnable_init","nameLocation":"624:20:6","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[],"src":"644:2:6"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[],"src":"673:0:6"},"scope":1210,"src":"615:65:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1169,"nodeType":"Block","src":"754:7:6","statements":[]},"id":1170,"implemented":true,"kind":"function","modifiers":[{"id":1167,"kind":"modifierInvocation","modifierName":{"id":1166,"name":"onlyInitializing","nameLocations":["737:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"737:16:6"},"nodeType":"ModifierInvocation","src":"737:16:6"}],"name":"__ERC20Burnable_init_unchained","nameLocation":"695:30:6","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[],"src":"725:2:6"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[],"src":"754:0:6"},"scope":1210,"src":"686:75:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1182,"nodeType":"Block","src":"914:44:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1177,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"930:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"930:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"944:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1176,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"924:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"924:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"ExpressionStatement","src":"924:27:6"}]},"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"766:98:6","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1183,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"878:4:6","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"amount","nameLocation":"891:6:6","nodeType":"VariableDeclaration","scope":1183,"src":"883:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"883:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"882:16:6"},"returnParameters":{"id":1175,"nodeType":"ParameterList","parameters":[],"src":"914:0:6"},"scope":1210,"src":"869:89:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1203,"nodeType":"Block","src":"1330:95:6","statements":[{"expression":{"arguments":[{"id":1192,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"1356:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1193,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"1365:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1365:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1195,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"1379:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1191,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1340:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1340:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1197,"nodeType":"ExpressionStatement","src":"1340:46:6"},{"expression":{"arguments":[{"id":1199,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"1402:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1200,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"1411:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1198,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"1396:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1396:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"1396:22:6"}]},"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"964:295:6","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":1204,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1273:8:6","nodeType":"FunctionDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"account","nameLocation":"1290:7:6","nodeType":"VariableDeclaration","scope":1204,"src":"1282:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"1282:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"amount","nameLocation":"1307:6:6","nodeType":"VariableDeclaration","scope":1204,"src":"1299:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1281:33:6"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"1330:0:6"},"scope":1210,"src":"1264:161:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"constant":false,"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"1431:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1209,"mutability":"mutable","name":"__gap","nameLocation":"1710:5:6","nodeType":"VariableDeclaration","scope":1210,"src":"1690:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1690:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"length":{"hexValue":"3530","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1698:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1690:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1211,"src":"511:1207:6","usedErrors":[]}],"src":"124:1595:6"},"id":6},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1847],"CountersUpgradeable":[1921],"ECDSAUpgradeable":[2516],"EIP712Upgradeable":[2801],"ERC20PermitUpgradeable":[1402],"ERC20Upgradeable":[1067],"IERC20MetadataUpgradeable":[1427],"IERC20PermitUpgradeable":[1463],"IERC20Upgradeable":[1145],"IERC5267Upgradeable":[157],"Initializable":[326],"MathUpgradeable":[3667],"SignedMathUpgradeable":[3772],"StringsUpgradeable":[2150]},"id":1403,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1212,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"122:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol","file":"./IERC20PermitUpgradeable.sol","id":1213,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1403,"sourceUnit":1464,"src":"147:39:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1403,"sourceUnit":1068,"src":"187:33:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"../../../utils/cryptography/ECDSAUpgradeable.sol","id":1215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1403,"sourceUnit":2517,"src":"221:58:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"../../../utils/cryptography/EIP712Upgradeable.sol","id":1216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1403,"sourceUnit":2802,"src":"280:59:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","file":"../../../utils/CountersUpgradeable.sol","id":1217,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1403,"sourceUnit":1922,"src":"340:48:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1403,"sourceUnit":327,"src":"389:69:7","symbolAliases":[{"foreign":{"id":1218,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"397:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1221,"name":"Initializable","nameLocations":["1052:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"1052:13:7"},"id":1222,"nodeType":"InheritanceSpecifier","src":"1052:13:7"},{"baseName":{"id":1223,"name":"ERC20Upgradeable","nameLocations":["1067:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"1067:16:7"},"id":1224,"nodeType":"InheritanceSpecifier","src":"1067:16:7"},{"baseName":{"id":1225,"name":"IERC20PermitUpgradeable","nameLocations":["1085:23:7"],"nodeType":"IdentifierPath","referencedDeclaration":1463,"src":"1085:23:7"},"id":1226,"nodeType":"InheritanceSpecifier","src":"1085:23:7"},{"baseName":{"id":1227,"name":"EIP712Upgradeable","nameLocations":["1110:17:7"],"nodeType":"IdentifierPath","referencedDeclaration":2801,"src":"1110:17:7"},"id":1228,"nodeType":"InheritanceSpecifier","src":"1110:17:7"}],"canonicalName":"ERC20PermitUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"460:547:7","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._\n @custom:storage-size 51"},"fullyImplemented":true,"id":1402,"linearizedBaseContracts":[1402,2801,157,1463,1067,1427,1145,1847,326],"name":"ERC20PermitUpgradeable","nameLocation":"1026:22:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1232,"libraryName":{"id":1229,"name":"CountersUpgradeable","nameLocations":["1140:19:7"],"nodeType":"IdentifierPath","referencedDeclaration":1921,"src":"1140:19:7"},"nodeType":"UsingForDirective","src":"1134:58:7","typeName":{"id":1231,"nodeType":"UserDefinedTypeName","pathNode":{"id":1230,"name":"CountersUpgradeable.Counter","nameLocations":["1164:19:7","1184:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"1164:27:7"},"referencedDeclaration":1853,"src":"1164:27:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},{"constant":false,"id":1237,"mutability":"mutable","name":"_nonces","nameLocation":"1254:7:7","nodeType":"VariableDeclaration","scope":1402,"src":"1198:63:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1853_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter)"},"typeName":{"id":1236,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1198:47:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1853_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1235,"nodeType":"UserDefinedTypeName","pathNode":{"id":1234,"name":"CountersUpgradeable.Counter","nameLocations":["1217:19:7","1237:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"1217:27:7"},"referencedDeclaration":1853,"src":"1217:27:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}}},"visibility":"private"},{"constant":true,"id":1242,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1345:16:7","nodeType":"VariableDeclaration","scope":1402,"src":"1320:147:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1320:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1382:84:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1239,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1372:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1372:95:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1243,"nodeType":"StructuredDocumentation","src":"1473:254:7","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1245,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1800:32:7","nodeType":"VariableDeclaration","scope":1402,"src":"1784:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1784:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1258,"nodeType":"Block","src":"2138:51:7","statements":[{"expression":{"arguments":[{"id":1254,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"2172:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2178:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":1253,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"2148:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2148:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"2148:34:7"}]},"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"1839:220:7","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1259,"implemented":true,"kind":"function","modifiers":[{"id":1251,"kind":"modifierInvocation","modifierName":{"id":1250,"name":"onlyInitializing","nameLocations":["2121:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"2121:16:7"},"nodeType":"ModifierInvocation","src":"2121:16:7"}],"name":"__ERC20Permit_init","nameLocation":"2073:18:7","nodeType":"FunctionDefinition","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"name","nameLocation":"2106:4:7","nodeType":"VariableDeclaration","scope":1259,"src":"2092:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1247,"name":"string","nodeType":"ElementaryTypeName","src":"2092:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2091:20:7"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[],"src":"2138:0:7"},"scope":1402,"src":"2064:125:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"2274:2:7","statements":[]},"id":1267,"implemented":true,"kind":"function","modifiers":[{"id":1264,"kind":"modifierInvocation","modifierName":{"id":1263,"name":"onlyInitializing","nameLocations":["2257:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"2257:16:7"},"nodeType":"ModifierInvocation","src":"2257:16:7"}],"name":"__ERC20Permit_init_unchained","nameLocation":"2204:28:7","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1267,"src":"2233:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1260,"name":"string","nodeType":"ElementaryTypeName","src":"2233:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2232:15:7"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[],"src":"2274:0:7"},"scope":1402,"src":"2195:81:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1448],"body":{"id":1339,"nodeType":"Block","src":"2539:439:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1287,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2557:5:7","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2563:9:7","memberName":"timestamp","nodeType":"MemberAccess","src":"2557:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1289,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"2576:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2557:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2586:31:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1286,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2549:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2549:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1293,"nodeType":"ExpressionStatement","src":"2549:69:7"},{"assignments":[1295],"declarations":[{"constant":false,"id":1295,"mutability":"mutable","name":"structHash","nameLocation":"2637:10:7","nodeType":"VariableDeclaration","scope":1339,"src":"2629:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2629:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1309,"initialValue":{"arguments":[{"arguments":[{"id":1299,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"2671:16:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1300,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"2689:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1301,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"2696:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"2705:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1304,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"2722:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1303,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"2712:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2712:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1306,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"2730:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1297,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2660:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2664:6:7","memberName":"encode","nodeType":"MemberAccess","src":"2660:10:7","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1296,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2650:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:90:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2629:111:7"},{"assignments":[1311],"declarations":[{"constant":false,"id":1311,"mutability":"mutable","name":"hash","nameLocation":"2759:4:7","nodeType":"VariableDeclaration","scope":1339,"src":"2751:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2751:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1315,"initialValue":{"arguments":[{"id":1313,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"2783:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1312,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"2766:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2766:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2751:43:7"},{"assignments":[1317],"declarations":[{"constant":false,"id":1317,"mutability":"mutable","name":"signer","nameLocation":"2813:6:7","nodeType":"VariableDeclaration","scope":1339,"src":"2805:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1325,"initialValue":{"arguments":[{"id":1320,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"2847:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1321,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"2853:1:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1322,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"2856:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1323,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"2859:1:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1318,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"2822:16:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$2516_$","typeString":"type(library ECDSAUpgradeable)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2839:7:7","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2451,"src":"2822:24:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2805:56:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1327,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"2879:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"2889:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2879:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2896:32:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2871:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1332,"nodeType":"ExpressionStatement","src":"2871:58:7"},{"expression":{"arguments":[{"id":1334,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"2949:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1335,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"2956:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"2965:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1333,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2940:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2940:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1338,"nodeType":"ExpressionStatement","src":"2940:31:7"}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"2282:54:7","text":" @inheritdoc IERC20PermitUpgradeable"},"functionSelector":"d505accf","id":1340,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2350:6:7","nodeType":"FunctionDefinition","overrides":{"id":1284,"nodeType":"OverrideSpecifier","overrides":[],"src":"2530:8:7"},"parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"owner","nameLocation":"2374:5:7","nodeType":"VariableDeclaration","scope":1340,"src":"2366:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"2366:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"spender","nameLocation":"2397:7:7","nodeType":"VariableDeclaration","scope":1340,"src":"2389:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"2389:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"value","nameLocation":"2422:5:7","nodeType":"VariableDeclaration","scope":1340,"src":"2414:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2414:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"deadline","nameLocation":"2445:8:7","nodeType":"VariableDeclaration","scope":1340,"src":"2437:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"2437:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"v","nameLocation":"2469:1:7","nodeType":"VariableDeclaration","scope":1340,"src":"2463:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1277,"name":"uint8","nodeType":"ElementaryTypeName","src":"2463:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"r","nameLocation":"2488:1:7","nodeType":"VariableDeclaration","scope":1340,"src":"2480:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2480:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1282,"mutability":"mutable","name":"s","nameLocation":"2507:1:7","nodeType":"VariableDeclaration","scope":1340,"src":"2499:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2499:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2356:158:7"},"returnParameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"2539:0:7"},"scope":1402,"src":"2341:637:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1456],"body":{"id":1355,"nodeType":"Block","src":"3121:48:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1349,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"3138:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1853_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter storage ref)"}},"id":1351,"indexExpression":{"id":1350,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"3146:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3138:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"id":1352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3153:7:7","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1865,"src":"3138:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1853_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1853_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1348,"id":1354,"nodeType":"Return","src":"3131:31:7"}]},"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"2984:54:7","text":" @inheritdoc IERC20PermitUpgradeable"},"functionSelector":"7ecebe00","id":1356,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3052:6:7","nodeType":"FunctionDefinition","overrides":{"id":1345,"nodeType":"OverrideSpecifier","overrides":[],"src":"3094:8:7"},"parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"owner","nameLocation":"3067:5:7","nodeType":"VariableDeclaration","scope":1356,"src":"3059:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"3059:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3058:15:7"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1356,"src":"3112:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"3112:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3111:9:7"},"scope":1402,"src":"3043:126:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1462],"body":{"id":1366,"nodeType":"Block","src":"3356:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1363,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"3373:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3373:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1362,"id":1365,"nodeType":"Return","src":"3366:27:7"}]},"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"3175:54:7","text":" @inheritdoc IERC20PermitUpgradeable"},"functionSelector":"3644e515","id":1367,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3296:16:7","nodeType":"FunctionDefinition","overrides":{"id":1359,"nodeType":"OverrideSpecifier","overrides":[],"src":"3329:8:7"},"parameters":{"id":1358,"nodeType":"ParameterList","parameters":[],"src":"3312:2:7"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1367,"src":"3347:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3347:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3346:9:7"},"scope":1402,"src":"3287:113:7","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1395,"nodeType":"Block","src":"3608:137:7","statements":[{"assignments":[1379],"declarations":[{"constant":false,"id":1379,"mutability":"mutable","name":"nonce","nameLocation":"3654:5:7","nodeType":"VariableDeclaration","scope":1395,"src":"3618:41:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1378,"nodeType":"UserDefinedTypeName","pathNode":{"id":1377,"name":"CountersUpgradeable.Counter","nameLocations":["3618:19:7","3638:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"3618:27:7"},"referencedDeclaration":1853,"src":"3618:27:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"id":1383,"initialValue":{"baseExpression":{"id":1380,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"3662:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1853_storage_$","typeString":"mapping(address => struct CountersUpgradeable.Counter storage ref)"}},"id":1382,"indexExpression":{"id":1381,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"3670:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3662:14:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage","typeString":"struct CountersUpgradeable.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3618:58:7"},{"expression":{"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1384,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"3686:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1385,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"3696:5:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3702:7:7","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1865,"src":"3696:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1853_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1853_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3696:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3686:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1389,"nodeType":"ExpressionStatement","src":"3686:25:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1390,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"3721:5:7","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3727:9:7","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1879,"src":"3721:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1853_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1853_storage_ptr_$","typeString":"function (struct CountersUpgradeable.Counter storage pointer)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1394,"nodeType":"ExpressionStatement","src":"3721:17:7"}]},"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"3406:120:7","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1396,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3540:9:7","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"owner","nameLocation":"3558:5:7","nodeType":"VariableDeclaration","scope":1396,"src":"3550:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"3550:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3549:15:7"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"current","nameLocation":"3599:7:7","nodeType":"VariableDeclaration","scope":1396,"src":"3591:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"3591:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3590:17:7"},"scope":1402,"src":"3531:214:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"3751:254:7","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1401,"mutability":"mutable","name":"__gap","nameLocation":"4030:5:7","nodeType":"VariableDeclaration","scope":1402,"src":"4010:25:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"4010:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1400,"length":{"hexValue":"3439","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4018:2:7","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"4010:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":1403,"src":"1008:3030:7","usedErrors":[]}],"src":"122:3917:7"},"id":7},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol","exportedSymbols":{"IERC20MetadataUpgradeable":[1427],"IERC20Upgradeable":[1145]},"id":1428,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1404,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"../IERC20Upgradeable.sol","id":1405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1428,"sourceUnit":1146,"src":"135:34:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1407,"name":"IERC20Upgradeable","nameLocations":["327:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":1145,"src":"327:17:8"},"id":1408,"nodeType":"InheritanceSpecifier","src":"327:17:8"}],"canonicalName":"IERC20MetadataUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"171:116:8","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1427,"linearizedBaseContracts":[1427,1145],"name":"IERC20MetadataUpgradeable","nameLocation":"298:25:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"351:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1414,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"419:4:8","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[],"src":"423:2:8"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1414,"src":"449:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1411,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"448:15:8"},"scope":1427,"src":"410:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"470:56:8","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1420,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"540:6:8","nodeType":"FunctionDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[],"src":"546:2:8"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1420,"src":"572:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1417,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"571:15:8"},"scope":1427,"src":"531:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"593:65:8","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1426,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"672:8:8","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[],"src":"680:2:8"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"706:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1423,"name":"uint8","nodeType":"ElementaryTypeName","src":"706:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"705:7:8"},"scope":1427,"src":"663:50:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1428,"src":"288:427:8","usedErrors":[]}],"src":"110:606:8"},"id":8},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol","exportedSymbols":{"IERC20PermitUpgradeable":[1463]},"id":1464,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1429,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20PermitUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1430,"nodeType":"StructuredDocumentation","src":"148:1963:9","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1463,"linearizedBaseContracts":[1463],"name":"IERC20PermitUpgradeable","nameLocation":"2122:23:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1431,"nodeType":"StructuredDocumentation","src":"2152:850:9","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1448,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3016:6:9","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"owner","nameLocation":"3040:5:9","nodeType":"VariableDeclaration","scope":1448,"src":"3032:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1432,"name":"address","nodeType":"ElementaryTypeName","src":"3032:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"spender","nameLocation":"3063:7:9","nodeType":"VariableDeclaration","scope":1448,"src":"3055:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"3055:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"value","nameLocation":"3088:5:9","nodeType":"VariableDeclaration","scope":1448,"src":"3080:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"3080:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"deadline","nameLocation":"3111:8:9","nodeType":"VariableDeclaration","scope":1448,"src":"3103:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"3103:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"v","nameLocation":"3135:1:9","nodeType":"VariableDeclaration","scope":1448,"src":"3129:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1440,"name":"uint8","nodeType":"ElementaryTypeName","src":"3129:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"r","nameLocation":"3154:1:9","nodeType":"VariableDeclaration","scope":1448,"src":"3146:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1442,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3146:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1445,"mutability":"mutable","name":"s","nameLocation":"3173:1:9","nodeType":"VariableDeclaration","scope":1448,"src":"3165:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3165:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3022:158:9"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"3189:0:9"},"scope":1463,"src":"3007:183:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1449,"nodeType":"StructuredDocumentation","src":"3196:294:9","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1456,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3504:6:9","nodeType":"FunctionDefinition","parameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"owner","nameLocation":"3519:5:9","nodeType":"VariableDeclaration","scope":1456,"src":"3511:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"3511:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3510:15:9"},"returnParameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1456,"src":"3549:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3549:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3548:9:9"},"scope":1463,"src":"3495:63:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"3564:128:9","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1462,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3759:16:9","nodeType":"FunctionDefinition","parameters":{"id":1458,"nodeType":"ParameterList","parameters":[],"src":"3775:2:9"},"returnParameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1462,"src":"3801:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3801:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3800:9:9"},"scope":1463,"src":"3750:60:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1464,"src":"2112:1700:9","usedErrors":[]}],"src":"123:3690:9"},"id":9},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1847],"CountersUpgradeable":[1921],"ECDSAUpgradeable":[2516],"EIP712Upgradeable":[2801],"ERC20PermitUpgradeable":[1402],"ERC20Upgradeable":[1067],"IERC20MetadataUpgradeable":[1427],"IERC20PermitUpgradeable":[1463],"IERC20Upgradeable":[1145],"IERC5267Upgradeable":[157],"Initializable":[326],"MathUpgradeable":[3667],"SignedMathUpgradeable":[3772],"StringsUpgradeable":[2150]},"id":1467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1465,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:10"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","file":"./ERC20PermitUpgradeable.sol","id":1466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1467,"sourceUnit":1403,"src":"218:38:10","symbolAliases":[],"unitAlias":""}],"src":"128:129:10"},"id":10},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1796]},"id":1797,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1468,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"126:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1796,"linearizedBaseContracts":[1796],"name":"AddressUpgradeable","nameLocation":"202:18:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1483,"nodeType":"Block","src":"1489:254:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1477,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"1713:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:11","memberName":"code","nodeType":"MemberAccess","src":"1713:12:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:11","memberName":"length","nodeType":"MemberAccess","src":"1713:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1476,"id":1482,"nodeType":"Return","src":"1706:30:11"}]},"documentation":{"id":1470,"nodeType":"StructuredDocumentation","src":"227:1191:11","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1484,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:11","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"account","nameLocation":"1451:7:11","nodeType":"VariableDeclaration","scope":1484,"src":"1443:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:11"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1484,"src":"1483:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1474,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:11"},"scope":1796,"src":"1423:320:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1517,"nodeType":"Block","src":"2729:241:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1495,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1796","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1796","typeString":"library AddressUpgradeable"}],"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:11","typeDescriptions":{}}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:11","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1498,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"2772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1502,"nodeType":"ExpressionStatement","src":"2739:73:11"},{"assignments":[1504,null],"declarations":[{"constant":false,"id":1504,"mutability":"mutable","name":"success","nameLocation":"2829:7:11","nodeType":"VariableDeclaration","scope":1517,"src":"2824:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1503,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1511,"initialValue":{"arguments":[{"hexValue":"","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1505,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"2842:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:11","memberName":"call","nodeType":"MemberAccess","src":"2842:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1507,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"2864:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:11"},{"expression":{"arguments":[{"id":1513,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2893:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1516,"nodeType":"ExpressionStatement","src":"2885:78:11"}]},"documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"1749:904:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1518,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:11","nodeType":"FunctionDefinition","parameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:11","nodeType":"VariableDeclaration","scope":1518,"src":"2677:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1489,"mutability":"mutable","name":"amount","nameLocation":"2712:6:11","nodeType":"VariableDeclaration","scope":1518,"src":"2704:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:11"},"returnParameters":{"id":1491,"nodeType":"ParameterList","parameters":[],"src":"2729:0:11"},"scope":1796,"src":"2658:312:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1535,"nodeType":"Block","src":"3801:96:11","statements":[{"expression":{"arguments":[{"id":1529,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"3840:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1530,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"3848:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1528,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1576,1620],"referencedDeclaration":1620,"src":"3818:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1527,"id":1534,"nodeType":"Return","src":"3811:79:11"}]},"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"2976:731:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1536,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:11","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"target","nameLocation":"3742:6:11","nodeType":"VariableDeclaration","scope":1536,"src":"3734:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1523,"mutability":"mutable","name":"data","nameLocation":"3763:4:11","nodeType":"VariableDeclaration","scope":1536,"src":"3750:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1522,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:11"},"returnParameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1536,"src":"3787:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1525,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:11"},"scope":1796,"src":"3712:185:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1555,"nodeType":"Block","src":"4266:76:11","statements":[{"expression":{"arguments":[{"id":1549,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"4305:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1550,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"4313:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1552,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"4322:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1548,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1576,1620],"referencedDeclaration":1620,"src":"4283:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1547,"id":1554,"nodeType":"Return","src":"4276:59:11"}]},"documentation":{"id":1537,"nodeType":"StructuredDocumentation","src":"3903:211:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1556,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:11","nodeType":"FunctionDefinition","parameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"target","nameLocation":"4158:6:11","nodeType":"VariableDeclaration","scope":1556,"src":"4150:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"data","nameLocation":"4187:4:11","nodeType":"VariableDeclaration","scope":1556,"src":"4174:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1540,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:11","nodeType":"VariableDeclaration","scope":1556,"src":"4201:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1542,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:11"},"returnParameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1556,"src":"4252:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1545,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:11"},"scope":1796,"src":"4119:223:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1575,"nodeType":"Block","src":"4817:111:11","statements":[{"expression":{"arguments":[{"id":1569,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"4856:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1570,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"4864:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"4870:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1568,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1576,1620],"referencedDeclaration":1620,"src":"4834:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1567,"id":1574,"nodeType":"Return","src":"4827:94:11"}]},"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"4348:351:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1576,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:11","nodeType":"FunctionDefinition","parameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"target","nameLocation":"4743:6:11","nodeType":"VariableDeclaration","scope":1576,"src":"4735:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1558,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"data","nameLocation":"4764:4:11","nodeType":"VariableDeclaration","scope":1576,"src":"4751:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1560,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1563,"mutability":"mutable","name":"value","nameLocation":"4778:5:11","nodeType":"VariableDeclaration","scope":1576,"src":"4770:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:11"},"returnParameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1576,"src":"4803:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1565,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:11"},"scope":1796,"src":"4704:224:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1619,"nodeType":"Block","src":"5355:267:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1593,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1796","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1796","typeString":"library AddressUpgradeable"}],"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:11","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:11","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"5398:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1600,"nodeType":"ExpressionStatement","src":"5365:81:11"},{"assignments":[1602,1604],"declarations":[{"constant":false,"id":1602,"mutability":"mutable","name":"success","nameLocation":"5462:7:11","nodeType":"VariableDeclaration","scope":1619,"src":"5457:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1601,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:11","nodeType":"VariableDeclaration","scope":1619,"src":"5471:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1603,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1611,"initialValue":{"arguments":[{"id":1609,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"5524:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1605,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"5498:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:11","memberName":"call","nodeType":"MemberAccess","src":"5498:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"5517:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:11"},{"expression":{"arguments":[{"id":1613,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"5573:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1614,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"5581:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1615,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"5590:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1616,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"5602:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1612,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"5546:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1589,"id":1618,"nodeType":"Return","src":"5539:76:11"}]},"documentation":{"id":1577,"nodeType":"StructuredDocumentation","src":"4934:237:11","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1620,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:11","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"target","nameLocation":"5224:6:11","nodeType":"VariableDeclaration","scope":1620,"src":"5216:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1578,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1581,"mutability":"mutable","name":"data","nameLocation":"5253:4:11","nodeType":"VariableDeclaration","scope":1620,"src":"5240:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1580,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"value","nameLocation":"5275:5:11","nodeType":"VariableDeclaration","scope":1620,"src":"5267:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1585,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:11","nodeType":"VariableDeclaration","scope":1620,"src":"5290:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1584,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:11"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1620,"src":"5341:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1587,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:11"},"scope":1796,"src":"5176:446:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"5899:97:11","statements":[{"expression":{"arguments":[{"id":1631,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"5935:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1632,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"5943:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1630,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1637,1666],"referencedDeclaration":1666,"src":"5916:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1629,"id":1635,"nodeType":"Return","src":"5909:80:11"}]},"documentation":{"id":1621,"nodeType":"StructuredDocumentation","src":"5628:166:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:11","nodeType":"FunctionDefinition","parameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"target","nameLocation":"5835:6:11","nodeType":"VariableDeclaration","scope":1637,"src":"5827:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"data","nameLocation":"5856:4:11","nodeType":"VariableDeclaration","scope":1637,"src":"5843:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1624,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:11"},"returnParameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"5885:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1627,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:11"},"scope":1796,"src":"5799:197:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1665,"nodeType":"Block","src":"6338:168:11","statements":[{"assignments":[1650,1652],"declarations":[{"constant":false,"id":1650,"mutability":"mutable","name":"success","nameLocation":"6354:7:11","nodeType":"VariableDeclaration","scope":1665,"src":"6349:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1649,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:11","nodeType":"VariableDeclaration","scope":1665,"src":"6363:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1651,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1657,"initialValue":{"arguments":[{"id":1655,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"6408:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1653,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"6390:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:11"},{"expression":{"arguments":[{"id":1659,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"6457:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1660,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"6465:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1661,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"6474:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1662,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"6486:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1658,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"6430:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1648,"id":1664,"nodeType":"Return","src":"6423:76:11"}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"6002:173:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1666,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:11","nodeType":"FunctionDefinition","parameters":{"id":1645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"target","nameLocation":"6225:6:11","nodeType":"VariableDeclaration","scope":1666,"src":"6217:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"data","nameLocation":"6254:4:11","nodeType":"VariableDeclaration","scope":1666,"src":"6241:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1641,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:11","nodeType":"VariableDeclaration","scope":1666,"src":"6268:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1643,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:11"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"6324:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1646,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:11"},"scope":1796,"src":"6180:326:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1682,"nodeType":"Block","src":"6782:101:11","statements":[{"expression":{"arguments":[{"id":1677,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"6820:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1678,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"6828:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1676,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1683,1712],"referencedDeclaration":1712,"src":"6799:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1675,"id":1681,"nodeType":"Return","src":"6792:84:11"}]},"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"6512:168:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1683,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:11","nodeType":"FunctionDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"target","nameLocation":"6723:6:11","nodeType":"VariableDeclaration","scope":1683,"src":"6715:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1668,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1671,"mutability":"mutable","name":"data","nameLocation":"6744:4:11","nodeType":"VariableDeclaration","scope":1683,"src":"6731:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1670,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:11"},"returnParameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1683,"src":"6768:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:11"},"scope":1796,"src":"6685:198:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1711,"nodeType":"Block","src":"7224:170:11","statements":[{"assignments":[1696,1698],"declarations":[{"constant":false,"id":1696,"mutability":"mutable","name":"success","nameLocation":"7240:7:11","nodeType":"VariableDeclaration","scope":1711,"src":"7235:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1695,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:11","nodeType":"VariableDeclaration","scope":1711,"src":"7249:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1697,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1703,"initialValue":{"arguments":[{"id":1701,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"7296:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1699,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"7276:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:11"},{"expression":{"arguments":[{"id":1705,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"7345:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"7353:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1707,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"7362:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1708,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"7374:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1704,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"7318:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1694,"id":1710,"nodeType":"Return","src":"7311:76:11"}]},"documentation":{"id":1684,"nodeType":"StructuredDocumentation","src":"6889:175:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:11","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"target","nameLocation":"7116:6:11","nodeType":"VariableDeclaration","scope":1712,"src":"7108:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"data","nameLocation":"7145:4:11","nodeType":"VariableDeclaration","scope":1712,"src":"7132:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1687,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:11","nodeType":"VariableDeclaration","scope":1712,"src":"7159:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1689,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:11"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1712,"src":"7210:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1692,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:11"},"scope":1796,"src":"7069:325:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1750,"nodeType":"Block","src":"7876:434:11","statements":[{"condition":{"id":1726,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"7890:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1748,"nodeType":"Block","src":"8246:58:11","statements":[{"expression":{"arguments":[{"id":1744,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"8268:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1745,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"8280:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1743,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"8260:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1747,"nodeType":"ExpressionStatement","src":"8260:33:11"}]},"id":1749,"nodeType":"IfStatement","src":"7886:418:11","trueBody":{"id":1742,"nodeType":"Block","src":"7899:341:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1727,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"7917:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:11","memberName":"length","nodeType":"MemberAccess","src":"7917:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1739,"nodeType":"IfStatement","src":"7913:286:11","trueBody":{"id":1738,"nodeType":"Block","src":"7941:258:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":1733,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"8143:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1732,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"8132:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1737,"nodeType":"ExpressionStatement","src":"8124:60:11"}]}},{"expression":{"id":1740,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"8219:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1725,"id":1741,"nodeType":"Return","src":"8212:17:11"}]}}]},"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"7400:277:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1751,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:11","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"target","nameLocation":"7735:6:11","nodeType":"VariableDeclaration","scope":1751,"src":"7727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1714,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"success","nameLocation":"7756:7:11","nodeType":"VariableDeclaration","scope":1751,"src":"7751:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1716,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1719,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:11","nodeType":"VariableDeclaration","scope":1751,"src":"7773:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1718,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:11","nodeType":"VariableDeclaration","scope":1751,"src":"7806:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1720,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:11"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1751,"src":"7862:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1723,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:11"},"scope":1796,"src":"7682:628:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1774,"nodeType":"Block","src":"8691:135:11","statements":[{"condition":{"id":1763,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"8705:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1772,"nodeType":"Block","src":"8762:58:11","statements":[{"expression":{"arguments":[{"id":1768,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"8784:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1769,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"8796:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1767,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"8776:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1771,"nodeType":"ExpressionStatement","src":"8776:33:11"}]},"id":1773,"nodeType":"IfStatement","src":"8701:119:11","trueBody":{"id":1766,"nodeType":"Block","src":"8714:42:11","statements":[{"expression":{"id":1764,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"8735:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1762,"id":1765,"nodeType":"Return","src":"8728:17:11"}]}}]},"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"8316:210:11","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1775,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:11","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"success","nameLocation":"8571:7:11","nodeType":"VariableDeclaration","scope":1775,"src":"8566:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1753,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:11","nodeType":"VariableDeclaration","scope":1775,"src":"8588:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1755,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:11","nodeType":"VariableDeclaration","scope":1775,"src":"8621:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1757,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:11"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1775,"src":"8677:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1760,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:11"},"scope":1796,"src":"8531:295:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1794,"nodeType":"Block","src":"8915:457:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1782,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"8991:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:11","memberName":"length","nodeType":"MemberAccess","src":"8991:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1792,"nodeType":"Block","src":"9321:45:11","statements":[{"expression":{"arguments":[{"id":1789,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"9342:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1788,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:11","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1791,"nodeType":"ExpressionStatement","src":"9335:20:11"}]},"id":1793,"nodeType":"IfStatement","src":"8987:379:11","trueBody":{"id":1787,"nodeType":"Block","src":"9014:301:11","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:11","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:11","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:11"},"nodeType":"YulFunctionCall","src":"9213:17:11"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:11","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:11"},"nodeType":"YulFunctionCall","src":"9254:19:11"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:11"},"nodeType":"YulFunctionCall","src":"9247:44:11"},"nodeType":"YulExpressionStatement","src":"9247:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1777,"isOffset":false,"isSlot":false,"src":"9219:10:11","valueSize":1},{"declaration":1777,"isOffset":false,"isSlot":false,"src":"9262:10:11","valueSize":1}],"id":1786,"nodeType":"InlineAssembly","src":"9163:142:11"}]}}]},"id":1795,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:11","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:11","nodeType":"VariableDeclaration","scope":1795,"src":"8849:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1776,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:11","nodeType":"VariableDeclaration","scope":1795,"src":"8874:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1778,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:11"},"returnParameters":{"id":1781,"nodeType":"ParameterList","parameters":[],"src":"8915:0:11"},"scope":1796,"src":"8832:540:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1797,"src":"194:9180:11","usedErrors":[]}],"src":"101:9274:11"},"id":11},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1847],"Initializable":[326]},"id":1848,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1798,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1800,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1848,"sourceUnit":327,"src":"125:63:12","symbolAliases":[{"foreign":{"id":1799,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"133:13:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1802,"name":"Initializable","nameLocations":["727:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"727:13:12"},"id":1803,"nodeType":"InheritanceSpecifier","src":"727:13:12"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"190:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1847,"linearizedBaseContracts":[1847,326],"name":"ContextUpgradeable","nameLocation":"705:18:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1808,"nodeType":"Block","src":"799:7:12","statements":[]},"id":1809,"implemented":true,"kind":"function","modifiers":[{"id":1806,"kind":"modifierInvocation","modifierName":{"id":1805,"name":"onlyInitializing","nameLocations":["782:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"782:16:12"},"nodeType":"ModifierInvocation","src":"782:16:12"}],"name":"__Context_init","nameLocation":"756:14:12","nodeType":"FunctionDefinition","parameters":{"id":1804,"nodeType":"ParameterList","parameters":[],"src":"770:2:12"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[],"src":"799:0:12"},"scope":1847,"src":"747:59:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1814,"nodeType":"Block","src":"874:7:12","statements":[]},"id":1815,"implemented":true,"kind":"function","modifiers":[{"id":1812,"kind":"modifierInvocation","modifierName":{"id":1811,"name":"onlyInitializing","nameLocations":["857:16:12"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"857:16:12"},"nodeType":"ModifierInvocation","src":"857:16:12"}],"name":"__Context_init_unchained","nameLocation":"821:24:12","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[],"src":"845:2:12"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[],"src":"874:0:12"},"scope":1847,"src":"812:69:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1823,"nodeType":"Block","src":"948:34:12","statements":[{"expression":{"expression":{"id":1820,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"965:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"969:6:12","memberName":"sender","nodeType":"MemberAccess","src":"965:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1819,"id":1822,"nodeType":"Return","src":"958:17:12"}]},"id":1824,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"895:10:12","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[],"src":"905:2:12"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1824,"src":"939:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1817,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:9:12"},"scope":1847,"src":"886:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1832,"nodeType":"Block","src":"1055:32:12","statements":[{"expression":{"expression":{"id":1829,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1072:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1076:4:12","memberName":"data","nodeType":"MemberAccess","src":"1072:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1828,"id":1831,"nodeType":"Return","src":"1065:15:12"}]},"id":1833,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"997:8:12","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[],"src":"1005:2:12"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1833,"src":"1039:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1826,"name":"bytes","nodeType":"ElementaryTypeName","src":"1039:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1038:16:12"},"scope":1847,"src":"988:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1840,"nodeType":"Block","src":"1165:25:12","statements":[{"expression":{"hexValue":"30","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1837,"id":1839,"nodeType":"Return","src":"1175:8:12"}]},"id":1841,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1102:20:12","nodeType":"FunctionDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[],"src":"1122:2:12"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"1156:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1155:9:12"},"scope":1847,"src":"1093:97:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"1196:254:12","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":1846,"mutability":"mutable","name":"__gap","nameLocation":"1475:5:12","nodeType":"VariableDeclaration","scope":1847,"src":"1455:25:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1845,"length":{"hexValue":"3530","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:2:12","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1455:11:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":1848,"src":"687:796:12","usedErrors":[]}],"src":"101:1383:12"},"id":12},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol","exportedSymbols":{"CountersUpgradeable":[1921]},"id":1922,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1849,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"CountersUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"112:311:13","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":1921,"linearizedBaseContracts":[1921],"name":"CountersUpgradeable","nameLocation":"432:19:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"CountersUpgradeable.Counter","id":1853,"members":[{"constant":false,"id":1852,"mutability":"mutable","name":"_value","nameLocation":"805:6:13","nodeType":"VariableDeclaration","scope":1853,"src":"797:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"465:7:13","nodeType":"StructDefinition","scope":1921,"src":"458:374:13","visibility":"public"},{"body":{"id":1864,"nodeType":"Block","src":"912:38:13","statements":[{"expression":{"expression":{"id":1861,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"929:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1862,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"937:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"929:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1860,"id":1863,"nodeType":"Return","src":"922:21:13"}]},"id":1865,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"847:7:13","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"counter","nameLocation":"871:7:13","nodeType":"VariableDeclaration","scope":1865,"src":"855:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1855,"nodeType":"UserDefinedTypeName","pathNode":{"id":1854,"name":"Counter","nameLocations":["855:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"855:7:13"},"referencedDeclaration":1853,"src":"855:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"854:25:13"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1865,"src":"903:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1858,"name":"uint256","nodeType":"ElementaryTypeName","src":"903:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"902:9:13"},"scope":1921,"src":"838:112:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1878,"nodeType":"Block","src":"1009:70:13","statements":[{"id":1877,"nodeType":"UncheckedBlock","src":"1019:54:13","statements":[{"expression":{"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1871,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"1043:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1051:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"1043:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1043:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1876,"nodeType":"ExpressionStatement","src":"1043:19:13"}]}]},"id":1879,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"965:9:13","nodeType":"FunctionDefinition","parameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"counter","nameLocation":"991:7:13","nodeType":"VariableDeclaration","scope":1879,"src":"975:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1867,"nodeType":"UserDefinedTypeName","pathNode":{"id":1866,"name":"Counter","nameLocations":["975:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"975:7:13"},"referencedDeclaration":1853,"src":"975:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"974:25:13"},"returnParameters":{"id":1870,"nodeType":"ParameterList","parameters":[],"src":"1009:0:13"},"scope":1921,"src":"956:123:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1906,"nodeType":"Block","src":"1138:176:13","statements":[{"assignments":[1886],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"value","nameLocation":"1156:5:13","nodeType":"VariableDeclaration","scope":1906,"src":"1148:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1889,"initialValue":{"expression":{"id":1887,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"1164:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1172:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"1164:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1148:30:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"1196:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1196:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1207:29:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1890,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1188:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1188:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1896,"nodeType":"ExpressionStatement","src":"1188:49:13"},{"id":1905,"nodeType":"UncheckedBlock","src":"1247:61:13","statements":[{"expression":{"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1897,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"1271:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1279:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"1271:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"1288:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1296:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1288:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1271:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1904,"nodeType":"ExpressionStatement","src":"1271:26:13"}]}]},"id":1907,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1094:9:13","nodeType":"FunctionDefinition","parameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"counter","nameLocation":"1120:7:13","nodeType":"VariableDeclaration","scope":1907,"src":"1104:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1881,"nodeType":"UserDefinedTypeName","pathNode":{"id":1880,"name":"Counter","nameLocations":["1104:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"1104:7:13"},"referencedDeclaration":1853,"src":"1104:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1103:25:13"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[],"src":"1138:0:13"},"scope":1921,"src":"1085:229:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1919,"nodeType":"Block","src":"1369:35:13","statements":[{"expression":{"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1913,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"1379:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter storage pointer"}},"id":1915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1387:6:13","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1852,"src":"1379:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1396:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1379:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1918,"nodeType":"ExpressionStatement","src":"1379:18:13"}]},"id":1920,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1329:5:13","nodeType":"FunctionDefinition","parameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"counter","nameLocation":"1351:7:13","nodeType":"VariableDeclaration","scope":1920,"src":"1335:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter"},"typeName":{"id":1909,"nodeType":"UserDefinedTypeName","pathNode":{"id":1908,"name":"Counter","nameLocations":["1335:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1853,"src":"1335:7:13"},"referencedDeclaration":1853,"src":"1335:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1853_storage_ptr","typeString":"struct CountersUpgradeable.Counter"}},"visibility":"internal"}],"src":"1334:25:13"},"returnParameters":{"id":1912,"nodeType":"ParameterList","parameters":[],"src":"1369:0:13"},"scope":1921,"src":"1320:84:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1922,"src":"424:982:13","usedErrors":[]}],"src":"87:1320:13"},"id":13},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[3667],"SignedMathUpgradeable":[3772],"StringsUpgradeable":[2150]},"id":2151,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1923,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:14"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","file":"./math/MathUpgradeable.sol","id":1924,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2151,"sourceUnit":3668,"src":"126:36:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","file":"./math/SignedMathUpgradeable.sol","id":1925,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2151,"sourceUnit":3773,"src":"163:42:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"StringsUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"207:34:14","text":" @dev String operations."},"fullyImplemented":true,"id":2150,"linearizedBaseContracts":[2150],"name":"StringsUpgradeable","nameLocation":"250:18:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1929,"mutability":"constant","name":"_SYMBOLS","nameLocation":"300:8:14","nodeType":"VariableDeclaration","scope":2150,"src":"275:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1927,"name":"bytes16","nodeType":"ElementaryTypeName","src":"275:7:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1932,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"358:15:14","nodeType":"VariableDeclaration","scope":2150,"src":"335:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1930,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"376:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1979,"nodeType":"Block","src":"551:636:14","statements":[{"id":1978,"nodeType":"UncheckedBlock","src":"561:620:14","statements":[{"assignments":[1941],"declarations":[{"constant":false,"id":1941,"mutability":"mutable","name":"length","nameLocation":"593:6:14","nodeType":"VariableDeclaration","scope":1978,"src":"585:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"585:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1948,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"624:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1942,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"602:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$3667_$","typeString":"type(library MathUpgradeable)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"618:5:14","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3504,"src":"602:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"602:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"602:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"585:49:14"},{"assignments":[1950],"declarations":[{"constant":false,"id":1950,"mutability":"mutable","name":"buffer","nameLocation":"662:6:14","nodeType":"VariableDeclaration","scope":1978,"src":"648:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1949,"name":"string","nodeType":"ElementaryTypeName","src":"648:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1955,"initialValue":{"arguments":[{"id":1953,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"682:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"671:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1951,"name":"string","nodeType":"ElementaryTypeName","src":"675:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"671:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"648:41:14"},{"assignments":[1957],"declarations":[{"constant":false,"id":1957,"mutability":"mutable","name":"ptr","nameLocation":"711:3:14","nodeType":"VariableDeclaration","scope":1978,"src":"703:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1958,"nodeType":"VariableDeclarationStatement","src":"703:11:14"},{"AST":{"nodeType":"YulBlock","src":"784:67:14","statements":[{"nodeType":"YulAssignment","src":"802:35:14","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"813:6:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"825:2:14","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"829:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"821:3:14"},"nodeType":"YulFunctionCall","src":"821:15:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"809:3:14"},"nodeType":"YulFunctionCall","src":"809:28:14"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"802:3:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1950,"isOffset":false,"isSlot":false,"src":"813:6:14","valueSize":1},{"declaration":1941,"isOffset":false,"isSlot":false,"src":"829:6:14","valueSize":1},{"declaration":1957,"isOffset":false,"isSlot":false,"src":"802:3:14","valueSize":1}],"id":1959,"nodeType":"InlineAssembly","src":"775:76:14"},{"body":{"id":1974,"nodeType":"Block","src":"877:267:14","statements":[{"expression":{"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"895:5:14","subExpression":{"id":1961,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"895:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1963,"nodeType":"ExpressionStatement","src":"895:5:14"},{"AST":{"nodeType":"YulBlock","src":"978:84:14","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1008:3:14"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1022:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1029:2:14","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1018:3:14"},"nodeType":"YulFunctionCall","src":"1018:14:14"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"1034:8:14"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1013:4:14"},"nodeType":"YulFunctionCall","src":"1013:30:14"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1000:7:14"},"nodeType":"YulFunctionCall","src":"1000:44:14"},"nodeType":"YulExpressionStatement","src":"1000:44:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1929,"isOffset":false,"isSlot":false,"src":"1034:8:14","valueSize":1},{"declaration":1957,"isOffset":false,"isSlot":false,"src":"1008:3:14","valueSize":1},{"declaration":1935,"isOffset":false,"isSlot":false,"src":"1022:5:14","valueSize":1}],"id":1964,"nodeType":"InlineAssembly","src":"969:93:14"},{"expression":{"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1079:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1079:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1968,"nodeType":"ExpressionStatement","src":"1079:11:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"1112:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1121:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1112:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1973,"nodeType":"IfStatement","src":"1108:21:14","trueBody":{"id":1972,"nodeType":"Break","src":"1124:5:14"}}]},"condition":{"hexValue":"74727565","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"871:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1975,"nodeType":"WhileStatement","src":"864:280:14"},{"expression":{"id":1976,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"1164:6:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1939,"id":1977,"nodeType":"Return","src":"1157:13:14"}]}]},"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"385:90:14","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1980,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"489:8:14","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1935,"mutability":"mutable","name":"value","nameLocation":"506:5:14","nodeType":"VariableDeclaration","scope":1980,"src":"498:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1934,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:15:14"},"returnParameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1980,"src":"536:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1937,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"535:15:14"},"scope":2150,"src":"480:707:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2007,"nodeType":"Block","src":"1357:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"1398:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1406:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1398:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1416:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1398:20:14","trueExpression":{"hexValue":"2d","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1410:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"1455:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1999,"name":"SignedMathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"1429:21:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMathUpgradeable_$3772_$","typeString":"type(library SignedMathUpgradeable)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:3:14","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3771,"src":"1429:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1429:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1998,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1980,2008],"referencedDeclaration":1980,"src":"1420:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1420:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1990,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1381:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1385:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"1381:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:82:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1374:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1988,"name":"string","nodeType":"ElementaryTypeName","src":"1374:6:14","typeDescriptions":{}}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1374:90:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1987,"id":2006,"nodeType":"Return","src":"1367:97:14"}]},"documentation":{"id":1981,"nodeType":"StructuredDocumentation","src":"1193:89:14","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2008,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1296:8:14","nodeType":"FunctionDefinition","parameters":{"id":1984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1983,"mutability":"mutable","name":"value","nameLocation":"1312:5:14","nodeType":"VariableDeclaration","scope":2008,"src":"1305:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1982,"name":"int256","nodeType":"ElementaryTypeName","src":"1305:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1304:14:14"},"returnParameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"1342:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1985,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1341:15:14"},"scope":2150,"src":"1287:184:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2027,"nodeType":"Block","src":"1650:111:14","statements":[{"id":2026,"nodeType":"UncheckedBlock","src":"1660:95:14","statements":[{"expression":{"arguments":[{"id":2017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"1703:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"1733:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2018,"name":"MathUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"1710:15:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MathUpgradeable_$3667_$","typeString":"type(library MathUpgradeable)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:14","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3627,"src":"1710:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1710:29:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1710:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2016,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2028,2104,2124],"referencedDeclaration":2104,"src":"1691:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1691:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2015,"id":2025,"nodeType":"Return","src":"1684:60:14"}]}]},"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"1477:94:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2028,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1585:11:14","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"value","nameLocation":"1605:5:14","nodeType":"VariableDeclaration","scope":2028,"src":"1597:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:15:14"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2028,"src":"1635:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2013,"name":"string","nodeType":"ElementaryTypeName","src":"1635:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1634:15:14"},"scope":2150,"src":"1576:185:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2103,"nodeType":"Block","src":"1974:347:14","statements":[{"assignments":[2039],"declarations":[{"constant":false,"id":2039,"mutability":"mutable","name":"buffer","nameLocation":"1997:6:14","nodeType":"VariableDeclaration","scope":2103,"src":"1984:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2038,"name":"bytes","nodeType":"ElementaryTypeName","src":"1984:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2048,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2043,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"2020:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2016:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2029:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2016:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2006:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2040,"name":"bytes","nodeType":"ElementaryTypeName","src":"2010:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2006:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1984:47:14"},{"expression":{"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2049,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2041:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2051,"indexExpression":{"hexValue":"30","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2041:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2053:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2041:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2054,"nodeType":"ExpressionStatement","src":"2041:15:14"},{"expression":{"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2055,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2066:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2057,"indexExpression":{"hexValue":"31","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2073:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2066:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2078:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2066:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2060,"nodeType":"ExpressionStatement","src":"2066:15:14"},{"body":{"id":2089,"nodeType":"Block","src":"2136:83:14","statements":[{"expression":{"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2075,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2150:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2077,"indexExpression":{"id":2076,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"2157:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2150:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2078,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"2162:8:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2082,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"2171:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2171:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2162:21:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2150:33:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2084,"nodeType":"ExpressionStatement","src":"2150:33:14"},{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"2197:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2207:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2197:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2088,"nodeType":"ExpressionStatement","src":"2197:11:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2069,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"2124:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2128:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2124:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2090,"initializationExpression":{"assignments":[2062],"declarations":[{"constant":false,"id":2062,"mutability":"mutable","name":"i","nameLocation":"2104:1:14","nodeType":"VariableDeclaration","scope":2090,"src":"2096:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2068,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2064,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"2112:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2108:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2121:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2108:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2096:26:14"},"loopExpression":{"expression":{"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2131:3:14","subExpression":{"id":2072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"2133:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2074,"nodeType":"ExpressionStatement","src":"2131:3:14"},"nodeType":"ForStatement","src":"2091:128:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"2236:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2245:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2248:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2228:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2228:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2097,"nodeType":"ExpressionStatement","src":"2228:55:14"},{"expression":{"arguments":[{"id":2100,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2307:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2300:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2098,"name":"string","nodeType":"ElementaryTypeName","src":"2300:6:14","typeDescriptions":{}}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2037,"id":2102,"nodeType":"Return","src":"2293:21:14"}]},"documentation":{"id":2029,"nodeType":"StructuredDocumentation","src":"1767:112:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2104,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1893:11:14","nodeType":"FunctionDefinition","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2031,"mutability":"mutable","name":"value","nameLocation":"1913:5:14","nodeType":"VariableDeclaration","scope":2104,"src":"1905:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2030,"name":"uint256","nodeType":"ElementaryTypeName","src":"1905:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"length","nameLocation":"1928:6:14","nodeType":"VariableDeclaration","scope":2104,"src":"1920:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1920:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:31:14"},"returnParameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2104,"src":"1959:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2035,"name":"string","nodeType":"ElementaryTypeName","src":"1959:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1958:15:14"},"scope":2150,"src":"1884:437:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2123,"nodeType":"Block","src":"2546:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2117,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"2591:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2583:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2115,"name":"uint160","nodeType":"ElementaryTypeName","src":"2583:7:14","typeDescriptions":{}}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2583:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2575:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2575:7:14","typeDescriptions":{}}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2575:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2120,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"2599:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2112,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2028,2104,2124],"referencedDeclaration":2104,"src":"2563:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2111,"id":2122,"nodeType":"Return","src":"2556:59:14"}]},"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"2327:141:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2124,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2482:11:14","nodeType":"FunctionDefinition","parameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"addr","nameLocation":"2502:4:14","nodeType":"VariableDeclaration","scope":2124,"src":"2494:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2106,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2493:14:14"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2124,"src":"2531:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2109,"name":"string","nodeType":"ElementaryTypeName","src":"2531:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2530:15:14"},"scope":2150,"src":"2473:149:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2148,"nodeType":"Block","src":"2777:66:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2137,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2810:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2804:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2135,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:14","typeDescriptions":{}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2804:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2134,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2794:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2143,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"2833:1:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2827:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2141,"name":"bytes","nodeType":"ElementaryTypeName","src":"2827:5:14","typeDescriptions":{}}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2827:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2140,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2817:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2817:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2794:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2133,"id":2147,"nodeType":"Return","src":"2787:49:14"}]},"documentation":{"id":2125,"nodeType":"StructuredDocumentation","src":"2628:66:14","text":" @dev Returns true if the two strings are equal."},"id":2149,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2708:5:14","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"a","nameLocation":"2728:1:14","nodeType":"VariableDeclaration","scope":2149,"src":"2714:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2126,"name":"string","nodeType":"ElementaryTypeName","src":"2714:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"b","nameLocation":"2745:1:14","nodeType":"VariableDeclaration","scope":2149,"src":"2731:15:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2128,"name":"string","nodeType":"ElementaryTypeName","src":"2731:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2713:34:14"},"returnParameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2149,"src":"2771:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2131,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:14"},"scope":2150,"src":"2699:144:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2151,"src":"242:2603:14","usedErrors":[]}],"src":"101:2745:14"},"id":14},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","exportedSymbols":{"ECDSAUpgradeable":[2516],"MathUpgradeable":[3667],"SignedMathUpgradeable":[3772],"StringsUpgradeable":[2150]},"id":2517,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2152,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:15"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol","file":"../StringsUpgradeable.sol","id":2153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2517,"sourceUnit":2151,"src":"137:35:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSAUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"174:205:15","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2516,"linearizedBaseContracts":[2516],"name":"ECDSAUpgradeable","nameLocation":"388:16:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSAUpgradeable.RecoverError","id":2160,"members":[{"id":2155,"name":"NoError","nameLocation":"439:7:15","nodeType":"EnumValue","src":"439:7:15"},{"id":2156,"name":"InvalidSignature","nameLocation":"456:16:15","nodeType":"EnumValue","src":"456:16:15"},{"id":2157,"name":"InvalidSignatureLength","nameLocation":"482:22:15","nodeType":"EnumValue","src":"482:22:15"},{"id":2158,"name":"InvalidSignatureS","nameLocation":"514:17:15","nodeType":"EnumValue","src":"514:17:15"},{"id":2159,"name":"InvalidSignatureV","nameLocation":"541:17:15","nodeType":"EnumValue","src":"541:17:15"}],"name":"RecoverError","nameLocation":"416:12:15","nodeType":"EnumDefinition","src":"411:175:15"},{"body":{"id":2203,"nodeType":"Block","src":"646:457:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"660:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2167,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"669:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2160_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"682:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"669:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"660:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2172,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"756:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2173,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"765:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2160_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"778:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2156,"src":"765:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"756:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2181,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"865:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2182,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"874:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2160_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"887:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2157,"src":"874:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"865:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2190,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"987:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2191,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"996:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2160_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1009:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2158,"src":"996:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"src":"987:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2199,"nodeType":"IfStatement","src":"983:114:15","trueBody":{"id":2198,"nodeType":"Block","src":"1028:69:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1049:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2194,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1042:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1042:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2197,"nodeType":"ExpressionStatement","src":"1042:44:15"}]}},"id":2200,"nodeType":"IfStatement","src":"861:236:15","trueBody":{"id":2189,"nodeType":"Block","src":"911:66:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"932:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2185,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"925:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"925:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2188,"nodeType":"ExpressionStatement","src":"925:41:15"}]}},"id":2201,"nodeType":"IfStatement","src":"752:345:15","trueBody":{"id":2180,"nodeType":"Block","src":"796:59:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"817:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2176,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"810:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"810:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2179,"nodeType":"ExpressionStatement","src":"810:34:15"}]}},"id":2202,"nodeType":"IfStatement","src":"656:441:15","trueBody":{"id":2171,"nodeType":"Block","src":"691:55:15","statements":[{"functionReturnParameters":2165,"id":2170,"nodeType":"Return","src":"705:7:15"}]}}]},"id":2204,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"601:11:15","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"error","nameLocation":"626:5:15","nodeType":"VariableDeclaration","scope":2204,"src":"613:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2162,"nodeType":"UserDefinedTypeName","pathNode":{"id":2161,"name":"RecoverError","nameLocations":["613:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"613:12:15"},"referencedDeclaration":2160,"src":"613:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"612:20:15"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[],"src":"646:0:15"},"scope":2516,"src":"592:511:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2249,"nodeType":"Block","src":"2271:626:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2217,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"2285:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2295:6:15","memberName":"length","nodeType":"MemberAccess","src":"2285:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2305:2:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2285:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2247,"nodeType":"Block","src":"2810:81:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2840:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2832:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2239,"name":"address","nodeType":"ElementaryTypeName","src":"2832:7:15","typeDescriptions":{}}},"id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2832:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2243,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"2844:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2160_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2857:22:15","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2157,"src":"2844:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":2245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2831:49:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":2216,"id":2246,"nodeType":"Return","src":"2824:56:15"}]},"id":2248,"nodeType":"IfStatement","src":"2281:610:15","trueBody":{"id":2238,"nodeType":"Block","src":"2309:495:15","statements":[{"assignments":[2222],"declarations":[{"constant":false,"id":2222,"mutability":"mutable","name":"r","nameLocation":"2331:1:15","nodeType":"VariableDeclaration","scope":2238,"src":"2323:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2323:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2223,"nodeType":"VariableDeclarationStatement","src":"2323:9:15"},{"assignments":[2225],"declarations":[{"constant":false,"id":2225,"mutability":"mutable","name":"s","nameLocation":"2354:1:15","nodeType":"VariableDeclaration","scope":2238,"src":"2346:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2346:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2226,"nodeType":"VariableDeclarationStatement","src":"2346:9:15"},{"assignments":[2228],"declarations":[{"constant":false,"id":2228,"mutability":"mutable","name":"v","nameLocation":"2375:1:15","nodeType":"VariableDeclaration","scope":2238,"src":"2369:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2227,"name":"uint8","nodeType":"ElementaryTypeName","src":"2369:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2229,"nodeType":"VariableDeclarationStatement","src":"2369:7:15"},{"AST":{"nodeType":"YulBlock","src":"2577:171:15","statements":[{"nodeType":"YulAssignment","src":"2595:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2610:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2621:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2606:3:15"},"nodeType":"YulFunctionCall","src":"2606:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2600:5:15"},"nodeType":"YulFunctionCall","src":"2600:27:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2595:1:15"}]},{"nodeType":"YulAssignment","src":"2644:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2659:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2670:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2655:3:15"},"nodeType":"YulFunctionCall","src":"2655:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2649:5:15"},"nodeType":"YulFunctionCall","src":"2649:27:15"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2644:1:15"}]},{"nodeType":"YulAssignment","src":"2693:41:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2703:1:15","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2716:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2727:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:15"},"nodeType":"YulFunctionCall","src":"2712:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2706:5:15"},"nodeType":"YulFunctionCall","src":"2706:27:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2698:4:15"},"nodeType":"YulFunctionCall","src":"2698:36:15"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2693:1:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2222,"isOffset":false,"isSlot":false,"src":"2595:1:15","valueSize":1},{"declaration":2225,"isOffset":false,"isSlot":false,"src":"2644:1:15","valueSize":1},{"declaration":2209,"isOffset":false,"isSlot":false,"src":"2610:9:15","valueSize":1},{"declaration":2209,"isOffset":false,"isSlot":false,"src":"2659:9:15","valueSize":1},{"declaration":2209,"isOffset":false,"isSlot":false,"src":"2716:9:15","valueSize":1},{"declaration":2228,"isOffset":false,"isSlot":false,"src":"2693:1:15","valueSize":1}],"id":2230,"nodeType":"InlineAssembly","src":"2568:180:15"},{"expression":{"arguments":[{"id":2232,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"2779:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2233,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"2785:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2234,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"2788:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2235,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"2791:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2231,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2250,2324,2418],"referencedDeclaration":2418,"src":"2768:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":2216,"id":2237,"nodeType":"Return","src":"2761:32:15"}]}}]},"documentation":{"id":2205,"nodeType":"StructuredDocumentation","src":"1109:1053:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2250,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2176:10:15","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"hash","nameLocation":"2195:4:15","nodeType":"VariableDeclaration","scope":2250,"src":"2187:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2209,"mutability":"mutable","name":"signature","nameLocation":"2214:9:15","nodeType":"VariableDeclaration","scope":2250,"src":"2201:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2208,"name":"bytes","nodeType":"ElementaryTypeName","src":"2201:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2186:38:15"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2250,"src":"2248:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"2248:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2250,"src":"2257:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2214,"nodeType":"UserDefinedTypeName","pathNode":{"id":2213,"name":"RecoverError","nameLocations":["2257:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"2257:12:15"},"referencedDeclaration":2160,"src":"2257:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"2247:23:15"},"scope":2516,"src":"2167:730:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2276,"nodeType":"Block","src":"3770:140:15","statements":[{"assignments":[2261,2264],"declarations":[{"constant":false,"id":2261,"mutability":"mutable","name":"recovered","nameLocation":"3789:9:15","nodeType":"VariableDeclaration","scope":2276,"src":"3781:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"3781:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"error","nameLocation":"3813:5:15","nodeType":"VariableDeclaration","scope":2276,"src":"3800:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2263,"nodeType":"UserDefinedTypeName","pathNode":{"id":2262,"name":"RecoverError","nameLocations":["3800:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"3800:12:15"},"referencedDeclaration":2160,"src":"3800:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":2269,"initialValue":{"arguments":[{"id":2266,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"3833:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2267,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"3839:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2265,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2250,2324,2418],"referencedDeclaration":2250,"src":"3822:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3822:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3780:69:15"},{"expression":{"arguments":[{"id":2271,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"3871:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":2270,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"3859:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2160_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2273,"nodeType":"ExpressionStatement","src":"3859:18:15"},{"expression":{"id":2274,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"3894:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2259,"id":2275,"nodeType":"Return","src":"3887:16:15"}]},"documentation":{"id":2251,"nodeType":"StructuredDocumentation","src":"2903:775:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2277,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3692:7:15","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2253,"mutability":"mutable","name":"hash","nameLocation":"3708:4:15","nodeType":"VariableDeclaration","scope":2277,"src":"3700:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3700:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"signature","nameLocation":"3727:9:15","nodeType":"VariableDeclaration","scope":2277,"src":"3714:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2254,"name":"bytes","nodeType":"ElementaryTypeName","src":"3714:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3699:38:15"},"returnParameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2277,"src":"3761:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"3761:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3760:9:15"},"scope":2516,"src":"3683:227:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2323,"nodeType":"Block","src":"4267:203:15","statements":[{"assignments":[2293],"declarations":[{"constant":false,"id":2293,"mutability":"mutable","name":"s","nameLocation":"4285:1:15","nodeType":"VariableDeclaration","scope":2323,"src":"4277:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4277:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2300,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"4289:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4302:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4294:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4294:7:15","typeDescriptions":{}}},"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4289:80:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4277:92:15"},{"assignments":[2302],"declarations":[{"constant":false,"id":2302,"mutability":"mutable","name":"v","nameLocation":"4385:1:15","nodeType":"VariableDeclaration","scope":2323,"src":"4379:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2301,"name":"uint8","nodeType":"ElementaryTypeName","src":"4379:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2315,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2307,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"4404:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4396:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"4396:7:15","typeDescriptions":{}}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4396:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4411:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4396:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4395:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4418:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4395:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4389:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2303,"name":"uint8","nodeType":"ElementaryTypeName","src":"4389:5:15","typeDescriptions":{}}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4389:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4379:42:15"},{"expression":{"arguments":[{"id":2317,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"4449:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2318,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"4455:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2319,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"4458:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2320,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"4461:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2316,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2250,2324,2418],"referencedDeclaration":2418,"src":"4438:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":2291,"id":2322,"nodeType":"Return","src":"4431:32:15"}]},"documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"3916:243:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2324,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4173:10:15","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"hash","nameLocation":"4192:4:15","nodeType":"VariableDeclaration","scope":2324,"src":"4184:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4184:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2282,"mutability":"mutable","name":"r","nameLocation":"4206:1:15","nodeType":"VariableDeclaration","scope":2324,"src":"4198:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4198:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"vs","nameLocation":"4217:2:15","nodeType":"VariableDeclaration","scope":2324,"src":"4209:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4209:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4183:37:15"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2324,"src":"4244:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"4244:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2324,"src":"4253:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2289,"nodeType":"UserDefinedTypeName","pathNode":{"id":2288,"name":"RecoverError","nameLocations":["4253:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"4253:12:15"},"referencedDeclaration":2160,"src":"4253:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"4243:23:15"},"scope":2516,"src":"4164:306:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2353,"nodeType":"Block","src":"4721:136:15","statements":[{"assignments":[2337,2340],"declarations":[{"constant":false,"id":2337,"mutability":"mutable","name":"recovered","nameLocation":"4740:9:15","nodeType":"VariableDeclaration","scope":2353,"src":"4732:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"4732:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2340,"mutability":"mutable","name":"error","nameLocation":"4764:5:15","nodeType":"VariableDeclaration","scope":2353,"src":"4751:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2339,"nodeType":"UserDefinedTypeName","pathNode":{"id":2338,"name":"RecoverError","nameLocations":["4751:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"4751:12:15"},"referencedDeclaration":2160,"src":"4751:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":2346,"initialValue":{"arguments":[{"id":2342,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"4784:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2343,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"4790:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2344,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"4793:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2341,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2250,2324,2418],"referencedDeclaration":2324,"src":"4773:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4773:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4731:65:15"},{"expression":{"arguments":[{"id":2348,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"4818:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":2347,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"4806:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2160_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2350,"nodeType":"ExpressionStatement","src":"4806:18:15"},{"expression":{"id":2351,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"4841:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2335,"id":2352,"nodeType":"Return","src":"4834:16:15"}]},"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"4476:154:15","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2354,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4644:7:15","nodeType":"FunctionDefinition","parameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"hash","nameLocation":"4660:4:15","nodeType":"VariableDeclaration","scope":2354,"src":"4652:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4652:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2329,"mutability":"mutable","name":"r","nameLocation":"4674:1:15","nodeType":"VariableDeclaration","scope":2354,"src":"4666:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4666:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2331,"mutability":"mutable","name":"vs","nameLocation":"4685:2:15","nodeType":"VariableDeclaration","scope":2354,"src":"4677:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4677:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4651:37:15"},"returnParameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2354,"src":"4712:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"4712:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4711:9:15"},"scope":2516,"src":"4635:222:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2417,"nodeType":"Block","src":"5142:1345:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2373,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6038:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6030:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"6030:7:15","typeDescriptions":{}}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6030:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6043:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6030:79:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2386,"nodeType":"IfStatement","src":"6026:161:15","trueBody":{"id":2385,"nodeType":"Block","src":"6111:76:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6141:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2377,"name":"address","nodeType":"ElementaryTypeName","src":"6133:7:15","typeDescriptions":{}}},"id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6133:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2381,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"6145:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2160_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6158:17:15","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2158,"src":"6145:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":2383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6132:44:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":2370,"id":2384,"nodeType":"Return","src":"6125:51:15"}]}},{"assignments":[2388],"declarations":[{"constant":false,"id":2388,"mutability":"mutable","name":"signer","nameLocation":"6289:6:15","nodeType":"VariableDeclaration","scope":2417,"src":"6281:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2387,"name":"address","nodeType":"ElementaryTypeName","src":"6281:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2395,"initialValue":{"arguments":[{"id":2390,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"6308:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2391,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"6314:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2392,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6317:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2393,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"6320:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2389,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6298:9:15","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6281:41:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2396,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"6336:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6354:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6346:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2397,"name":"address","nodeType":"ElementaryTypeName","src":"6346:7:15","typeDescriptions":{}}},"id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6336:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2411,"nodeType":"IfStatement","src":"6332:101:15","trueBody":{"id":2410,"nodeType":"Block","src":"6358:75:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6388:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6380:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2402,"name":"address","nodeType":"ElementaryTypeName","src":"6380:7:15","typeDescriptions":{}}},"id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6380:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2406,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"6392:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2160_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6405:16:15","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2156,"src":"6392:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":2408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6379:43:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":2370,"id":2409,"nodeType":"Return","src":"6372:50:15"}]}},{"expression":{"components":[{"id":2412,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"6451:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2413,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"6459:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2160_$","typeString":"type(enum ECDSAUpgradeable.RecoverError)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6472:7:15","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2155,"src":"6459:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"id":2415,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6450:30:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"functionReturnParameters":2370,"id":2416,"nodeType":"Return","src":"6443:37:15"}]},"documentation":{"id":2355,"nodeType":"StructuredDocumentation","src":"4863:163:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2418,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5040:10:15","nodeType":"FunctionDefinition","parameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"hash","nameLocation":"5059:4:15","nodeType":"VariableDeclaration","scope":2418,"src":"5051:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5051:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2359,"mutability":"mutable","name":"v","nameLocation":"5071:1:15","nodeType":"VariableDeclaration","scope":2418,"src":"5065:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2358,"name":"uint8","nodeType":"ElementaryTypeName","src":"5065:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2361,"mutability":"mutable","name":"r","nameLocation":"5082:1:15","nodeType":"VariableDeclaration","scope":2418,"src":"5074:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5074:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2363,"mutability":"mutable","name":"s","nameLocation":"5093:1:15","nodeType":"VariableDeclaration","scope":2418,"src":"5085:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5085:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5050:45:15"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2418,"src":"5119:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"5119:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2418,"src":"5128:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2368,"nodeType":"UserDefinedTypeName","pathNode":{"id":2367,"name":"RecoverError","nameLocations":["5128:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"5128:12:15"},"referencedDeclaration":2160,"src":"5128:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"src":"5118:23:15"},"scope":2516,"src":"5031:1456:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2450,"nodeType":"Block","src":"6714:138:15","statements":[{"assignments":[2433,2436],"declarations":[{"constant":false,"id":2433,"mutability":"mutable","name":"recovered","nameLocation":"6733:9:15","nodeType":"VariableDeclaration","scope":2450,"src":"6725:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2432,"name":"address","nodeType":"ElementaryTypeName","src":"6725:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"error","nameLocation":"6757:5:15","nodeType":"VariableDeclaration","scope":2450,"src":"6744:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"},"typeName":{"id":2435,"nodeType":"UserDefinedTypeName","pathNode":{"id":2434,"name":"RecoverError","nameLocations":["6744:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2160,"src":"6744:12:15"},"referencedDeclaration":2160,"src":"6744:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}},"visibility":"internal"}],"id":2443,"initialValue":{"arguments":[{"id":2438,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"6777:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2439,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"6783:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2440,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"6786:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2441,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"6789:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2437,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2250,2324,2418],"referencedDeclaration":2418,"src":"6766:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2160_$","typeString":"tuple(address,enum ECDSAUpgradeable.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6724:67:15"},{"expression":{"arguments":[{"id":2445,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"6813:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2160","typeString":"enum ECDSAUpgradeable.RecoverError"}],"id":2444,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"6801:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2160_$returns$__$","typeString":"function (enum ECDSAUpgradeable.RecoverError) pure"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2447,"nodeType":"ExpressionStatement","src":"6801:18:15"},{"expression":{"id":2448,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"6836:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2431,"id":2449,"nodeType":"Return","src":"6829:16:15"}]},"documentation":{"id":2419,"nodeType":"StructuredDocumentation","src":"6493:122:15","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6629:7:15","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"hash","nameLocation":"6645:4:15","nodeType":"VariableDeclaration","scope":2451,"src":"6637:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6637:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"v","nameLocation":"6657:1:15","nodeType":"VariableDeclaration","scope":2451,"src":"6651:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2422,"name":"uint8","nodeType":"ElementaryTypeName","src":"6651:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2425,"mutability":"mutable","name":"r","nameLocation":"6668:1:15","nodeType":"VariableDeclaration","scope":2451,"src":"6660:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6660:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"s","nameLocation":"6679:1:15","nodeType":"VariableDeclaration","scope":2451,"src":"6671:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6671:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6636:45:15"},"returnParameters":{"id":2431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2451,"src":"6705:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2429,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6704:9:15"},"scope":2516,"src":"6620:232:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2460,"nodeType":"Block","src":"7228:310:15","statements":[{"AST":{"nodeType":"YulBlock","src":"7384:148:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7405:4:15","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7411:34:15","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7398:6:15"},"nodeType":"YulFunctionCall","src":"7398:48:15"},"nodeType":"YulExpressionStatement","src":"7398:48:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7466:4:15","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7472:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7459:6:15"},"nodeType":"YulFunctionCall","src":"7459:18:15"},"nodeType":"YulExpressionStatement","src":"7459:18:15"},{"nodeType":"YulAssignment","src":"7490:32:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7511:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7517:4:15","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7501:9:15"},"nodeType":"YulFunctionCall","src":"7501:21:15"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7490:7:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2454,"isOffset":false,"isSlot":false,"src":"7472:4:15","valueSize":1},{"declaration":2457,"isOffset":false,"isSlot":false,"src":"7490:7:15","valueSize":1}],"id":2459,"nodeType":"InlineAssembly","src":"7375:157:15"}]},"documentation":{"id":2452,"nodeType":"StructuredDocumentation","src":"6858:279:15","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2461,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7151:22:15","nodeType":"FunctionDefinition","parameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"hash","nameLocation":"7182:4:15","nodeType":"VariableDeclaration","scope":2461,"src":"7174:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7174:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7173:14:15"},"returnParameters":{"id":2458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"message","nameLocation":"7219:7:15","nodeType":"VariableDeclaration","scope":2461,"src":"7211:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7211:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7210:17:15"},"scope":2516,"src":"7142:396:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2482,"nodeType":"Block","src":"7903:127:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7947:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2475,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"8009:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8011:6:15","memberName":"length","nodeType":"MemberAccess","src":"8009:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2473,"name":"StringsUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"7981:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StringsUpgradeable_$2150_$","typeString":"type(library StringsUpgradeable)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8000:8:15","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1980,"src":"7981:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7981:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2478,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"8020:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2470,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7930:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7934:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"7930:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7930:92:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2469,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7920:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7920:103:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2468,"id":2481,"nodeType":"Return","src":"7913:110:15"}]},"documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"7544:274:15","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2483,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7832:22:15","nodeType":"FunctionDefinition","parameters":{"id":2465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"s","nameLocation":"7868:1:15","nodeType":"VariableDeclaration","scope":2483,"src":"7855:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2463,"name":"bytes","nodeType":"ElementaryTypeName","src":"7855:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7854:16:15"},"returnParameters":{"id":2468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2483,"src":"7894:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7894:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7893:9:15"},"scope":2516,"src":"7823:207:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2494,"nodeType":"Block","src":"8476:290:15","statements":[{"AST":{"nodeType":"YulBlock","src":"8538:222:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8552:22:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8569:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8563:5:15"},"nodeType":"YulFunctionCall","src":"8563:11:15"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8556:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8594:3:15"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8599:10:15","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8587:6:15"},"nodeType":"YulFunctionCall","src":"8587:23:15"},"nodeType":"YulExpressionStatement","src":"8587:23:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8634:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8639:4:15","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8630:3:15"},"nodeType":"YulFunctionCall","src":"8630:14:15"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8646:15:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8623:6:15"},"nodeType":"YulFunctionCall","src":"8623:39:15"},"nodeType":"YulExpressionStatement","src":"8623:39:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8686:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8691:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8682:3:15"},"nodeType":"YulFunctionCall","src":"8682:14:15"},{"name":"structHash","nodeType":"YulIdentifier","src":"8698:10:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8675:6:15"},"nodeType":"YulFunctionCall","src":"8675:34:15"},"nodeType":"YulExpressionStatement","src":"8675:34:15"},{"nodeType":"YulAssignment","src":"8722:28:15","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8740:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"8745:4:15","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8730:9:15"},"nodeType":"YulFunctionCall","src":"8730:20:15"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8722:4:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2491,"isOffset":false,"isSlot":false,"src":"8722:4:15","valueSize":1},{"declaration":2486,"isOffset":false,"isSlot":false,"src":"8646:15:15","valueSize":1},{"declaration":2488,"isOffset":false,"isSlot":false,"src":"8698:10:15","valueSize":1}],"id":2493,"nodeType":"InlineAssembly","src":"8529:231:15"}]},"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"8036:328:15","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2495,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8378:15:15","nodeType":"FunctionDefinition","parameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"domainSeparator","nameLocation":"8402:15:15","nodeType":"VariableDeclaration","scope":2495,"src":"8394:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8394:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2488,"mutability":"mutable","name":"structHash","nameLocation":"8427:10:15","nodeType":"VariableDeclaration","scope":2495,"src":"8419:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8419:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8393:45:15"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"data","nameLocation":"8470:4:15","nodeType":"VariableDeclaration","scope":2495,"src":"8462:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8462:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8461:14:15"},"scope":2516,"src":"8369:397:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2514,"nodeType":"Block","src":"9081:80:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9125:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2509,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"9137:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2510,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"9148:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2506,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9108:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9112:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"9108:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9108:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2505,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9098:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9098:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2504,"id":2513,"nodeType":"Return","src":"9091:63:15"}]},"documentation":{"id":2496,"nodeType":"StructuredDocumentation","src":"8772:193:15","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":2515,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8979:31:15","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"validator","nameLocation":"9019:9:15","nodeType":"VariableDeclaration","scope":2515,"src":"9011:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2497,"name":"address","nodeType":"ElementaryTypeName","src":"9011:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"data","nameLocation":"9043:4:15","nodeType":"VariableDeclaration","scope":2515,"src":"9030:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2499,"name":"bytes","nodeType":"ElementaryTypeName","src":"9030:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9010:38:15"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2515,"src":"9072:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9072:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9071:9:15"},"scope":2516,"src":"8970:191:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2517,"src":"380:8783:15","usedErrors":[]}],"src":"112:9052:15"},"id":15},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","exportedSymbols":{"ECDSAUpgradeable":[2516],"EIP712Upgradeable":[2801],"IERC5267Upgradeable":[157],"Initializable":[326],"MathUpgradeable":[3667],"SignedMathUpgradeable":[3772],"StringsUpgradeable":[2150]},"id":2802,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2518,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:16"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol","file":"./ECDSAUpgradeable.sol","id":2519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2802,"sourceUnit":2517,"src":"138:32:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol","file":"../../interfaces/IERC5267Upgradeable.sol","id":2520,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2802,"sourceUnit":158,"src":"171:50:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2522,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2802,"sourceUnit":327,"src":"222:66:16","symbolAliases":[{"foreign":{"id":2521,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"230:13:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2524,"name":"Initializable","nameLocations":["1847:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"1847:13:16"},"id":2525,"nodeType":"InheritanceSpecifier","src":"1847:13:16"},{"baseName":{"id":2526,"name":"IERC5267Upgradeable","nameLocations":["1862:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":157,"src":"1862:19:16"},"id":2527,"nodeType":"InheritanceSpecifier","src":"1862:19:16"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2523,"nodeType":"StructuredDocumentation","src":"290:1517:16","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:storage-size 52"},"fullyImplemented":true,"id":2801,"linearizedBaseContracts":[2801,157,326],"name":"EIP712Upgradeable","nameLocation":"1826:17:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2532,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1913:10:16","nodeType":"VariableDeclaration","scope":2801,"src":"1888:141:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1888:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1944:84:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2529,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1934:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1934:95:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"2036:40:16","text":"@custom:oz-renamed-from _HASHED_NAME"},"id":2535,"mutability":"mutable","name":"_hashedName","nameLocation":"2097:11:16","nodeType":"VariableDeclaration","scope":2801,"src":"2081:27:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2081:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":2536,"nodeType":"StructuredDocumentation","src":"2114:43:16","text":"@custom:oz-renamed-from _HASHED_VERSION"},"id":2538,"mutability":"mutable","name":"_hashedVersion","nameLocation":"2178:14:16","nodeType":"VariableDeclaration","scope":2801,"src":"2162:30:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2162:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2540,"mutability":"mutable","name":"_name","nameLocation":"2214:5:16","nodeType":"VariableDeclaration","scope":2801,"src":"2199:20:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2539,"name":"string","nodeType":"ElementaryTypeName","src":"2199:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2542,"mutability":"mutable","name":"_version","nameLocation":"2240:8:16","nodeType":"VariableDeclaration","scope":2801,"src":"2225:23:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2541,"name":"string","nodeType":"ElementaryTypeName","src":"2225:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2557,"nodeType":"Block","src":"2911:55:16","statements":[{"expression":{"arguments":[{"id":2553,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"2945:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2554,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"2951:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2552,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"2921:23:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2921:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2556,"nodeType":"ExpressionStatement","src":"2921:38:16"}]},"documentation":{"id":2543,"nodeType":"StructuredDocumentation","src":"2255:559:16","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2558,"implemented":true,"kind":"function","modifiers":[{"id":2550,"kind":"modifierInvocation","modifierName":{"id":2549,"name":"onlyInitializing","nameLocations":["2894:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"2894:16:16"},"nodeType":"ModifierInvocation","src":"2894:16:16"}],"name":"__EIP712_init","nameLocation":"2828:13:16","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"name","nameLocation":"2856:4:16","nodeType":"VariableDeclaration","scope":2558,"src":"2842:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2544,"name":"string","nodeType":"ElementaryTypeName","src":"2842:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2547,"mutability":"mutable","name":"version","nameLocation":"2876:7:16","nodeType":"VariableDeclaration","scope":2558,"src":"2862:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2546,"name":"string","nodeType":"ElementaryTypeName","src":"2862:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2841:43:16"},"returnParameters":{"id":2551,"nodeType":"ParameterList","parameters":[],"src":"2911:0:16"},"scope":2801,"src":"2819:147:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"3074:165:16","statements":[{"expression":{"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2567,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"3084:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2568,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"3092:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3084:12:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2570,"nodeType":"ExpressionStatement","src":"3084:12:16"},{"expression":{"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2571,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"3106:8:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2572,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"3117:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3106:18:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2574,"nodeType":"ExpressionStatement","src":"3106:18:16"},{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2575,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"3189:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3203:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3189:15:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2578,"nodeType":"ExpressionStatement","src":"3189:15:16"},{"expression":{"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2579,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"3214:14:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3231:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3214:18:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2582,"nodeType":"ExpressionStatement","src":"3214:18:16"}]},"id":2584,"implemented":true,"kind":"function","modifiers":[{"id":2565,"kind":"modifierInvocation","modifierName":{"id":2564,"name":"onlyInitializing","nameLocations":["3057:16:16"],"nodeType":"IdentifierPath","referencedDeclaration":271,"src":"3057:16:16"},"nodeType":"ModifierInvocation","src":"3057:16:16"}],"name":"__EIP712_init_unchained","nameLocation":"2981:23:16","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"name","nameLocation":"3019:4:16","nodeType":"VariableDeclaration","scope":2584,"src":"3005:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2559,"name":"string","nodeType":"ElementaryTypeName","src":"3005:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"version","nameLocation":"3039:7:16","nodeType":"VariableDeclaration","scope":2584,"src":"3025:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2561,"name":"string","nodeType":"ElementaryTypeName","src":"3025:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3004:43:16"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[],"src":"3074:0:16"},"scope":2801,"src":"2972:267:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2593,"nodeType":"Block","src":"3387:47:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2590,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"3404:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2589,"id":2592,"nodeType":"Return","src":"3397:30:16"}]},"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"3245:75:16","text":" @dev Returns the domain separator for the current chain."},"id":2594,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3334:18:16","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[],"src":"3352:2:16"},"returnParameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2594,"src":"3378:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:9:16"},"scope":2801,"src":"3325:109:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2616,"nodeType":"Block","src":"3504:128:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2602,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"3542:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2603,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"3554:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2605,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"3573:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3573:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2607,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3595:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3601:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"3595:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2611,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3618:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2801","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2801","typeString":"contract EIP712Upgradeable"}],"id":2610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3610:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"3610:7:16","typeDescriptions":{}}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2600,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3531:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3535:6:16","memberName":"encode","nodeType":"MemberAccess","src":"3531:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3531:93:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2599,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3521:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3521:104:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2598,"id":2615,"nodeType":"Return","src":"3514:111:16"}]},"id":2617,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3449:21:16","nodeType":"FunctionDefinition","parameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"3470:2:16"},"returnParameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2617,"src":"3495:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3495:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3494:9:16"},"scope":2801,"src":"3440:192:16","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2632,"nodeType":"Block","src":"4343:90:16","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2627,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"4393:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4393:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2629,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"4415:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2625,"name":"ECDSAUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"4360:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSAUpgradeable_$2516_$","typeString":"type(library ECDSAUpgradeable)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4377:15:16","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2495,"src":"4360:32:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4360:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2624,"id":2631,"nodeType":"Return","src":"4353:73:16"}]},"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"3638:614:16","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2633,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4266:16:16","nodeType":"FunctionDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"structHash","nameLocation":"4291:10:16","nodeType":"VariableDeclaration","scope":2633,"src":"4283:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4283:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4282:20:16"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2633,"src":"4334:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4334:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4333:9:16"},"scope":2801,"src":"4257:176:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[156],"body":{"id":2686,"nodeType":"Block","src":"4866:516:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"5087:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5102:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5087:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"5107:14:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5125:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5107:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5087:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4549503731323a20556e696e697469616c697a6564","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5128:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""},"value":"EIP712: Uninitialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""}],"id":2653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5079:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5079:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2663,"nodeType":"ExpressionStatement","src":"5079:73:16"},{"expression":{"components":[{"hexValue":"0f","id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5184:7:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2665,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"5214:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5214:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2667,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"5241:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5241:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2669,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5271:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5277:7:16","memberName":"chainid","nodeType":"MemberAccess","src":"5271:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2673,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5306:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2801","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2801","typeString":"contract EIP712Upgradeable"}],"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5298:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2671,"name":"address","nodeType":"ElementaryTypeName","src":"5298:7:16","typeDescriptions":{}}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5298:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5333:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5325:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5325:7:16","typeDescriptions":{}}},"id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5325:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5363:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5349:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"5353:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2680,"nodeType":"ArrayTypeName","src":"5353:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5170:205:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2652,"id":2685,"nodeType":"Return","src":"5163:212:16"}]},"documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"4439:77:16","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":2687,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"4530:12:16","nodeType":"FunctionDefinition","overrides":{"id":2636,"nodeType":"OverrideSpecifier","overrides":[],"src":"4597:8:16"},"parameters":{"id":2635,"nodeType":"ParameterList","parameters":[],"src":"4542:2:16"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"fields","nameLocation":"4643:6:16","nodeType":"VariableDeclaration","scope":2687,"src":"4636:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2637,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4636:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2640,"mutability":"mutable","name":"name","nameLocation":"4677:4:16","nodeType":"VariableDeclaration","scope":2687,"src":"4663:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2639,"name":"string","nodeType":"ElementaryTypeName","src":"4663:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"version","nameLocation":"4709:7:16","nodeType":"VariableDeclaration","scope":2687,"src":"4695:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2641,"name":"string","nodeType":"ElementaryTypeName","src":"4695:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"chainId","nameLocation":"4738:7:16","nodeType":"VariableDeclaration","scope":2687,"src":"4730:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"4730:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2646,"mutability":"mutable","name":"verifyingContract","nameLocation":"4767:17:16","nodeType":"VariableDeclaration","scope":2687,"src":"4759:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2645,"name":"address","nodeType":"ElementaryTypeName","src":"4759:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"salt","nameLocation":"4806:4:16","nodeType":"VariableDeclaration","scope":2687,"src":"4798:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4798:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2651,"mutability":"mutable","name":"extensions","nameLocation":"4841:10:16","nodeType":"VariableDeclaration","scope":2687,"src":"4824:27:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2650,"nodeType":"ArrayTypeName","src":"4824:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4622:239:16"},"scope":2801,"src":"4521:861:16","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2695,"nodeType":"Block","src":"5675:29:16","statements":[{"expression":{"id":2693,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"5692:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2692,"id":2694,"nodeType":"Return","src":"5685:12:16"}]},"documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"5388:213:16","text":" @dev The name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":2696,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"5615:11:16","nodeType":"FunctionDefinition","parameters":{"id":2689,"nodeType":"ParameterList","parameters":[],"src":"5626:2:16"},"returnParameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"5660:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2690,"name":"string","nodeType":"ElementaryTypeName","src":"5660:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5659:15:16"},"scope":2801,"src":"5606:98:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2704,"nodeType":"Block","src":"6003:32:16","statements":[{"expression":{"id":2702,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"6020:8:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2701,"id":2703,"nodeType":"Return","src":"6013:15:16"}]},"documentation":{"id":2697,"nodeType":"StructuredDocumentation","src":"5710:216:16","text":" @dev The version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":2705,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"5940:14:16","nodeType":"FunctionDefinition","parameters":{"id":2698,"nodeType":"ParameterList","parameters":[],"src":"5954:2:16"},"returnParameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2705,"src":"5988:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2699,"name":"string","nodeType":"ElementaryTypeName","src":"5988:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5987:15:16"},"scope":2801,"src":"5931:104:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2749,"nodeType":"Block","src":"6309:571:16","statements":[{"assignments":[2712],"declarations":[{"constant":false,"id":2712,"mutability":"mutable","name":"name","nameLocation":"6333:4:16","nodeType":"VariableDeclaration","scope":2749,"src":"6319:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2711,"name":"string","nodeType":"ElementaryTypeName","src":"6319:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2715,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2713,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"6340:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6340:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6319:34:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2718,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"6373:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6367:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2716,"name":"bytes","nodeType":"ElementaryTypeName","src":"6367:5:16","typeDescriptions":{}}},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6379:6:16","memberName":"length","nodeType":"MemberAccess","src":"6367:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6388:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6367:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2747,"nodeType":"Block","src":"6451:423:16","statements":[{"assignments":[2732],"declarations":[{"constant":false,"id":2732,"mutability":"mutable","name":"hashedName","nameLocation":"6696:10:16","nodeType":"VariableDeclaration","scope":2747,"src":"6688:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6688:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2734,"initialValue":{"id":2733,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"6709:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6688:32:16"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2735,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"6738:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6752:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6738:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2745,"nodeType":"Block","src":"6811:53:16","statements":[{"expression":{"arguments":[{"hexValue":"","id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2741,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6836:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6836:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2710,"id":2744,"nodeType":"Return","src":"6829:20:16"}]},"id":2746,"nodeType":"IfStatement","src":"6734:130:16","trueBody":{"id":2740,"nodeType":"Block","src":"6755:50:16","statements":[{"expression":{"id":2738,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"6780:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2710,"id":2739,"nodeType":"Return","src":"6773:17:16"}]}}]},"id":2748,"nodeType":"IfStatement","src":"6363:511:16","trueBody":{"id":2730,"nodeType":"Block","src":"6391:54:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2726,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"6428:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2724,"name":"bytes","nodeType":"ElementaryTypeName","src":"6422:5:16","typeDescriptions":{}}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6422:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2723,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6412:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6412:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2710,"id":2729,"nodeType":"Return","src":"6405:29:16"}]}}]},"documentation":{"id":2706,"nodeType":"StructuredDocumentation","src":"6041:204:16","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead."},"id":2750,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"6259:15:16","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[],"src":"6274:2:16"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2750,"src":"6300:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6300:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6299:9:16"},"scope":2801,"src":"6250:630:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2794,"nodeType":"Block","src":"7163:604:16","statements":[{"assignments":[2757],"declarations":[{"constant":false,"id":2757,"mutability":"mutable","name":"version","nameLocation":"7187:7:16","nodeType":"VariableDeclaration","scope":2794,"src":"7173:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2756,"name":"string","nodeType":"ElementaryTypeName","src":"7173:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2760,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2758,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"7197:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7197:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7173:40:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2763,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"7233:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7227:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2761,"name":"bytes","nodeType":"ElementaryTypeName","src":"7227:5:16","typeDescriptions":{}}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7227:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7242:6:16","memberName":"length","nodeType":"MemberAccess","src":"7227:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7227:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2792,"nodeType":"Block","src":"7317:444:16","statements":[{"assignments":[2777],"declarations":[{"constant":false,"id":2777,"mutability":"mutable","name":"hashedVersion","nameLocation":"7571:13:16","nodeType":"VariableDeclaration","scope":2792,"src":"7563:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7563:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2779,"initialValue":{"id":2778,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"7587:14:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7563:38:16"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2780,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"7619:13:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7636:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7619:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2790,"nodeType":"Block","src":"7698:53:16","statements":[{"expression":{"arguments":[{"hexValue":"","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7733:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2786,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7723:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7723:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2755,"id":2789,"nodeType":"Return","src":"7716:20:16"}]},"id":2791,"nodeType":"IfStatement","src":"7615:136:16","trueBody":{"id":2785,"nodeType":"Block","src":"7639:53:16","statements":[{"expression":{"id":2783,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"7664:13:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2755,"id":2784,"nodeType":"Return","src":"7657:20:16"}]}}]},"id":2793,"nodeType":"IfStatement","src":"7223:538:16","trueBody":{"id":2775,"nodeType":"Block","src":"7254:57:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2771,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"7291:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7285:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2769,"name":"bytes","nodeType":"ElementaryTypeName","src":"7285:5:16","typeDescriptions":{}}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7285:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2768,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7275:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7275:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2755,"id":2774,"nodeType":"Return","src":"7268:32:16"}]}}]},"documentation":{"id":2751,"nodeType":"StructuredDocumentation","src":"6886:210:16","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead."},"id":2795,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"7110:18:16","nodeType":"FunctionDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[],"src":"7128:2:16"},"returnParameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2795,"src":"7154:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7154:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7153:9:16"},"scope":2801,"src":"7101:666:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":2796,"nodeType":"StructuredDocumentation","src":"7773:254:16","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":2800,"mutability":"mutable","name":"__gap","nameLocation":"8052:5:16","nodeType":"VariableDeclaration","scope":2801,"src":"8032:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$48_storage","typeString":"uint256[48]"},"typeName":{"baseType":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"8032:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2799,"length":{"hexValue":"3438","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8040:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"ArrayTypeName","src":"8032:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$48_storage_ptr","typeString":"uint256[48]"}},"visibility":"private"}],"scope":2802,"src":"1808:6252:16","usedErrors":[]}],"src":"113:7948:16"},"id":16},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol","exportedSymbols":{"MathUpgradeable":[3667]},"id":3668,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2803,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"MathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2804,"nodeType":"StructuredDocumentation","src":"128:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3667,"linearizedBaseContracts":[3667],"name":"MathUpgradeable","nameLocation":"210:15:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MathUpgradeable.Rounding","id":2808,"members":[{"id":2805,"name":"Down","nameLocation":"256:4:17","nodeType":"EnumValue","src":"256:4:17"},{"id":2806,"name":"Up","nameLocation":"298:2:17","nodeType":"EnumValue","src":"298:2:17"},{"id":2807,"name":"Zero","nameLocation":"329:4:17","nodeType":"EnumValue","src":"329:4:17"}],"name":"Rounding","nameLocation":"237:8:17","nodeType":"EnumDefinition","src":"232:122:17"},{"body":{"id":2825,"nodeType":"Block","src":"491:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2818,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"508:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2819,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"512:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"508:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2822,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"520:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"508:13:17","trueExpression":{"id":2821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"516:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2817,"id":2824,"nodeType":"Return","src":"501:20:17"}]},"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"360:59:17","text":" @dev Returns the largest of two numbers."},"id":2826,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"433:3:17","nodeType":"FunctionDefinition","parameters":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2811,"mutability":"mutable","name":"a","nameLocation":"445:1:17","nodeType":"VariableDeclaration","scope":2826,"src":"437:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2810,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2813,"mutability":"mutable","name":"b","nameLocation":"456:1:17","nodeType":"VariableDeclaration","scope":2826,"src":"448:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2812,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"436:22:17"},"returnParameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2826,"src":"482:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"482:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"481:9:17"},"scope":3667,"src":"424:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2843,"nodeType":"Block","src":"666:37:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2836,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"683:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2837,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"687:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"683:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"695:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"683:13:17","trueExpression":{"id":2839,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"691:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2835,"id":2842,"nodeType":"Return","src":"676:20:17"}]},"documentation":{"id":2827,"nodeType":"StructuredDocumentation","src":"534:60:17","text":" @dev Returns the smallest of two numbers."},"id":2844,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"608:3:17","nodeType":"FunctionDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"a","nameLocation":"620:1:17","nodeType":"VariableDeclaration","scope":2844,"src":"612:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"b","nameLocation":"631:1:17","nodeType":"VariableDeclaration","scope":2844,"src":"623:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"623:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"611:22:17"},"returnParameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2844,"src":"657:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2833,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:9:17"},"scope":3667,"src":"599:104:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2866,"nodeType":"Block","src":"887:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2854,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"942:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"946:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"942:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"941:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"952:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2859,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"956:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"952:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"951:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"961:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"951:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2853,"id":2865,"nodeType":"Return","src":"934:28:17"}]},"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"709:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2867,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"825:7:17","nodeType":"FunctionDefinition","parameters":{"id":2850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"a","nameLocation":"841:1:17","nodeType":"VariableDeclaration","scope":2867,"src":"833:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2849,"mutability":"mutable","name":"b","nameLocation":"852:1:17","nodeType":"VariableDeclaration","scope":2867,"src":"844:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2848,"name":"uint256","nodeType":"ElementaryTypeName","src":"844:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:22:17"},"returnParameters":{"id":2853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2867,"src":"878:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2851,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"877:9:17"},"scope":3667,"src":"816:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2891,"nodeType":"Block","src":"1239:123:17","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2877,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"1327:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1327:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2881,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"1341:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1345:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1341:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1340:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2885,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2872,"src":"1350:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1340:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1340:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1327:28:17","trueExpression":{"hexValue":"30","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1336:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2876,"id":2890,"nodeType":"Return","src":"1320:35:17"}]},"documentation":{"id":2868,"nodeType":"StructuredDocumentation","src":"975:188:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2892,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1177:7:17","nodeType":"FunctionDefinition","parameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"a","nameLocation":"1193:1:17","nodeType":"VariableDeclaration","scope":2892,"src":"1185:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2872,"mutability":"mutable","name":"b","nameLocation":"1204:1:17","nodeType":"VariableDeclaration","scope":2892,"src":"1196:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1196:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1184:22:17"},"returnParameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2892,"src":"1230:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:17"},"scope":3667,"src":"1168:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3014,"nodeType":"Block","src":"1776:4115:17","statements":[{"id":3013,"nodeType":"UncheckedBlock","src":"1786:4099:17","statements":[{"assignments":[2905],"declarations":[{"constant":false,"id":2905,"mutability":"mutable","name":"prod0","nameLocation":"2115:5:17","nodeType":"VariableDeclaration","scope":3013,"src":"2107:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2904,"name":"uint256","nodeType":"ElementaryTypeName","src":"2107:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2906,"nodeType":"VariableDeclarationStatement","src":"2107:13:17"},{"assignments":[2908],"declarations":[{"constant":false,"id":2908,"mutability":"mutable","name":"prod1","nameLocation":"2187:5:17","nodeType":"VariableDeclaration","scope":3013,"src":"2179:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2909,"nodeType":"VariableDeclarationStatement","src":"2179:13:17"},{"AST":{"nodeType":"YulBlock","src":"2259:157:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2277:30:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2294:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"2297:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2304:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2300:3:17"},"nodeType":"YulFunctionCall","src":"2300:6:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2287:6:17"},"nodeType":"YulFunctionCall","src":"2287:20:17"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2281:2:17","type":""}]},{"nodeType":"YulAssignment","src":"2324:18:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2337:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"2340:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2333:3:17"},"nodeType":"YulFunctionCall","src":"2333:9:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2324:5:17"}]},{"nodeType":"YulAssignment","src":"2359:43:17","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2376:2:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"2380:5:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2372:3:17"},"nodeType":"YulFunctionCall","src":"2372:14:17"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2391:2:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"2395:5:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2388:2:17"},"nodeType":"YulFunctionCall","src":"2388:13:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2368:3:17"},"nodeType":"YulFunctionCall","src":"2368:34:17"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2359:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2905,"isOffset":false,"isSlot":false,"src":"2324:5:17","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"2380:5:17","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"2395:5:17","valueSize":1},{"declaration":2908,"isOffset":false,"isSlot":false,"src":"2359:5:17","valueSize":1},{"declaration":2895,"isOffset":false,"isSlot":false,"src":"2294:1:17","valueSize":1},{"declaration":2895,"isOffset":false,"isSlot":false,"src":"2337:1:17","valueSize":1},{"declaration":2897,"isOffset":false,"isSlot":false,"src":"2297:1:17","valueSize":1},{"declaration":2897,"isOffset":false,"isSlot":false,"src":"2340:1:17","valueSize":1}],"id":2910,"nodeType":"InlineAssembly","src":"2250:166:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2911,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"2497:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2506:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2497:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2919,"nodeType":"IfStatement","src":"2493:368:17","trueBody":{"id":2918,"nodeType":"Block","src":"2509:352:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2914,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"2827:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2915,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"2835:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2827:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2903,"id":2917,"nodeType":"Return","src":"2820:26:17"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"2971:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2922,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"2985:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2971:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2992:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2920,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2963:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2963:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2926,"nodeType":"ExpressionStatement","src":"2963:53:17"},{"assignments":[2928],"declarations":[{"constant":false,"id":2928,"mutability":"mutable","name":"remainder","nameLocation":"3280:9:17","nodeType":"VariableDeclaration","scope":3013,"src":"3272:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2927,"name":"uint256","nodeType":"ElementaryTypeName","src":"3272:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2929,"nodeType":"VariableDeclarationStatement","src":"3272:17:17"},{"AST":{"nodeType":"YulBlock","src":"3312:291:17","statements":[{"nodeType":"YulAssignment","src":"3381:38:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3401:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"3404:1:17"},{"name":"denominator","nodeType":"YulIdentifier","src":"3407:11:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3394:6:17"},"nodeType":"YulFunctionCall","src":"3394:25:17"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3381:9:17"}]},{"nodeType":"YulAssignment","src":"3501:41:17","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3514:5:17"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3524:9:17"},{"name":"prod0","nodeType":"YulIdentifier","src":"3535:5:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3521:2:17"},"nodeType":"YulFunctionCall","src":"3521:20:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3510:3:17"},"nodeType":"YulFunctionCall","src":"3510:32:17"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3501:5:17"}]},{"nodeType":"YulAssignment","src":"3559:30:17","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3572:5:17"},{"name":"remainder","nodeType":"YulIdentifier","src":"3579:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3568:3:17"},"nodeType":"YulFunctionCall","src":"3568:21:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3559:5:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2899,"isOffset":false,"isSlot":false,"src":"3407:11:17","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"3535:5:17","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"3559:5:17","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"3572:5:17","valueSize":1},{"declaration":2908,"isOffset":false,"isSlot":false,"src":"3501:5:17","valueSize":1},{"declaration":2908,"isOffset":false,"isSlot":false,"src":"3514:5:17","valueSize":1},{"declaration":2928,"isOffset":false,"isSlot":false,"src":"3381:9:17","valueSize":1},{"declaration":2928,"isOffset":false,"isSlot":false,"src":"3524:9:17","valueSize":1},{"declaration":2928,"isOffset":false,"isSlot":false,"src":"3579:9:17","valueSize":1},{"declaration":2895,"isOffset":false,"isSlot":false,"src":"3401:1:17","valueSize":1},{"declaration":2897,"isOffset":false,"isSlot":false,"src":"3404:1:17","valueSize":1}],"id":2930,"nodeType":"InlineAssembly","src":"3303:300:17"},{"assignments":[2932],"declarations":[{"constant":false,"id":2932,"mutability":"mutable","name":"twos","nameLocation":"3918:4:17","nodeType":"VariableDeclaration","scope":3013,"src":"3910:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"3910:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2940,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2933,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"3925:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3940:12:17","subExpression":{"id":2934,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"3941:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3955:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3940:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3939:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3910:47:17"},{"AST":{"nodeType":"YulBlock","src":"3980:362:17","statements":[{"nodeType":"YulAssignment","src":"4045:37:17","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4064:11:17"},{"name":"twos","nodeType":"YulIdentifier","src":"4077:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4060:3:17"},"nodeType":"YulFunctionCall","src":"4060:22:17"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4045:11:17"}]},{"nodeType":"YulAssignment","src":"4149:25:17","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4162:5:17"},{"name":"twos","nodeType":"YulIdentifier","src":"4169:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4158:3:17"},"nodeType":"YulFunctionCall","src":"4158:16:17"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4149:5:17"}]},{"nodeType":"YulAssignment","src":"4289:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4309:1:17","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4312:4:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4305:3:17"},"nodeType":"YulFunctionCall","src":"4305:12:17"},{"name":"twos","nodeType":"YulIdentifier","src":"4319:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4301:3:17"},"nodeType":"YulFunctionCall","src":"4301:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"4326:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4297:3:17"},"nodeType":"YulFunctionCall","src":"4297:31:17"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4289:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2899,"isOffset":false,"isSlot":false,"src":"4045:11:17","valueSize":1},{"declaration":2899,"isOffset":false,"isSlot":false,"src":"4064:11:17","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"4149:5:17","valueSize":1},{"declaration":2905,"isOffset":false,"isSlot":false,"src":"4162:5:17","valueSize":1},{"declaration":2932,"isOffset":false,"isSlot":false,"src":"4077:4:17","valueSize":1},{"declaration":2932,"isOffset":false,"isSlot":false,"src":"4169:4:17","valueSize":1},{"declaration":2932,"isOffset":false,"isSlot":false,"src":"4289:4:17","valueSize":1},{"declaration":2932,"isOffset":false,"isSlot":false,"src":"4312:4:17","valueSize":1},{"declaration":2932,"isOffset":false,"isSlot":false,"src":"4319:4:17","valueSize":1}],"id":2941,"nodeType":"InlineAssembly","src":"3971:371:17"},{"expression":{"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2942,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"4408:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2943,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"4417:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2944,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"4425:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4417:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4408:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2947,"nodeType":"ExpressionStatement","src":"4408:21:17"},{"assignments":[2949],"declarations":[{"constant":false,"id":2949,"mutability":"mutable","name":"inverse","nameLocation":"4755:7:17","nodeType":"VariableDeclaration","scope":3013,"src":"4747:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2948,"name":"uint256","nodeType":"ElementaryTypeName","src":"4747:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2956,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4766:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2951,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"4770:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4766:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4765:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4785:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4765:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4747:39:17"},{"expression":{"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2957,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5003:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5014:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2959,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"5018:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2960,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5032:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5018:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2964,"nodeType":"ExpressionStatement","src":"5003:36:17"},{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2965,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5072:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5083:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"5087:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2968,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5101:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5087:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5083:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"5072:36:17"},{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2973,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5142:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5153:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"5157:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2976,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5171:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5153:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"5142:36:17"},{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2981,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5212:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5223:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"5227:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2984,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5241:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5227:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5223:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2988,"nodeType":"ExpressionStatement","src":"5212:36:17"},{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2989,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5282:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5293:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"5297:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2992,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5297:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5293:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2996,"nodeType":"ExpressionStatement","src":"5282:36:17"},{"expression":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2997,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5353:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5364:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"5368:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3000,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5382:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5368:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5364:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3004,"nodeType":"ExpressionStatement","src":"5353:36:17"},{"expression":{"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"5823:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3006,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"5832:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3007,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"5840:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5832:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5823:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3010,"nodeType":"ExpressionStatement","src":"5823:24:17"},{"expression":{"id":3011,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"5868:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2903,"id":3012,"nodeType":"Return","src":"5861:13:17"}]}]},"documentation":{"id":2893,"nodeType":"StructuredDocumentation","src":"1368:305:17","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3015,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1687:6:17","nodeType":"FunctionDefinition","parameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"x","nameLocation":"1702:1:17","nodeType":"VariableDeclaration","scope":3015,"src":"1694:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2897,"mutability":"mutable","name":"y","nameLocation":"1713:1:17","nodeType":"VariableDeclaration","scope":3015,"src":"1705:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2896,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"denominator","nameLocation":"1724:11:17","nodeType":"VariableDeclaration","scope":3015,"src":"1716:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1716:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:43:17"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"result","nameLocation":"1768:6:17","nodeType":"VariableDeclaration","scope":3015,"src":"1760:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"1760:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1759:16:17"},"scope":3667,"src":"1678:4213:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3058,"nodeType":"Block","src":"6133:189:17","statements":[{"assignments":[3031],"declarations":[{"constant":false,"id":3031,"mutability":"mutable","name":"result","nameLocation":"6151:6:17","nodeType":"VariableDeclaration","scope":3058,"src":"6143:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"6143:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3037,"initialValue":{"arguments":[{"id":3033,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"6167:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3034,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"6170:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3035,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"6173:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3032,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3015,3059],"referencedDeclaration":3015,"src":"6160:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6160:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6143:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3038,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"6199:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3039,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"6211:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2808_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6220:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2806,"src":"6211:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"src":"6199:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3043,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"6233:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3044,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"6236:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3045,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"6239:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3042,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6226:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6226:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6254:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6226:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6199:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3055,"nodeType":"IfStatement","src":"6195:98:17","trueBody":{"id":3054,"nodeType":"Block","src":"6257:36:17","statements":[{"expression":{"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3050,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"6271:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6281:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6271:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3053,"nodeType":"ExpressionStatement","src":"6271:11:17"}]}},{"expression":{"id":3056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"6309:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3029,"id":3057,"nodeType":"Return","src":"6302:13:17"}]},"documentation":{"id":3016,"nodeType":"StructuredDocumentation","src":"5897:121:17","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3059,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6032:6:17","nodeType":"FunctionDefinition","parameters":{"id":3026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"x","nameLocation":"6047:1:17","nodeType":"VariableDeclaration","scope":3059,"src":"6039:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"y","nameLocation":"6058:1:17","nodeType":"VariableDeclaration","scope":3059,"src":"6050:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3019,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"denominator","nameLocation":"6069:11:17","nodeType":"VariableDeclaration","scope":3059,"src":"6061:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"6061:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"rounding","nameLocation":"6091:8:17","nodeType":"VariableDeclaration","scope":3059,"src":"6082:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3024,"nodeType":"UserDefinedTypeName","pathNode":{"id":3023,"name":"Rounding","nameLocations":["6082:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2808,"src":"6082:8:17"},"referencedDeclaration":2808,"src":"6082:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"6038:62:17"},"returnParameters":{"id":3029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3059,"src":"6124:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"6124:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6123:9:17"},"scope":3667,"src":"6023:299:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3170,"nodeType":"Block","src":"6598:1585:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3067,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"6612:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6617:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6612:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3073,"nodeType":"IfStatement","src":"6608:45:17","trueBody":{"id":3072,"nodeType":"Block","src":"6620:33:17","statements":[{"expression":{"hexValue":"30","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6641:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3066,"id":3071,"nodeType":"Return","src":"6634:8:17"}]}},{"assignments":[3075],"declarations":[{"constant":false,"id":3075,"mutability":"mutable","name":"result","nameLocation":"7340:6:17","nodeType":"VariableDeclaration","scope":3170,"src":"7332:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3074,"name":"uint256","nodeType":"ElementaryTypeName","src":"7332:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3084,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7349:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3078,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"7360:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3077,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3339,3375],"referencedDeclaration":3339,"src":"7355:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7355:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7354:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7349:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7332:36:17"},{"id":3169,"nodeType":"UncheckedBlock","src":"7769:408:17","statements":[{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3085,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7793:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7803:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3087,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"7812:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3088,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7816:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7803:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7802:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7802:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7793:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ExpressionStatement","src":"7793:35:17"},{"expression":{"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3096,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7842:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7852:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3098,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"7861:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3099,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7865:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7852:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7851:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7851:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7842:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3106,"nodeType":"ExpressionStatement","src":"7842:35:17"},{"expression":{"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3107,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7891:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7901:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"7910:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3110,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7914:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7910:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7901:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7900:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7925:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7900:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7891:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3117,"nodeType":"ExpressionStatement","src":"7891:35:17"},{"expression":{"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3118,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7940:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7950:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"7959:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3121,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7963:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7959:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7950:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7949:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7974:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7949:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7940:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3128,"nodeType":"ExpressionStatement","src":"7940:35:17"},{"expression":{"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3129,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7989:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"7999:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3131,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"8008:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"8012:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8008:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7999:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7998:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8023:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7998:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7989:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3139,"nodeType":"ExpressionStatement","src":"7989:35:17"},{"expression":{"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"8038:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"8048:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"8057:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"8061:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8057:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8048:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8047:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8072:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8047:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8038:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3150,"nodeType":"ExpressionStatement","src":"8038:35:17"},{"expression":{"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3151,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"8087:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"8097:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"8106:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"8110:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8106:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8097:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8096:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8121:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8096:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8087:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3161,"nodeType":"ExpressionStatement","src":"8087:35:17"},{"expression":{"arguments":[{"id":3163,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"8147:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"8155:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3165,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"8159:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8155:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3162,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"8143:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3066,"id":3168,"nodeType":"Return","src":"8136:30:17"}]}]},"documentation":{"id":3060,"nodeType":"StructuredDocumentation","src":"6328:208:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3171,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6550:4:17","nodeType":"FunctionDefinition","parameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3062,"mutability":"mutable","name":"a","nameLocation":"6563:1:17","nodeType":"VariableDeclaration","scope":3171,"src":"6555:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3061,"name":"uint256","nodeType":"ElementaryTypeName","src":"6555:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6554:11:17"},"returnParameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3171,"src":"6589:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6588:9:17"},"scope":3667,"src":"6541:1642:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3206,"nodeType":"Block","src":"8359:161:17","statements":[{"id":3205,"nodeType":"UncheckedBlock","src":"8369:145:17","statements":[{"assignments":[3183],"declarations":[{"constant":false,"id":3183,"mutability":"mutable","name":"result","nameLocation":"8401:6:17","nodeType":"VariableDeclaration","scope":3205,"src":"8393:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3182,"name":"uint256","nodeType":"ElementaryTypeName","src":"8393:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3187,"initialValue":{"arguments":[{"id":3185,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"8415:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3184,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3171,3207],"referencedDeclaration":3171,"src":"8410:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8410:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8393:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3188,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"8438:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3189,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"8448:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3190,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"8460:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2808_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8469:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2806,"src":"8460:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"src":"8448:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"8475:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"8484:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"8493:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8475:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8448:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8501:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8448:54:17","trueExpression":{"hexValue":"31","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8497:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8447:56:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8438:65:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3181,"id":3204,"nodeType":"Return","src":"8431:72:17"}]}]},"documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"8189:89:17","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3207,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8292:4:17","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"a","nameLocation":"8305:1:17","nodeType":"VariableDeclaration","scope":3207,"src":"8297:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"8297:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"rounding","nameLocation":"8317:8:17","nodeType":"VariableDeclaration","scope":3207,"src":"8308:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3176,"nodeType":"UserDefinedTypeName","pathNode":{"id":3175,"name":"Rounding","nameLocations":["8308:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2808,"src":"8308:8:17"},"referencedDeclaration":2808,"src":"8308:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"8296:30:17"},"returnParameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3207,"src":"8350:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"8350:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8349:9:17"},"scope":3667,"src":"8283:237:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3338,"nodeType":"Block","src":"8705:922:17","statements":[{"assignments":[3216],"declarations":[{"constant":false,"id":3216,"mutability":"mutable","name":"result","nameLocation":"8723:6:17","nodeType":"VariableDeclaration","scope":3338,"src":"8715:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"8715:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3218,"initialValue":{"hexValue":"30","id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8732:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8715:18:17"},{"id":3335,"nodeType":"UncheckedBlock","src":"8743:855:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"8771:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8780:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8771:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8786:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8771:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3233,"nodeType":"IfStatement","src":"8767:99:17","trueBody":{"id":3232,"nodeType":"Block","src":"8789:77:17","statements":[{"expression":{"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"8807:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8807:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3227,"nodeType":"ExpressionStatement","src":"8807:13:17"},{"expression":{"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8838:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8848:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8838:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3231,"nodeType":"ExpressionStatement","src":"8838:13:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"8883:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8892:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8883:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8897:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8883:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3248,"nodeType":"IfStatement","src":"8879:96:17","trueBody":{"id":3247,"nodeType":"Block","src":"8900:75:17","statements":[{"expression":{"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"8918:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8928:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8918:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3242,"nodeType":"ExpressionStatement","src":"8918:12:17"},{"expression":{"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"8948:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8948:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3246,"nodeType":"ExpressionStatement","src":"8948:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"8992:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9001:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8992:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9006:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8992:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3263,"nodeType":"IfStatement","src":"8988:96:17","trueBody":{"id":3262,"nodeType":"Block","src":"9009:75:17","statements":[{"expression":{"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9027:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9037:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9027:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3257,"nodeType":"ExpressionStatement","src":"9027:12:17"},{"expression":{"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3258,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"9057:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9067:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9057:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3261,"nodeType":"ExpressionStatement","src":"9057:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9101:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9101:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9115:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9101:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3278,"nodeType":"IfStatement","src":"9097:96:17","trueBody":{"id":3277,"nodeType":"Block","src":"9118:75:17","statements":[{"expression":{"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9136:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9146:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9136:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3272,"nodeType":"ExpressionStatement","src":"9136:12:17"},{"expression":{"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3273,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"9166:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9176:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9166:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3276,"nodeType":"ExpressionStatement","src":"9166:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9210:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9219:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9210:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9223:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9210:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3293,"nodeType":"IfStatement","src":"9206:93:17","trueBody":{"id":3292,"nodeType":"Block","src":"9226:73:17","statements":[{"expression":{"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9244:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9254:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9244:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3287,"nodeType":"ExpressionStatement","src":"9244:11:17"},{"expression":{"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"9273:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9283:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9273:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3291,"nodeType":"ExpressionStatement","src":"9273:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9316:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9325:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9316:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9316:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3308,"nodeType":"IfStatement","src":"9312:93:17","trueBody":{"id":3307,"nodeType":"Block","src":"9332:73:17","statements":[{"expression":{"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9350:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9350:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3302,"nodeType":"ExpressionStatement","src":"9350:11:17"},{"expression":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3303,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"9379:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9389:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9379:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3306,"nodeType":"ExpressionStatement","src":"9379:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9422:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9431:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9422:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9435:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9422:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3323,"nodeType":"IfStatement","src":"9418:93:17","trueBody":{"id":3322,"nodeType":"Block","src":"9438:73:17","statements":[{"expression":{"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9456:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9466:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9456:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3317,"nodeType":"ExpressionStatement","src":"9456:11:17"},{"expression":{"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"9485:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9495:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9485:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3321,"nodeType":"ExpressionStatement","src":"9485:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"9528:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9537:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9528:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9541:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9528:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3334,"nodeType":"IfStatement","src":"9524:64:17","trueBody":{"id":3333,"nodeType":"Block","src":"9544:44:17","statements":[{"expression":{"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3329,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"9562:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9572:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9562:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3332,"nodeType":"ExpressionStatement","src":"9562:11:17"}]}}]},{"expression":{"id":3336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"9614:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3214,"id":3337,"nodeType":"Return","src":"9607:13:17"}]},"documentation":{"id":3208,"nodeType":"StructuredDocumentation","src":"8526:113:17","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3339,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8653:4:17","nodeType":"FunctionDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"value","nameLocation":"8666:5:17","nodeType":"VariableDeclaration","scope":3339,"src":"8658:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"8658:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8657:15:17"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"8696:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"8696:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8695:9:17"},"scope":3667,"src":"8644:983:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3374,"nodeType":"Block","src":"9860:165:17","statements":[{"id":3373,"nodeType":"UncheckedBlock","src":"9870:149:17","statements":[{"assignments":[3351],"declarations":[{"constant":false,"id":3351,"mutability":"mutable","name":"result","nameLocation":"9902:6:17","nodeType":"VariableDeclaration","scope":3373,"src":"9894:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"9894:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3355,"initialValue":{"arguments":[{"id":3353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"9916:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3352,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3339,3375],"referencedDeclaration":3339,"src":"9911:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9911:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9894:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3356,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"9943:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"9953:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3358,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"9965:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2808_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9974:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2806,"src":"9965:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"src":"9953:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9980:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"9985:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"9994:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9980:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9953:46:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10006:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9953:54:17","trueExpression":{"hexValue":"31","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9952:56:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9943:65:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3349,"id":3372,"nodeType":"Return","src":"9936:72:17"}]}]},"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"9633:142:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3375,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9789:4:17","nodeType":"FunctionDefinition","parameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"value","nameLocation":"9802:5:17","nodeType":"VariableDeclaration","scope":3375,"src":"9794:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3341,"name":"uint256","nodeType":"ElementaryTypeName","src":"9794:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3345,"mutability":"mutable","name":"rounding","nameLocation":"9818:8:17","nodeType":"VariableDeclaration","scope":3375,"src":"9809:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3344,"nodeType":"UserDefinedTypeName","pathNode":{"id":3343,"name":"Rounding","nameLocations":["9809:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2808,"src":"9809:8:17"},"referencedDeclaration":2808,"src":"9809:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"9793:34:17"},"returnParameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3375,"src":"9851:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"9851:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9850:9:17"},"scope":3667,"src":"9780:245:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3503,"nodeType":"Block","src":"10212:854:17","statements":[{"assignments":[3384],"declarations":[{"constant":false,"id":3384,"mutability":"mutable","name":"result","nameLocation":"10230:6:17","nodeType":"VariableDeclaration","scope":3503,"src":"10222:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3383,"name":"uint256","nodeType":"ElementaryTypeName","src":"10222:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3386,"initialValue":{"hexValue":"30","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10239:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10222:18:17"},{"id":3500,"nodeType":"UncheckedBlock","src":"10250:787:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10278:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10287:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10293:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10287:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10278:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3403,"nodeType":"IfStatement","src":"10274:103:17","trueBody":{"id":3402,"nodeType":"Block","src":"10297:80:17","statements":[{"expression":{"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10315:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10324:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10324:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10315:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3397,"nodeType":"ExpressionStatement","src":"10315:17:17"},{"expression":{"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"10350:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10350:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3401,"nodeType":"ExpressionStatement","src":"10350:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10394:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10403:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10409:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10403:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10394:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3420,"nodeType":"IfStatement","src":"10390:103:17","trueBody":{"id":3419,"nodeType":"Block","src":"10413:80:17","statements":[{"expression":{"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10431:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10440:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10446:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10440:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10431:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3414,"nodeType":"ExpressionStatement","src":"10431:17:17"},{"expression":{"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"10466:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10466:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3418,"nodeType":"ExpressionStatement","src":"10466:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10510:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10519:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10525:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10519:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10510:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3437,"nodeType":"IfStatement","src":"10506:103:17","trueBody":{"id":3436,"nodeType":"Block","src":"10529:80:17","statements":[{"expression":{"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10547:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10556:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10562:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10556:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10547:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3431,"nodeType":"ExpressionStatement","src":"10547:17:17"},{"expression":{"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"10582:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10592:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10582:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3435,"nodeType":"ExpressionStatement","src":"10582:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10626:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10635:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10641:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10635:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10626:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3454,"nodeType":"IfStatement","src":"10622:100:17","trueBody":{"id":3453,"nodeType":"Block","src":"10644:78:17","statements":[{"expression":{"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10662:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10671:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10677:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10671:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10662:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3448,"nodeType":"ExpressionStatement","src":"10662:16:17"},{"expression":{"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"10696:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10706:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10696:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3452,"nodeType":"ExpressionStatement","src":"10696:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10739:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10748:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10754:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10748:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10739:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3471,"nodeType":"IfStatement","src":"10735:100:17","trueBody":{"id":3470,"nodeType":"Block","src":"10757:78:17","statements":[{"expression":{"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10775:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10784:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10790:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10784:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10775:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3465,"nodeType":"ExpressionStatement","src":"10775:16:17"},{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3466,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"10809:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10819:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10809:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3469,"nodeType":"ExpressionStatement","src":"10809:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10852:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10861:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10861:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10852:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3488,"nodeType":"IfStatement","src":"10848:100:17","trueBody":{"id":3487,"nodeType":"Block","src":"10870:78:17","statements":[{"expression":{"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10888:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10897:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10897:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10888:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3482,"nodeType":"ExpressionStatement","src":"10888:16:17"},{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"10922:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10932:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10922:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3486,"nodeType":"ExpressionStatement","src":"10922:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"10965:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10974:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10980:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10974:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10965:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3499,"nodeType":"IfStatement","src":"10961:66:17","trueBody":{"id":3498,"nodeType":"Block","src":"10983:44:17","statements":[{"expression":{"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3494,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"11001:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11001:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3497,"nodeType":"ExpressionStatement","src":"11001:11:17"}]}}]},{"expression":{"id":3501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"11053:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3382,"id":3502,"nodeType":"Return","src":"11046:13:17"}]},"documentation":{"id":3376,"nodeType":"StructuredDocumentation","src":"10031:114:17","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3504,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10159:5:17","nodeType":"FunctionDefinition","parameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3378,"mutability":"mutable","name":"value","nameLocation":"10173:5:17","nodeType":"VariableDeclaration","scope":3504,"src":"10165:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3377,"name":"uint256","nodeType":"ElementaryTypeName","src":"10165:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10164:15:17"},"returnParameters":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3504,"src":"10203:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3380,"name":"uint256","nodeType":"ElementaryTypeName","src":"10203:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10202:9:17"},"scope":3667,"src":"10150:916:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3539,"nodeType":"Block","src":"11301:167:17","statements":[{"id":3538,"nodeType":"UncheckedBlock","src":"11311:151:17","statements":[{"assignments":[3516],"declarations":[{"constant":false,"id":3516,"mutability":"mutable","name":"result","nameLocation":"11343:6:17","nodeType":"VariableDeclaration","scope":3538,"src":"11335:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"11335:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3520,"initialValue":{"arguments":[{"id":3518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"11358:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3517,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3504,3540],"referencedDeclaration":3504,"src":"11352:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11352:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11335:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"11385:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"11395:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3523,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"11407:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2808_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11416:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2806,"src":"11407:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"src":"11395:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11422:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3516,"src":"11428:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"11437:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11422:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11395:47:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11449:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11395:55:17","trueExpression":{"hexValue":"31","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11445:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11394:57:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11385:66:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3514,"id":3537,"nodeType":"Return","src":"11378:73:17"}]}]},"documentation":{"id":3505,"nodeType":"StructuredDocumentation","src":"11072:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3540,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11229:5:17","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"value","nameLocation":"11243:5:17","nodeType":"VariableDeclaration","scope":3540,"src":"11235:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3506,"name":"uint256","nodeType":"ElementaryTypeName","src":"11235:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3510,"mutability":"mutable","name":"rounding","nameLocation":"11259:8:17","nodeType":"VariableDeclaration","scope":3540,"src":"11250:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3509,"nodeType":"UserDefinedTypeName","pathNode":{"id":3508,"name":"Rounding","nameLocations":["11250:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2808,"src":"11250:8:17"},"referencedDeclaration":2808,"src":"11250:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"11234:34:17"},"returnParameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3540,"src":"11292:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"11292:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11291:9:17"},"scope":3667,"src":"11220:248:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3626,"nodeType":"Block","src":"11782:600:17","statements":[{"assignments":[3549],"declarations":[{"constant":false,"id":3549,"mutability":"mutable","name":"result","nameLocation":"11800:6:17","nodeType":"VariableDeclaration","scope":3626,"src":"11792:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"11792:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3551,"initialValue":{"hexValue":"30","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11809:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11792:18:17"},{"id":3623,"nodeType":"UncheckedBlock","src":"11820:533:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"11848:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11848:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11863:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11848:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3566,"nodeType":"IfStatement","src":"11844:98:17","trueBody":{"id":3565,"nodeType":"Block","src":"11866:76:17","statements":[{"expression":{"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"11884:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11894:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11884:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3560,"nodeType":"ExpressionStatement","src":"11884:13:17"},{"expression":{"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3561,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"11915:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11925:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11915:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3564,"nodeType":"ExpressionStatement","src":"11915:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"11959:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11968:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11959:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11973:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11959:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3581,"nodeType":"IfStatement","src":"11955:95:17","trueBody":{"id":3580,"nodeType":"Block","src":"11976:74:17","statements":[{"expression":{"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"11994:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12004:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11994:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3575,"nodeType":"ExpressionStatement","src":"11994:12:17"},{"expression":{"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3576,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"12024:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12034:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12024:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3579,"nodeType":"ExpressionStatement","src":"12024:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"12067:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12076:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12067:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12081:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12067:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3596,"nodeType":"IfStatement","src":"12063:95:17","trueBody":{"id":3595,"nodeType":"Block","src":"12084:74:17","statements":[{"expression":{"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"12102:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12112:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12102:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3590,"nodeType":"ExpressionStatement","src":"12102:12:17"},{"expression":{"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"12132:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12142:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12132:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3594,"nodeType":"ExpressionStatement","src":"12132:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"12175:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12184:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12175:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12189:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12175:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3611,"nodeType":"IfStatement","src":"12171:95:17","trueBody":{"id":3610,"nodeType":"Block","src":"12192:74:17","statements":[{"expression":{"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"12210:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12220:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12210:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3605,"nodeType":"ExpressionStatement","src":"12210:12:17"},{"expression":{"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"12240:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12250:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12240:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3609,"nodeType":"ExpressionStatement","src":"12240:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"12283:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12292:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12283:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12296:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12283:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3622,"nodeType":"IfStatement","src":"12279:64:17","trueBody":{"id":3621,"nodeType":"Block","src":"12299:44:17","statements":[{"expression":{"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"12317:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12327:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12317:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3620,"nodeType":"ExpressionStatement","src":"12317:11:17"}]}}]},{"expression":{"id":3624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"12369:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3547,"id":3625,"nodeType":"Return","src":"12362:13:17"}]},"documentation":{"id":3541,"nodeType":"StructuredDocumentation","src":"11474:240:17","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3627,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11728:6:17","nodeType":"FunctionDefinition","parameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"value","nameLocation":"11743:5:17","nodeType":"VariableDeclaration","scope":3627,"src":"11735:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"11735:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11734:15:17"},"returnParameters":{"id":3547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3627,"src":"11773:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3545,"name":"uint256","nodeType":"ElementaryTypeName","src":"11773:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11772:9:17"},"scope":3667,"src":"11719:663:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3665,"nodeType":"Block","src":"12619:174:17","statements":[{"id":3664,"nodeType":"UncheckedBlock","src":"12629:158:17","statements":[{"assignments":[3639],"declarations":[{"constant":false,"id":3639,"mutability":"mutable","name":"result","nameLocation":"12661:6:17","nodeType":"VariableDeclaration","scope":3664,"src":"12653:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"12653:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3643,"initialValue":{"arguments":[{"id":3641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"12677:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3640,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3627,3666],"referencedDeclaration":3627,"src":"12670:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12670:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12653:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"12704:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"12714:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3646,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"12726:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2808_$","typeString":"type(enum MathUpgradeable.Rounding)"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12735:2:17","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2806,"src":"12726:11:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"src":"12714:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"12747:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12747:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12746:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"12762:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12741:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12714:53:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12714:61:17","trueExpression":{"hexValue":"31","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12713:63:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12704:72:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3637,"id":3663,"nodeType":"Return","src":"12697:79:17"}]}]},"documentation":{"id":3628,"nodeType":"StructuredDocumentation","src":"12388:144:17","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3666,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12546:6:17","nodeType":"FunctionDefinition","parameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"value","nameLocation":"12561:5:17","nodeType":"VariableDeclaration","scope":3666,"src":"12553:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"12553:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"rounding","nameLocation":"12577:8:17","nodeType":"VariableDeclaration","scope":3666,"src":"12568:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"},"typeName":{"id":3632,"nodeType":"UserDefinedTypeName","pathNode":{"id":3631,"name":"Rounding","nameLocations":["12568:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":2808,"src":"12568:8:17"},"referencedDeclaration":2808,"src":"12568:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2808","typeString":"enum MathUpgradeable.Rounding"}},"visibility":"internal"}],"src":"12552:34:17"},"returnParameters":{"id":3637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3666,"src":"12610:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3635,"name":"uint256","nodeType":"ElementaryTypeName","src":"12610:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12609:9:17"},"scope":3667,"src":"12537:256:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3668,"src":"202:12593:17","usedErrors":[]}],"src":"103:12693:17"},"id":17},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol","exportedSymbols":{"SignedMathUpgradeable":[3772]},"id":3773,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3669,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMathUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":3670,"nodeType":"StructuredDocumentation","src":"134:80:18","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3772,"linearizedBaseContracts":[3772],"name":"SignedMathUpgradeable","nameLocation":"223:21:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3687,"nodeType":"Block","src":"386:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3680,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"403:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3681,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"407:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"403:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3684,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"415:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"403:13:18","trueExpression":{"id":3683,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"411:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3679,"id":3686,"nodeType":"Return","src":"396:20:18"}]},"documentation":{"id":3671,"nodeType":"StructuredDocumentation","src":"251:66:18","text":" @dev Returns the largest of two signed numbers."},"id":3688,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"331:3:18","nodeType":"FunctionDefinition","parameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"mutability":"mutable","name":"a","nameLocation":"342:1:18","nodeType":"VariableDeclaration","scope":3688,"src":"335:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3672,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"b","nameLocation":"352:1:18","nodeType":"VariableDeclaration","scope":3688,"src":"345:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3674,"name":"int256","nodeType":"ElementaryTypeName","src":"345:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"334:20:18"},"returnParameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3688,"src":"378:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3677,"name":"int256","nodeType":"ElementaryTypeName","src":"378:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"377:8:18"},"scope":3772,"src":"322:101:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3705,"nodeType":"Block","src":"565:37:18","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"582:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3699,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"586:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"582:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3702,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"594:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"582:13:18","trueExpression":{"id":3701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"590:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3697,"id":3704,"nodeType":"Return","src":"575:20:18"}]},"documentation":{"id":3689,"nodeType":"StructuredDocumentation","src":"429:67:18","text":" @dev Returns the smallest of two signed numbers."},"id":3706,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"510:3:18","nodeType":"FunctionDefinition","parameters":{"id":3694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3691,"mutability":"mutable","name":"a","nameLocation":"521:1:18","nodeType":"VariableDeclaration","scope":3706,"src":"514:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3690,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3693,"mutability":"mutable","name":"b","nameLocation":"531:1:18","nodeType":"VariableDeclaration","scope":3706,"src":"524:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3692,"name":"int256","nodeType":"ElementaryTypeName","src":"524:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"513:20:18"},"returnParameters":{"id":3697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3706,"src":"557:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3695,"name":"int256","nodeType":"ElementaryTypeName","src":"557:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"556:8:18"},"scope":3772,"src":"501:101:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3749,"nodeType":"Block","src":"807:162:18","statements":[{"assignments":[3717],"declarations":[{"constant":false,"id":3717,"mutability":"mutable","name":"x","nameLocation":"876:1:18","nodeType":"VariableDeclaration","scope":3749,"src":"869:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3716,"name":"int256","nodeType":"ElementaryTypeName","src":"869:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3730,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"881:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3719,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"885:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3722,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"892:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3723,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"896:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"892:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3725,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"891:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"902:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"891:12:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"890:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"880:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"869:35:18"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3731,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"921:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3736,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"941:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"933:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3734,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:18","typeDescriptions":{}}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"933:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"947:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"933:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3732,"name":"int256","nodeType":"ElementaryTypeName","src":"926:6:18","typeDescriptions":{}}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3741,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"955:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3742,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"959:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"955:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"954:7:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"926:35:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"925:37:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"921:41:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3715,"id":3748,"nodeType":"Return","src":"914:48:18"}]},"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"608:126:18","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3750,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"748:7:18","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"a","nameLocation":"763:1:18","nodeType":"VariableDeclaration","scope":3750,"src":"756:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3708,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"b","nameLocation":"773:1:18","nodeType":"VariableDeclaration","scope":3750,"src":"766:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3710,"name":"int256","nodeType":"ElementaryTypeName","src":"766:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"755:20:18"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3750,"src":"799:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3713,"name":"int256","nodeType":"ElementaryTypeName","src":"799:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"798:8:18"},"scope":3772,"src":"739:230:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3770,"nodeType":"Block","src":"1113:158:18","statements":[{"id":3769,"nodeType":"UncheckedBlock","src":"1123:142:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3760,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"1238:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1243:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1238:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1251:2:18","subExpression":{"id":3764,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"1252:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1238:15:18","trueExpression":{"id":3763,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"1247:1:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1230:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:18","typeDescriptions":{}}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1230:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3757,"id":3768,"nodeType":"Return","src":"1223:31:18"}]}]},"documentation":{"id":3751,"nodeType":"StructuredDocumentation","src":"975:78:18","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3771,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1067:3:18","nodeType":"FunctionDefinition","parameters":{"id":3754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3753,"mutability":"mutable","name":"n","nameLocation":"1078:1:18","nodeType":"VariableDeclaration","scope":3771,"src":"1071:8:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3752,"name":"int256","nodeType":"ElementaryTypeName","src":"1071:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1070:10:18"},"returnParameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3771,"src":"1104:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"1104:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1103:9:18"},"scope":3772,"src":"1058:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3773,"src":"215:1058:18","usedErrors":[]}],"src":"109:1165:18"},"id":18},"contracts/TestPoL.sol":{"ast":{"absolutePath":"contracts/TestPoL.sol","exportedSymbols":{"AddressUpgradeable":[1796],"ContextUpgradeable":[1847],"CountersUpgradeable":[1921],"ECDSAUpgradeable":[2516],"EIP712Upgradeable":[2801],"ERC20BurnableUpgradeable":[1210],"ERC20PermitUpgradeable":[1402],"ERC20Upgradeable":[1067],"IERC20MetadataUpgradeable":[1427],"IERC20PermitUpgradeable":[1463],"IERC20Upgradeable":[1145],"IERC5267Upgradeable":[157],"Initializable":[326],"MathUpgradeable":[3667],"OwnableUpgradeable":[132],"PausableUpgradeable":[454],"SignedMathUpgradeable":[3772],"StringsUpgradeable":[2150],"TestPoL":[3941]},"id":3942,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3774,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:19"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":3775,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3942,"sourceUnit":1068,"src":"64:78:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol","id":3776,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3942,"sourceUnit":1211,"src":"143:97:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol","id":3777,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3942,"sourceUnit":455,"src":"241:78:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":3778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3942,"sourceUnit":133,"src":"320:75:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":3779,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3942,"sourceUnit":327,"src":"396:75:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol","id":3780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3942,"sourceUnit":1467,"src":"472:101:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3781,"name":"Initializable","nameLocations":["595:13:19"],"nodeType":"IdentifierPath","referencedDeclaration":326,"src":"595:13:19"},"id":3782,"nodeType":"InheritanceSpecifier","src":"595:13:19"},{"baseName":{"id":3783,"name":"ERC20Upgradeable","nameLocations":["610:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"610:16:19"},"id":3784,"nodeType":"InheritanceSpecifier","src":"610:16:19"},{"baseName":{"id":3785,"name":"ERC20BurnableUpgradeable","nameLocations":["628:24:19"],"nodeType":"IdentifierPath","referencedDeclaration":1210,"src":"628:24:19"},"id":3786,"nodeType":"InheritanceSpecifier","src":"628:24:19"},{"baseName":{"id":3787,"name":"PausableUpgradeable","nameLocations":["654:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":454,"src":"654:19:19"},"id":3788,"nodeType":"InheritanceSpecifier","src":"654:19:19"},{"baseName":{"id":3789,"name":"OwnableUpgradeable","nameLocations":["675:18:19"],"nodeType":"IdentifierPath","referencedDeclaration":132,"src":"675:18:19"},"id":3790,"nodeType":"InheritanceSpecifier","src":"675:18:19"},{"baseName":{"id":3791,"name":"ERC20PermitUpgradeable","nameLocations":["695:22:19"],"nodeType":"IdentifierPath","referencedDeclaration":1402,"src":"695:22:19"},"id":3792,"nodeType":"InheritanceSpecifier","src":"695:22:19"}],"canonicalName":"TestPoL","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3941,"linearizedBaseContracts":[3941,1402,2801,157,1463,132,454,1210,1067,1427,1145,1847,326],"name":"TestPoL","nameLocation":"584:7:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3799,"nodeType":"Block","src":"791:39:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3796,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"801:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"801:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3798,"nodeType":"ExpressionStatement","src":"801:22:19"}]},"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"724:48:19","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":3800,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[],"src":"788:2:19"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[],"src":"791:0:19"},"scope":3941,"src":"777:53:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3823,"nodeType":"Block","src":"877:266:19","statements":[{"expression":{"arguments":[{"hexValue":"54657374506f4c","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"900:9:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6fdc6519984f441e97708a4e48b5b55dc22fd884a65dfd35b2e55e6ce91cfaff","typeString":"literal_string \"TestPoL\""},"value":"TestPoL"},{"hexValue":"5450","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"911:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a933d4596c6ad1b9b83bcbbf3e34f63c3ad3b1678623355a7a01cebd52945670","typeString":"literal_string \"TP\""},"value":"TP"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6fdc6519984f441e97708a4e48b5b55dc22fd884a65dfd35b2e55e6ce91cfaff","typeString":"literal_string \"TestPoL\""},{"typeIdentifier":"t_stringliteral_a933d4596c6ad1b9b83bcbbf3e34f63c3ad3b1678623355a7a01cebd52945670","typeString":"literal_string \"TP\""}],"id":3805,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"887:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"887:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3809,"nodeType":"ExpressionStatement","src":"887:29:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3810,"name":"__ERC20Burnable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"926:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"926:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3812,"nodeType":"ExpressionStatement","src":"926:22:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3813,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"958:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"958:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3815,"nodeType":"ExpressionStatement","src":"958:17:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3816,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"985:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"985:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3818,"nodeType":"ExpressionStatement","src":"985:16:19"},{"expression":{"arguments":[{"hexValue":"54657374506f4c","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1030:9:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6fdc6519984f441e97708a4e48b5b55dc22fd884a65dfd35b2e55e6ce91cfaff","typeString":"literal_string \"TestPoL\""},"value":"TestPoL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6fdc6519984f441e97708a4e48b5b55dc22fd884a65dfd35b2e55e6ce91cfaff","typeString":"literal_string \"TestPoL\""}],"id":3819,"name":"__ERC20Permit_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"1011:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1011:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3822,"nodeType":"ExpressionStatement","src":"1011:29:19"}]},"functionSelector":"8129fc1c","id":3824,"implemented":true,"kind":"function","modifiers":[{"id":3803,"kind":"modifierInvocation","modifierName":{"id":3802,"name":"initializer","nameLocations":["858:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":228,"src":"858:11:19"},"nodeType":"ModifierInvocation","src":"858:11:19"}],"name":"initialize","nameLocation":"845:10:19","nodeType":"FunctionDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[],"src":"855:2:19"},"returnParameters":{"id":3804,"nodeType":"ParameterList","parameters":[],"src":"877:0:19"},"scope":3941,"src":"836:307:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3832,"nodeType":"Block","src":"1183:25:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3829,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"1193:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1193:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3831,"nodeType":"ExpressionStatement","src":"1193:8:19"}]},"functionSelector":"8456cb59","id":3833,"implemented":true,"kind":"function","modifiers":[{"id":3827,"kind":"modifierInvocation","modifierName":{"id":3826,"name":"onlyOwner","nameLocations":["1173:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1173:9:19"},"nodeType":"ModifierInvocation","src":"1173:9:19"}],"name":"pause","nameLocation":"1158:5:19","nodeType":"FunctionDefinition","parameters":{"id":3825,"nodeType":"ParameterList","parameters":[],"src":"1163:2:19"},"returnParameters":{"id":3828,"nodeType":"ParameterList","parameters":[],"src":"1183:0:19"},"scope":3941,"src":"1149:59:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3841,"nodeType":"Block","src":"1250:27:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3838,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1260:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1260:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3840,"nodeType":"ExpressionStatement","src":"1260:10:19"}]},"functionSelector":"3f4ba83a","id":3842,"implemented":true,"kind":"function","modifiers":[{"id":3836,"kind":"modifierInvocation","modifierName":{"id":3835,"name":"onlyOwner","nameLocations":["1240:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"1240:9:19"},"nodeType":"ModifierInvocation","src":"1240:9:19"}],"name":"unpause","nameLocation":"1223:7:19","nodeType":"FunctionDefinition","parameters":{"id":3834,"nodeType":"ParameterList","parameters":[],"src":"1230:2:19"},"returnParameters":{"id":3837,"nodeType":"ParameterList","parameters":[],"src":"1250:0:19"},"scope":3941,"src":"1214:63:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3854,"nodeType":"Block","src":"1332:34:19","statements":[{"expression":{"arguments":[{"id":3850,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"1348:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3851,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"1352:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3849,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"1342:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3853,"nodeType":"ExpressionStatement","src":"1342:17:19"}]},"functionSelector":"40c10f19","id":3855,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1292:4:19","nodeType":"FunctionDefinition","parameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3844,"mutability":"mutable","name":"to","nameLocation":"1305:2:19","nodeType":"VariableDeclaration","scope":3855,"src":"1297:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3843,"name":"address","nodeType":"ElementaryTypeName","src":"1297:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"amount","nameLocation":"1317:6:19","nodeType":"VariableDeclaration","scope":3855,"src":"1309:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1296:28:19"},"returnParameters":{"id":3848,"nodeType":"ParameterList","parameters":[],"src":"1332:0:19"},"scope":3941,"src":"1283:83:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3892,"nodeType":"Block","src":"1465:155:19","statements":[{"assignments":[3867],"declarations":[{"constant":false,"id":3867,"mutability":"mutable","name":"i","nameLocation":"1483:1:19","nodeType":"VariableDeclaration","scope":3892,"src":"1475:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1475:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3869,"initialValue":{"hexValue":"30","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1475:13:19"},{"body":{"id":3887,"nodeType":"Block","src":"1523:72:19","statements":[{"expression":{"arguments":[{"baseExpression":{"id":3875,"name":"dests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"1545:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3877,"indexExpression":{"id":3876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"1551:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1545:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3878,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"1555:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3880,"indexExpression":{"id":3879,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"1562:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1555:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3874,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"1536:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3882,"nodeType":"ExpressionStatement","src":"1536:29:19"},{"expression":{"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3883,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"1578:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1583:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1578:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3886,"nodeType":"ExpressionStatement","src":"1578:6:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"1505:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3871,"name":"dests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"1509:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1515:6:19","memberName":"length","nodeType":"MemberAccess","src":"1509:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1505:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3888,"nodeType":"WhileStatement","src":"1498:97:19"},{"expression":{"components":[{"id":3889,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"1611:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3865,"id":3891,"nodeType":"Return","src":"1604:9:19"}]},"functionSelector":"aad41a41","id":3893,"implemented":true,"kind":"function","modifiers":[],"name":"multisend","nameLocation":"1381:9:19","nodeType":"FunctionDefinition","parameters":{"id":3862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"dests","nameLocation":"1408:5:19","nodeType":"VariableDeclaration","scope":3893,"src":"1391:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3856,"name":"address","nodeType":"ElementaryTypeName","src":"1391:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3857,"nodeType":"ArrayTypeName","src":"1391:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3861,"mutability":"mutable","name":"values","nameLocation":"1432:6:19","nodeType":"VariableDeclaration","scope":3893,"src":"1415:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1415:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3860,"nodeType":"ArrayTypeName","src":"1415:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1390:49:19"},"returnParameters":{"id":3865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3893,"src":"1456:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1456:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1455:9:19"},"scope":3941,"src":"1372:248:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3939,"nodeType":"Block","src":"1787:222:19","statements":[{"expression":{"arguments":[{"id":3915,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"1836:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3916,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"1843:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"1852:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3918,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"1860:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1852:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3920,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"1865:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3921,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"1875:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3922,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"1878:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3923,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"1881:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3914,"name":"permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"1829:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32)"}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:54:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3925,"nodeType":"ExpressionStatement","src":"1829:54:19"},{"expression":{"arguments":[{"id":3927,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"1932:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3928,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"1939:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"1950:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3926,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1919:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1919:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3931,"nodeType":"ExpressionStatement","src":"1919:37:19"},{"expression":{"arguments":[{"id":3933,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"1979:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3934,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1986:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1990:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1986:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3936,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"1998:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3932,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1966:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1966:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3938,"nodeType":"ExpressionStatement","src":"1966:36:19"}]},"functionSelector":"fdd95894","id":3940,"implemented":true,"kind":"function","modifiers":[],"name":"transferWithPermit","nameLocation":"1634:18:19","nodeType":"FunctionDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"owner","nameLocation":"1661:5:19","nodeType":"VariableDeclaration","scope":3940,"src":"1653:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3894,"name":"address","nodeType":"ElementaryTypeName","src":"1653:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3897,"mutability":"mutable","name":"spender","nameLocation":"1676:7:19","nodeType":"VariableDeclaration","scope":3940,"src":"1668:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3896,"name":"address","nodeType":"ElementaryTypeName","src":"1668:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3899,"mutability":"mutable","name":"recipient","nameLocation":"1693:9:19","nodeType":"VariableDeclaration","scope":3940,"src":"1685:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3898,"name":"address","nodeType":"ElementaryTypeName","src":"1685:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"value","nameLocation":"1712:5:19","nodeType":"VariableDeclaration","scope":3940,"src":"1704:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3903,"mutability":"mutable","name":"fee","nameLocation":"1726:3:19","nodeType":"VariableDeclaration","scope":3940,"src":"1718:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1718:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3905,"mutability":"mutable","name":"deadline","nameLocation":"1739:8:19","nodeType":"VariableDeclaration","scope":3940,"src":"1731:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1731:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3907,"mutability":"mutable","name":"v","nameLocation":"1755:1:19","nodeType":"VariableDeclaration","scope":3940,"src":"1749:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3906,"name":"uint8","nodeType":"ElementaryTypeName","src":"1749:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"r","nameLocation":"1766:1:19","nodeType":"VariableDeclaration","scope":3940,"src":"1758:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3908,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1758:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3911,"mutability":"mutable","name":"s","nameLocation":"1777:1:19","nodeType":"VariableDeclaration","scope":3940,"src":"1769:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1769:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1652:127:19"},"returnParameters":{"id":3913,"nodeType":"ParameterList","parameters":[],"src":"1787:0:19"},"scope":3941,"src":"1625:384:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3942,"src":"575:1436:19","usedErrors":[]}],"src":"39:1973:19"},"id":19}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":164,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":167,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1846,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":11,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"_owner","offset":0,"slot":"51","type":"t_address"},{"astId":131,"contract":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol":{"IERC5267Upgradeable":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol\":\"IERC5267Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":164,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":167,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":164,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":167,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1846,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":348,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"_paused","offset":0,"slot":"51","type":"t_bool"},{"astId":453,"contract":"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable","label":"__gap","offset":0,"slot":"52","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50611233806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b10565b60405180910390f35b6100e660048036038101906100e19190610bcb565b610308565b6040516100f39190610c26565b60405180910390f35b61010461032b565b6040516101119190610c50565b60405180910390f35b610134600480360381019061012f9190610c6b565b610335565b6040516101419190610c26565b60405180910390f35b610152610364565b60405161015f9190610cda565b60405180910390f35b610182600480360381019061017d9190610bcb565b61036d565b60405161018f9190610c26565b60405180910390f35b6101b260048036038101906101ad9190610cf5565b6103a4565b6040516101bf9190610c50565b60405180910390f35b6101d06103ed565b6040516101dd9190610b10565b60405180910390f35b61020060048036038101906101fb9190610bcb565b61047f565b60405161020d9190610c26565b60405180910390f35b610230600480360381019061022b9190610bcb565b6104f6565b60405161023d9190610c26565b60405180910390f35b610260600480360381019061025b9190610d22565b610519565b60405161026d9190610c50565b60405180910390f35b60606036805461028590610d91565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d91565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a0565b90506103208185856105a8565b600191505092915050565b6000603554905090565b6000806103406105a0565b905061034d858285610771565b6103588585856107fd565b60019150509392505050565b60006012905090565b6000806103786105a0565b905061039981858561038a8589610519565b6103949190610df1565b6105a8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546103fc90610d91565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610d91565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60008061048a6105a0565b905060006104988286610519565b9050838110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610e97565b60405180910390fd5b6104ea82868684036105a8565b60019250505092915050565b6000806105016105a0565b905061050e8185856107fd565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f29565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d90610fbb565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107649190610c50565b60405180910390a3505050565b600061077d8484610519565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f757818110156107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090611027565b60405180910390fd5b6107f684848484036105a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610863906110b9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d29061114b565b60405180910390fd5b6108e6838383610a76565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610964906111dd565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610c50565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aba578082015181840152602081019050610a9f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ae282610a80565b610aec8185610a8b565b9350610afc818560208601610a9c565b610b0581610ac6565b840191505092915050565b60006020820190508181036000830152610b2a8184610ad7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6282610b37565b9050919050565b610b7281610b57565b8114610b7d57600080fd5b50565b600081359050610b8f81610b69565b92915050565b6000819050919050565b610ba881610b95565b8114610bb357600080fd5b50565b600081359050610bc581610b9f565b92915050565b60008060408385031215610be257610be1610b32565b5b6000610bf085828601610b80565b9250506020610c0185828601610bb6565b9150509250929050565b60008115159050919050565b610c2081610c0b565b82525050565b6000602082019050610c3b6000830184610c17565b92915050565b610c4a81610b95565b82525050565b6000602082019050610c656000830184610c41565b92915050565b600080600060608486031215610c8457610c83610b32565b5b6000610c9286828701610b80565b9350506020610ca386828701610b80565b9250506040610cb486828701610bb6565b9150509250925092565b600060ff82169050919050565b610cd481610cbe565b82525050565b6000602082019050610cef6000830184610ccb565b92915050565b600060208284031215610d0b57610d0a610b32565b5b6000610d1984828501610b80565b91505092915050565b60008060408385031215610d3957610d38610b32565b5b6000610d4785828601610b80565b9250506020610d5885828601610b80565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da957607f821691505b602082108103610dbc57610dbb610d62565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dfc82610b95565b9150610e0783610b95565b9250828201905080821115610e1f57610e1e610dc2565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e81602583610a8b565b9150610e8c82610e25565b604082019050919050565b60006020820190508181036000830152610eb081610e74565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f13602483610a8b565b9150610f1e82610eb7565b604082019050919050565b60006020820190508181036000830152610f4281610f06565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa5602283610a8b565b9150610fb082610f49565b604082019050919050565b60006020820190508181036000830152610fd481610f98565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611011601d83610a8b565b915061101c82610fdb565b602082019050919050565b6000602082019050818103600083015261104081611004565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110a3602583610a8b565b91506110ae82611047565b604082019050919050565b600060208201905081810360008301526110d281611096565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611135602383610a8b565b9150611140826110d9565b604082019050919050565b6000602082019050818103600083015261116481611128565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c7602683610a8b565b91506111d28261116b565b604082019050919050565b600060208201905081810360008301526111f6816111ba565b905091905056fea2646970667358221220ab57fbbae9538a596101c087012d2d20dad53a015d559b96a14a799d3b6ee56f64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1233 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48A PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x498 DUP3 DUP7 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x501 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67D SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D DUP5 DUP5 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E0 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E6 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x964 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE2 DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAEC DUP2 DUP6 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP PUSH2 0xAFC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xAC6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2A DUP2 DUP5 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 DUP3 PUSH2 0xB37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB72 DUP2 PUSH2 0xB57 JUMP JUMPDEST DUP2 EQ PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8F DUP2 PUSH2 0xB69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA8 DUP2 PUSH2 0xB95 JUMP JUMPDEST DUP2 EQ PUSH2 0xBB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC5 DUP2 PUSH2 0xB9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF0 DUP6 DUP3 DUP7 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC01 DUP6 DUP3 DUP7 ADD PUSH2 0xBB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC20 DUP2 PUSH2 0xC0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0xB95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC84 JUMPI PUSH2 0xC83 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC92 DUP7 DUP3 DUP8 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA3 DUP7 DUP3 DUP8 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB4 DUP7 DUP3 DUP8 ADD PUSH2 0xBB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD4 DUP2 PUSH2 0xCBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0B JUMPI PUSH2 0xD0A PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD19 DUP5 DUP3 DUP6 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD39 JUMPI PUSH2 0xD38 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD47 DUP6 DUP3 DUP7 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD58 DUP6 DUP3 DUP7 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0xD62 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDFC DUP3 PUSH2 0xB95 JUMP JUMPDEST SWAP2 POP PUSH2 0xE07 DUP4 PUSH2 0xB95 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1F JUMPI PUSH2 0xE1E PUSH2 0xDC2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE81 PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xE8C DUP3 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB0 DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF13 PUSH1 0x24 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xF1E DUP3 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF42 DUP2 PUSH2 0xF06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA5 PUSH1 0x22 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xFB0 DUP3 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD4 DUP2 PUSH2 0xF98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 PUSH1 0x1D DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x101C DUP3 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1040 DUP2 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A3 PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x10AE DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10D2 DUP2 PUSH2 0x1096 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1135 PUSH1 0x23 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1140 DUP3 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1164 DUP2 PUSH2 0x1128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C7 PUSH1 0x26 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x11D2 DUP3 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F6 DUP2 PUSH2 0x11BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB JUMPI 0xFB 0xBA 0xE9 MSTORE8 DUP11 MSIZE PUSH2 0x1C0 DUP8 ADD 0x2D 0x2D KECCAK256 0xDA 0xD5 GASPRICE ADD 0x5D SSTORE SWAP12 SWAP7 LOG1 0x4A PUSH26 0x9D3B6EE56F64736F6C6343000812003300000000000000000000 ","sourceMap":"1632:11861:4:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1061":{"entryPoint":2683,"id":1061,"parameterSlots":3,"returnSlots":0},"@_approve_996":{"entryPoint":1448,"id":996,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1050":{"entryPoint":2678,"id":1050,"parameterSlots":3,"returnSlots":0},"@_msgSender_1824":{"entryPoint":1440,"id":1824,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1039":{"entryPoint":1905,"id":1039,"parameterSlots":3,"returnSlots":0},"@_transfer_822":{"entryPoint":2045,"id":822,"parameterSlots":3,"returnSlots":0},"@allowance_617":{"entryPoint":1305,"id":617,"parameterSlots":2,"returnSlots":1},"@approve_642":{"entryPoint":776,"id":642,"parameterSlots":2,"returnSlots":1},"@balanceOf_574":{"entryPoint":932,"id":574,"parameterSlots":1,"returnSlots":1},"@decimals_550":{"entryPoint":868,"id":550,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_745":{"entryPoint":1151,"id":745,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_704":{"entryPoint":877,"id":704,"parameterSlots":2,"returnSlots":1},"@name_530":{"entryPoint":630,"id":530,"parameterSlots":0,"returnSlots":1},"@symbol_540":{"entryPoint":1005,"id":540,"parameterSlots":0,"returnSlots":1},"@totalSupply_560":{"entryPoint":811,"id":560,"parameterSlots":0,"returnSlots":1},"@transferFrom_675":{"entryPoint":821,"id":675,"parameterSlots":3,"returnSlots":1},"@transfer_599":{"entryPoint":1270,"id":599,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2944,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2998,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3317,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3362,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3179,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3019,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3095,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4392,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3992,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4100,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4538,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4246,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3846,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3700,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3137,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3275,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3110,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4427,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4027,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4135,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4573,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4281,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3881,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3735,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3152,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3290,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2688,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2699,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3569,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2903,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3083,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2871,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2965,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3262,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2716,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3473,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3522,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3426,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2866,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2758,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4313,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3913,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4059,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4459,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4167,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3767,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3621,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2921,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2975,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:20","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:20","statements":[{"nodeType":"YulAssignment","src":"77:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:20"},"nodeType":"YulFunctionCall","src":"87:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:20","type":""}],"src":"7:99:20"},{"body":{"nodeType":"YulBlock","src":"208:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:20"},"nodeType":"YulFunctionCall","src":"218:19:20"},"nodeType":"YulExpressionStatement","src":"218:19:20"},{"nodeType":"YulAssignment","src":"246:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:20"},"nodeType":"YulFunctionCall","src":"261:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:20","type":""}],"src":"112:169:20"},{"body":{"nodeType":"YulBlock","src":"349:184:20","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:20"},"nodeType":"YulFunctionCall","src":"449:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:20"},"nodeType":"YulFunctionCall","src":"468:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:20"},"nodeType":"YulFunctionCall","src":"462:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:20"},"nodeType":"YulFunctionCall","src":"442:39:20"},"nodeType":"YulExpressionStatement","src":"442:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:20"},"nodeType":"YulFunctionCall","src":"386:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:20","statements":[{"nodeType":"YulAssignment","src":"402:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:20"},"nodeType":"YulFunctionCall","src":"407:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:20","statements":[]},"src":"378:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:20"},"nodeType":"YulFunctionCall","src":"507:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:20"},"nodeType":"YulFunctionCall","src":"500:27:20"},"nodeType":"YulExpressionStatement","src":"500:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:20","type":""}],"src":"287:246:20"},{"body":{"nodeType":"YulBlock","src":"587:54:20","statements":[{"nodeType":"YulAssignment","src":"597:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:20"},"nodeType":"YulFunctionCall","src":"611:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:20"},"nodeType":"YulFunctionCall","src":"627:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:20"},"nodeType":"YulFunctionCall","src":"607:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:20","type":""}],"src":"539:102:20"},{"body":{"nodeType":"YulBlock","src":"739:285:20","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:20"},"nodeType":"YulFunctionCall","src":"763:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:20","type":""}]},{"nodeType":"YulAssignment","src":"811:78:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:20"},"nodeType":"YulFunctionCall","src":"818:71:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:20"},"nodeType":"YulFunctionCall","src":"933:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:20"},"nodeType":"YulFunctionCall","src":"898:65:20"},"nodeType":"YulExpressionStatement","src":"898:65:20"},{"nodeType":"YulAssignment","src":"972:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:20"},"nodeType":"YulFunctionCall","src":"988:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:20"},"nodeType":"YulFunctionCall","src":"979:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:20","type":""}],"src":"647:377:20"},{"body":{"nodeType":"YulBlock","src":"1148:195:20","statements":[{"nodeType":"YulAssignment","src":"1158:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:20"},"nodeType":"YulFunctionCall","src":"1166:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:20"},"nodeType":"YulFunctionCall","src":"1201:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:20"},"nodeType":"YulFunctionCall","src":"1220:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:20"},"nodeType":"YulFunctionCall","src":"1194:47:20"},"nodeType":"YulExpressionStatement","src":"1194:47:20"},{"nodeType":"YulAssignment","src":"1250:86:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:20"},"nodeType":"YulFunctionCall","src":"1258:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:20","type":""}],"src":"1030:313:20"},{"body":{"nodeType":"YulBlock","src":"1389:35:20","statements":[{"nodeType":"YulAssignment","src":"1399:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:20"},"nodeType":"YulFunctionCall","src":"1409:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:20","type":""}],"src":"1349:75:20"},{"body":{"nodeType":"YulBlock","src":"1519:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:20"},"nodeType":"YulFunctionCall","src":"1529:12:20"},"nodeType":"YulExpressionStatement","src":"1529:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:20"},{"body":{"nodeType":"YulBlock","src":"1642:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:20"},"nodeType":"YulFunctionCall","src":"1652:12:20"},"nodeType":"YulExpressionStatement","src":"1652:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:20"},{"body":{"nodeType":"YulBlock","src":"1721:81:20","statements":[{"nodeType":"YulAssignment","src":"1731:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:20"},"nodeType":"YulFunctionCall","src":"1742:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:20","type":""}],"src":"1676:126:20"},{"body":{"nodeType":"YulBlock","src":"1853:51:20","statements":[{"nodeType":"YulAssignment","src":"1863:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:20"},"nodeType":"YulFunctionCall","src":"1874:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:20","type":""}],"src":"1808:96:20"},{"body":{"nodeType":"YulBlock","src":"1953:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:20"},"nodeType":"YulFunctionCall","src":"2012:12:20"},"nodeType":"YulExpressionStatement","src":"2012:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:20"},"nodeType":"YulFunctionCall","src":"1983:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:20"},"nodeType":"YulFunctionCall","src":"1973:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:20"},"nodeType":"YulFunctionCall","src":"1966:43:20"},"nodeType":"YulIf","src":"1963:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:20","type":""}],"src":"1910:122:20"},{"body":{"nodeType":"YulBlock","src":"2090:87:20","statements":[{"nodeType":"YulAssignment","src":"2100:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:20"},"nodeType":"YulFunctionCall","src":"2109:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:20"},"nodeType":"YulFunctionCall","src":"2138:33:20"},"nodeType":"YulExpressionStatement","src":"2138:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:20","type":""}],"src":"2038:139:20"},{"body":{"nodeType":"YulBlock","src":"2228:32:20","statements":[{"nodeType":"YulAssignment","src":"2238:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:20","type":""}],"src":"2183:77:20"},{"body":{"nodeType":"YulBlock","src":"2309:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:20"},"nodeType":"YulFunctionCall","src":"2368:12:20"},"nodeType":"YulExpressionStatement","src":"2368:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:20"},"nodeType":"YulFunctionCall","src":"2339:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:20"},"nodeType":"YulFunctionCall","src":"2329:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:20"},"nodeType":"YulFunctionCall","src":"2322:43:20"},"nodeType":"YulIf","src":"2319:63:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:20","type":""}],"src":"2266:122:20"},{"body":{"nodeType":"YulBlock","src":"2446:87:20","statements":[{"nodeType":"YulAssignment","src":"2456:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:20"},"nodeType":"YulFunctionCall","src":"2465:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:20"},"nodeType":"YulFunctionCall","src":"2494:33:20"},"nodeType":"YulExpressionStatement","src":"2494:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:20","type":""}],"src":"2394:139:20"},{"body":{"nodeType":"YulBlock","src":"2622:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:20"},"nodeType":"YulFunctionCall","src":"2670:79:20"},"nodeType":"YulExpressionStatement","src":"2670:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:20"},"nodeType":"YulFunctionCall","src":"2639:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:20"},"nodeType":"YulFunctionCall","src":"2635:32:20"},"nodeType":"YulIf","src":"2632:119:20"},{"nodeType":"YulBlock","src":"2761:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:20"},"nodeType":"YulFunctionCall","src":"2836:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:20"},"nodeType":"YulFunctionCall","src":"2815:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:20"}]}]},{"nodeType":"YulBlock","src":"2888:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:20"},"nodeType":"YulFunctionCall","src":"2964:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:20"},"nodeType":"YulFunctionCall","src":"2943:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:20","type":""}],"src":"2539:474:20"},{"body":{"nodeType":"YulBlock","src":"3061:48:20","statements":[{"nodeType":"YulAssignment","src":"3071:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:20"},"nodeType":"YulFunctionCall","src":"3089:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:20"},"nodeType":"YulFunctionCall","src":"3082:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:20","type":""}],"src":"3019:90:20"},{"body":{"nodeType":"YulBlock","src":"3174:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:20"},"nodeType":"YulFunctionCall","src":"3196:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:20"},"nodeType":"YulFunctionCall","src":"3184:34:20"},"nodeType":"YulExpressionStatement","src":"3184:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:20","type":""}],"src":"3115:109:20"},{"body":{"nodeType":"YulBlock","src":"3322:118:20","statements":[{"nodeType":"YulAssignment","src":"3332:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:20"},"nodeType":"YulFunctionCall","src":"3340:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:20"},"nodeType":"YulFunctionCall","src":"3415:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:20"},"nodeType":"YulFunctionCall","src":"3368:65:20"},"nodeType":"YulExpressionStatement","src":"3368:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:20","type":""}],"src":"3230:210:20"},{"body":{"nodeType":"YulBlock","src":"3511:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:20"},"nodeType":"YulFunctionCall","src":"3533:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:20"},"nodeType":"YulFunctionCall","src":"3521:37:20"},"nodeType":"YulExpressionStatement","src":"3521:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:20","type":""}],"src":"3446:118:20"},{"body":{"nodeType":"YulBlock","src":"3668:124:20","statements":[{"nodeType":"YulAssignment","src":"3678:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:20"},"nodeType":"YulFunctionCall","src":"3686:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:20"},"nodeType":"YulFunctionCall","src":"3767:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:20"},"nodeType":"YulFunctionCall","src":"3714:71:20"},"nodeType":"YulExpressionStatement","src":"3714:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:20","type":""}],"src":"3570:222:20"},{"body":{"nodeType":"YulBlock","src":"3898:519:20","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:20"},"nodeType":"YulFunctionCall","src":"3946:79:20"},"nodeType":"YulExpressionStatement","src":"3946:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:20"},"nodeType":"YulFunctionCall","src":"3915:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:20"},"nodeType":"YulFunctionCall","src":"3911:32:20"},"nodeType":"YulIf","src":"3908:119:20"},{"nodeType":"YulBlock","src":"4037:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:20"},"nodeType":"YulFunctionCall","src":"4112:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:20"},"nodeType":"YulFunctionCall","src":"4091:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:20"}]}]},{"nodeType":"YulBlock","src":"4164:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:20"},"nodeType":"YulFunctionCall","src":"4240:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:20"},"nodeType":"YulFunctionCall","src":"4219:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:20"}]}]},{"nodeType":"YulBlock","src":"4292:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:20"},"nodeType":"YulFunctionCall","src":"4368:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:20"},"nodeType":"YulFunctionCall","src":"4347:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:20","type":""}],"src":"3798:619:20"},{"body":{"nodeType":"YulBlock","src":"4466:43:20","statements":[{"nodeType":"YulAssignment","src":"4476:27:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:20"},"nodeType":"YulFunctionCall","src":"4487:16:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:20"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:20","type":""}],"src":"4423:86:20"},{"body":{"nodeType":"YulBlock","src":"4576:51:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:20"},"nodeType":"YulFunctionCall","src":"4598:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:20"},"nodeType":"YulFunctionCall","src":"4586:35:20"},"nodeType":"YulExpressionStatement","src":"4586:35:20"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:20","type":""}],"src":"4515:112:20"},{"body":{"nodeType":"YulBlock","src":"4727:120:20","statements":[{"nodeType":"YulAssignment","src":"4737:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:20"},"nodeType":"YulFunctionCall","src":"4745:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:20"},"nodeType":"YulFunctionCall","src":"4822:17:20"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:20"},"nodeType":"YulFunctionCall","src":"4773:67:20"},"nodeType":"YulExpressionStatement","src":"4773:67:20"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:20","type":""}],"src":"4633:214:20"},{"body":{"nodeType":"YulBlock","src":"4919:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:20"},"nodeType":"YulFunctionCall","src":"4967:79:20"},"nodeType":"YulExpressionStatement","src":"4967:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:20"},"nodeType":"YulFunctionCall","src":"4936:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:20"},"nodeType":"YulFunctionCall","src":"4932:32:20"},"nodeType":"YulIf","src":"4929:119:20"},{"nodeType":"YulBlock","src":"5058:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:20"},"nodeType":"YulFunctionCall","src":"5133:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:20"},"nodeType":"YulFunctionCall","src":"5112:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:20","type":""}],"src":"4853:329:20"},{"body":{"nodeType":"YulBlock","src":"5271:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:20"},"nodeType":"YulFunctionCall","src":"5319:79:20"},"nodeType":"YulExpressionStatement","src":"5319:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:20"},"nodeType":"YulFunctionCall","src":"5288:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:20"},"nodeType":"YulFunctionCall","src":"5284:32:20"},"nodeType":"YulIf","src":"5281:119:20"},{"nodeType":"YulBlock","src":"5410:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:20"},"nodeType":"YulFunctionCall","src":"5485:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:20"},"nodeType":"YulFunctionCall","src":"5464:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:20"}]}]},{"nodeType":"YulBlock","src":"5537:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:20"},"nodeType":"YulFunctionCall","src":"5613:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:20"},"nodeType":"YulFunctionCall","src":"5592:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:20","type":""}],"src":"5188:474:20"},{"body":{"nodeType":"YulBlock","src":"5696:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:20"},"nodeType":"YulFunctionCall","src":"5706:88:20"},"nodeType":"YulExpressionStatement","src":"5706:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:20"},"nodeType":"YulFunctionCall","src":"5803:15:20"},"nodeType":"YulExpressionStatement","src":"5803:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:20"},"nodeType":"YulFunctionCall","src":"5827:15:20"},"nodeType":"YulExpressionStatement","src":"5827:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:20"},{"body":{"nodeType":"YulBlock","src":"5905:269:20","statements":[{"nodeType":"YulAssignment","src":"5915:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:20"},"nodeType":"YulFunctionCall","src":"5925:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:20"},"nodeType":"YulFunctionCall","src":"5972:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:20","statements":[{"nodeType":"YulAssignment","src":"6037:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:20"},"nodeType":"YulFunctionCall","src":"6047:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:20"},"nodeType":"YulFunctionCall","src":"5996:26:20"},"nodeType":"YulIf","src":"5993:81:20"},{"body":{"nodeType":"YulBlock","src":"6126:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:20"},"nodeType":"YulFunctionCall","src":"6140:18:20"},"nodeType":"YulExpressionStatement","src":"6140:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:20"},"nodeType":"YulFunctionCall","src":"6110:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:20"},"nodeType":"YulFunctionCall","src":"6087:38:20"},"nodeType":"YulIf","src":"6084:84:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:20","type":""}],"src":"5854:320:20"},{"body":{"nodeType":"YulBlock","src":"6208:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:20"},"nodeType":"YulFunctionCall","src":"6218:88:20"},"nodeType":"YulExpressionStatement","src":"6218:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:20"},"nodeType":"YulFunctionCall","src":"6315:15:20"},"nodeType":"YulExpressionStatement","src":"6315:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:20"},"nodeType":"YulFunctionCall","src":"6339:15:20"},"nodeType":"YulExpressionStatement","src":"6339:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:20"},{"body":{"nodeType":"YulBlock","src":"6410:147:20","statements":[{"nodeType":"YulAssignment","src":"6420:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:20"},"nodeType":"YulFunctionCall","src":"6425:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:20"}]},{"nodeType":"YulAssignment","src":"6454:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:20"},"nodeType":"YulFunctionCall","src":"6459:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:20"}]},{"nodeType":"YulAssignment","src":"6488:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:20"},"nodeType":"YulFunctionCall","src":"6495:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:20"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:20"},"nodeType":"YulFunctionCall","src":"6530:18:20"},"nodeType":"YulExpressionStatement","src":"6530:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:20"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:20"},"nodeType":"YulFunctionCall","src":"6517:10:20"},"nodeType":"YulIf","src":"6514:36:20"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:20","type":""}],"src":"6366:191:20"},{"body":{"nodeType":"YulBlock","src":"6669:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:20"},"nodeType":"YulFunctionCall","src":"6687:14:20"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:20","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:20"},"nodeType":"YulFunctionCall","src":"6680:58:20"},"nodeType":"YulExpressionStatement","src":"6680:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:20"},"nodeType":"YulFunctionCall","src":"6755:15:20"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:20","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:20"},"nodeType":"YulFunctionCall","src":"6748:32:20"},"nodeType":"YulExpressionStatement","src":"6748:32:20"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:20","type":""}],"src":"6563:224:20"},{"body":{"nodeType":"YulBlock","src":"6939:220:20","statements":[{"nodeType":"YulAssignment","src":"6949:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:20"},"nodeType":"YulFunctionCall","src":"6956:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:20"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:20"},"nodeType":"YulFunctionCall","src":"7032:93:20"},"nodeType":"YulExpressionStatement","src":"7032:93:20"},{"nodeType":"YulAssignment","src":"7134:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:20"},"nodeType":"YulFunctionCall","src":"7141:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:20"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:20","type":""}],"src":"6793:366:20"},{"body":{"nodeType":"YulBlock","src":"7336:248:20","statements":[{"nodeType":"YulAssignment","src":"7346:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:20"},"nodeType":"YulFunctionCall","src":"7354:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:20"},"nodeType":"YulFunctionCall","src":"7389:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:20"},"nodeType":"YulFunctionCall","src":"7408:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:20"},"nodeType":"YulFunctionCall","src":"7382:47:20"},"nodeType":"YulExpressionStatement","src":"7382:47:20"},{"nodeType":"YulAssignment","src":"7438:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:20"},"nodeType":"YulFunctionCall","src":"7446:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:20","type":""}],"src":"7165:419:20"},{"body":{"nodeType":"YulBlock","src":"7696:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:20"},"nodeType":"YulFunctionCall","src":"7714:14:20"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:20","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:20"},"nodeType":"YulFunctionCall","src":"7707:58:20"},"nodeType":"YulExpressionStatement","src":"7707:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:20"},"nodeType":"YulFunctionCall","src":"7782:15:20"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:20","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:20"},"nodeType":"YulFunctionCall","src":"7775:31:20"},"nodeType":"YulExpressionStatement","src":"7775:31:20"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:20","type":""}],"src":"7590:223:20"},{"body":{"nodeType":"YulBlock","src":"7965:220:20","statements":[{"nodeType":"YulAssignment","src":"7975:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:20","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:20"},"nodeType":"YulFunctionCall","src":"7982:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:20"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:20"},"nodeType":"YulFunctionCall","src":"8058:93:20"},"nodeType":"YulExpressionStatement","src":"8058:93:20"},{"nodeType":"YulAssignment","src":"8160:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:20"},"nodeType":"YulFunctionCall","src":"8167:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:20"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:20","type":""}],"src":"7819:366:20"},{"body":{"nodeType":"YulBlock","src":"8362:248:20","statements":[{"nodeType":"YulAssignment","src":"8372:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:20"},"nodeType":"YulFunctionCall","src":"8380:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:20"},"nodeType":"YulFunctionCall","src":"8415:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:20"},"nodeType":"YulFunctionCall","src":"8434:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:20"},"nodeType":"YulFunctionCall","src":"8408:47:20"},"nodeType":"YulExpressionStatement","src":"8408:47:20"},{"nodeType":"YulAssignment","src":"8464:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:20"},"nodeType":"YulFunctionCall","src":"8472:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:20","type":""}],"src":"8191:419:20"},{"body":{"nodeType":"YulBlock","src":"8722:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:20"},"nodeType":"YulFunctionCall","src":"8740:14:20"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:20","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:20"},"nodeType":"YulFunctionCall","src":"8733:58:20"},"nodeType":"YulExpressionStatement","src":"8733:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:20"},"nodeType":"YulFunctionCall","src":"8808:15:20"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:20","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:20"},"nodeType":"YulFunctionCall","src":"8801:29:20"},"nodeType":"YulExpressionStatement","src":"8801:29:20"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:20","type":""}],"src":"8616:221:20"},{"body":{"nodeType":"YulBlock","src":"8989:220:20","statements":[{"nodeType":"YulAssignment","src":"8999:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:20","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:20"},"nodeType":"YulFunctionCall","src":"9006:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:20"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:20"},"nodeType":"YulFunctionCall","src":"9082:93:20"},"nodeType":"YulExpressionStatement","src":"9082:93:20"},{"nodeType":"YulAssignment","src":"9184:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:20"},"nodeType":"YulFunctionCall","src":"9191:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:20"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:20","type":""}],"src":"8843:366:20"},{"body":{"nodeType":"YulBlock","src":"9386:248:20","statements":[{"nodeType":"YulAssignment","src":"9396:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:20"},"nodeType":"YulFunctionCall","src":"9404:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:20"},"nodeType":"YulFunctionCall","src":"9439:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:20"},"nodeType":"YulFunctionCall","src":"9458:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:20"},"nodeType":"YulFunctionCall","src":"9432:47:20"},"nodeType":"YulExpressionStatement","src":"9432:47:20"},{"nodeType":"YulAssignment","src":"9488:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:20"},"nodeType":"YulFunctionCall","src":"9496:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:20","type":""}],"src":"9215:419:20"},{"body":{"nodeType":"YulBlock","src":"9746:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:20"},"nodeType":"YulFunctionCall","src":"9764:14:20"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:20","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:20"},"nodeType":"YulFunctionCall","src":"9757:55:20"},"nodeType":"YulExpressionStatement","src":"9757:55:20"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:20","type":""}],"src":"9640:179:20"},{"body":{"nodeType":"YulBlock","src":"9971:220:20","statements":[{"nodeType":"YulAssignment","src":"9981:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:20"},"nodeType":"YulFunctionCall","src":"9988:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:20"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:20"},"nodeType":"YulFunctionCall","src":"10064:93:20"},"nodeType":"YulExpressionStatement","src":"10064:93:20"},{"nodeType":"YulAssignment","src":"10166:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:20"},"nodeType":"YulFunctionCall","src":"10173:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:20"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:20","type":""}],"src":"9825:366:20"},{"body":{"nodeType":"YulBlock","src":"10368:248:20","statements":[{"nodeType":"YulAssignment","src":"10378:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:20"},"nodeType":"YulFunctionCall","src":"10386:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:20"},"nodeType":"YulFunctionCall","src":"10421:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:20"},"nodeType":"YulFunctionCall","src":"10440:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:20"},"nodeType":"YulFunctionCall","src":"10414:47:20"},"nodeType":"YulExpressionStatement","src":"10414:47:20"},{"nodeType":"YulAssignment","src":"10470:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:20"},"nodeType":"YulFunctionCall","src":"10478:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:20","type":""}],"src":"10197:419:20"},{"body":{"nodeType":"YulBlock","src":"10728:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:20"},"nodeType":"YulFunctionCall","src":"10746:14:20"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:20","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:20"},"nodeType":"YulFunctionCall","src":"10739:58:20"},"nodeType":"YulExpressionStatement","src":"10739:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:20"},"nodeType":"YulFunctionCall","src":"10814:15:20"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:20","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:20"},"nodeType":"YulFunctionCall","src":"10807:32:20"},"nodeType":"YulExpressionStatement","src":"10807:32:20"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:20","type":""}],"src":"10622:224:20"},{"body":{"nodeType":"YulBlock","src":"10998:220:20","statements":[{"nodeType":"YulAssignment","src":"11008:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:20"},"nodeType":"YulFunctionCall","src":"11015:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:20"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:20"},"nodeType":"YulFunctionCall","src":"11091:93:20"},"nodeType":"YulExpressionStatement","src":"11091:93:20"},{"nodeType":"YulAssignment","src":"11193:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:20"},"nodeType":"YulFunctionCall","src":"11200:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:20"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:20","type":""}],"src":"10852:366:20"},{"body":{"nodeType":"YulBlock","src":"11395:248:20","statements":[{"nodeType":"YulAssignment","src":"11405:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:20"},"nodeType":"YulFunctionCall","src":"11413:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:20"},"nodeType":"YulFunctionCall","src":"11448:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:20"},"nodeType":"YulFunctionCall","src":"11467:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:20"},"nodeType":"YulFunctionCall","src":"11441:47:20"},"nodeType":"YulExpressionStatement","src":"11441:47:20"},{"nodeType":"YulAssignment","src":"11497:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:20"},"nodeType":"YulFunctionCall","src":"11505:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:20","type":""}],"src":"11224:419:20"},{"body":{"nodeType":"YulBlock","src":"11755:116:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:20"},"nodeType":"YulFunctionCall","src":"11773:14:20"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:20","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:20"},"nodeType":"YulFunctionCall","src":"11766:58:20"},"nodeType":"YulExpressionStatement","src":"11766:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:20"},"nodeType":"YulFunctionCall","src":"11841:15:20"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:20","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:20"},"nodeType":"YulFunctionCall","src":"11834:30:20"},"nodeType":"YulExpressionStatement","src":"11834:30:20"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:20","type":""}],"src":"11649:222:20"},{"body":{"nodeType":"YulBlock","src":"12023:220:20","statements":[{"nodeType":"YulAssignment","src":"12033:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:20","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:20"},"nodeType":"YulFunctionCall","src":"12040:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:20"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:20"},"nodeType":"YulFunctionCall","src":"12116:93:20"},"nodeType":"YulExpressionStatement","src":"12116:93:20"},{"nodeType":"YulAssignment","src":"12218:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:20"},"nodeType":"YulFunctionCall","src":"12225:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:20"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:20","type":""}],"src":"11877:366:20"},{"body":{"nodeType":"YulBlock","src":"12420:248:20","statements":[{"nodeType":"YulAssignment","src":"12430:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:20"},"nodeType":"YulFunctionCall","src":"12438:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:20"},"nodeType":"YulFunctionCall","src":"12473:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:20"},"nodeType":"YulFunctionCall","src":"12492:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:20"},"nodeType":"YulFunctionCall","src":"12466:47:20"},"nodeType":"YulExpressionStatement","src":"12466:47:20"},{"nodeType":"YulAssignment","src":"12522:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:20"},"nodeType":"YulFunctionCall","src":"12530:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:20","type":""}],"src":"12249:419:20"},{"body":{"nodeType":"YulBlock","src":"12780:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:20"},"nodeType":"YulFunctionCall","src":"12798:14:20"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:20","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:20"},"nodeType":"YulFunctionCall","src":"12791:58:20"},"nodeType":"YulExpressionStatement","src":"12791:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:20"},"nodeType":"YulFunctionCall","src":"12866:15:20"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:20","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:20"},"nodeType":"YulFunctionCall","src":"12859:33:20"},"nodeType":"YulExpressionStatement","src":"12859:33:20"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:20","type":""}],"src":"12674:225:20"},{"body":{"nodeType":"YulBlock","src":"13051:220:20","statements":[{"nodeType":"YulAssignment","src":"13061:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:20"},"nodeType":"YulFunctionCall","src":"13068:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:20"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:20"},"nodeType":"YulFunctionCall","src":"13144:93:20"},"nodeType":"YulExpressionStatement","src":"13144:93:20"},{"nodeType":"YulAssignment","src":"13246:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:20"},"nodeType":"YulFunctionCall","src":"13253:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:20"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:20","type":""}],"src":"12905:366:20"},{"body":{"nodeType":"YulBlock","src":"13448:248:20","statements":[{"nodeType":"YulAssignment","src":"13458:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:20"},"nodeType":"YulFunctionCall","src":"13466:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:20"},"nodeType":"YulFunctionCall","src":"13501:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:20"},"nodeType":"YulFunctionCall","src":"13520:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:20"},"nodeType":"YulFunctionCall","src":"13494:47:20"},"nodeType":"YulExpressionStatement","src":"13494:47:20"},{"nodeType":"YulAssignment","src":"13550:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:20"},"nodeType":"YulFunctionCall","src":"13558:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:20","type":""}],"src":"13277:419:20"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b10565b60405180910390f35b6100e660048036038101906100e19190610bcb565b610308565b6040516100f39190610c26565b60405180910390f35b61010461032b565b6040516101119190610c50565b60405180910390f35b610134600480360381019061012f9190610c6b565b610335565b6040516101419190610c26565b60405180910390f35b610152610364565b60405161015f9190610cda565b60405180910390f35b610182600480360381019061017d9190610bcb565b61036d565b60405161018f9190610c26565b60405180910390f35b6101b260048036038101906101ad9190610cf5565b6103a4565b6040516101bf9190610c50565b60405180910390f35b6101d06103ed565b6040516101dd9190610b10565b60405180910390f35b61020060048036038101906101fb9190610bcb565b61047f565b60405161020d9190610c26565b60405180910390f35b610230600480360381019061022b9190610bcb565b6104f6565b60405161023d9190610c26565b60405180910390f35b610260600480360381019061025b9190610d22565b610519565b60405161026d9190610c50565b60405180910390f35b60606036805461028590610d91565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d91565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a0565b90506103208185856105a8565b600191505092915050565b6000603554905090565b6000806103406105a0565b905061034d858285610771565b6103588585856107fd565b60019150509392505050565b60006012905090565b6000806103786105a0565b905061039981858561038a8589610519565b6103949190610df1565b6105a8565b600191505092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060603780546103fc90610d91565b80601f016020809104026020016040519081016040528092919081815260200182805461042890610d91565b80156104755780601f1061044a57610100808354040283529160200191610475565b820191906000526020600020905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b60008061048a6105a0565b905060006104988286610519565b9050838110156104dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d490610e97565b60405180910390fd5b6104ea82868684036105a8565b60019250505092915050565b6000806105016105a0565b905061050e8185856107fd565b600191505092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f29565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d90610fbb565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107649190610c50565b60405180910390a3505050565b600061077d8484610519565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f757818110156107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090611027565b60405180910390fd5b6107f684848484036105a8565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610863906110b9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d29061114b565b60405180910390fd5b6108e6838383610a76565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610964906111dd565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610c50565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aba578082015181840152602081019050610a9f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ae282610a80565b610aec8185610a8b565b9350610afc818560208601610a9c565b610b0581610ac6565b840191505092915050565b60006020820190508181036000830152610b2a8184610ad7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6282610b37565b9050919050565b610b7281610b57565b8114610b7d57600080fd5b50565b600081359050610b8f81610b69565b92915050565b6000819050919050565b610ba881610b95565b8114610bb357600080fd5b50565b600081359050610bc581610b9f565b92915050565b60008060408385031215610be257610be1610b32565b5b6000610bf085828601610b80565b9250506020610c0185828601610bb6565b9150509250929050565b60008115159050919050565b610c2081610c0b565b82525050565b6000602082019050610c3b6000830184610c17565b92915050565b610c4a81610b95565b82525050565b6000602082019050610c656000830184610c41565b92915050565b600080600060608486031215610c8457610c83610b32565b5b6000610c9286828701610b80565b9350506020610ca386828701610b80565b9250506040610cb486828701610bb6565b9150509250925092565b600060ff82169050919050565b610cd481610cbe565b82525050565b6000602082019050610cef6000830184610ccb565b92915050565b600060208284031215610d0b57610d0a610b32565b5b6000610d1984828501610b80565b91505092915050565b60008060408385031215610d3957610d38610b32565b5b6000610d4785828601610b80565b9250506020610d5885828601610b80565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da957607f821691505b602082108103610dbc57610dbb610d62565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dfc82610b95565b9150610e0783610b95565b9250828201905080821115610e1f57610e1e610dc2565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e81602583610a8b565b9150610e8c82610e25565b604082019050919050565b60006020820190508181036000830152610eb081610e74565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f13602483610a8b565b9150610f1e82610eb7565b604082019050919050565b60006020820190508181036000830152610f4281610f06565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa5602283610a8b565b9150610fb082610f49565b604082019050919050565b60006020820190508181036000830152610fd481610f98565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611011601d83610a8b565b915061101c82610fdb565b602082019050919050565b6000602082019050818103600083015261104081611004565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110a3602583610a8b565b91506110ae82611047565b604082019050919050565b600060208201905081810360008301526110d281611096565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611135602383610a8b565b9150611140826110d9565b604082019050919050565b6000602082019050818103600083015261116481611128565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c7602683610a8b565b91506111d28261116b565b604082019050919050565b600060208201905081810360008301526111f6816111ba565b905091905056fea2646970667358221220ab57fbbae9538a596101c087012d2d20dad53a015d559b96a14a799d3b6ee56f64736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF5 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x519 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3FC SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x428 SWAP1 PUSH2 0xD91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x48A PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x498 DUP3 DUP7 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EA DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x501 PUSH2 0x5A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x50E DUP2 DUP6 DUP6 PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67D SWAP1 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77D DUP5 DUP5 PUSH2 0x519 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E0 SWAP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x863 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E6 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x964 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE2 DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAEC DUP2 DUP6 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP PUSH2 0xAFC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xAC6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB2A DUP2 DUP5 PUSH2 0xAD7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 DUP3 PUSH2 0xB37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB72 DUP2 PUSH2 0xB57 JUMP JUMPDEST DUP2 EQ PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8F DUP2 PUSH2 0xB69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA8 DUP2 PUSH2 0xB95 JUMP JUMPDEST DUP2 EQ PUSH2 0xBB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC5 DUP2 PUSH2 0xB9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF0 DUP6 DUP3 DUP7 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC01 DUP6 DUP3 DUP7 ADD PUSH2 0xBB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC20 DUP2 PUSH2 0xC0B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC3B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4A DUP2 PUSH2 0xB95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC65 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC84 JUMPI PUSH2 0xC83 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC92 DUP7 DUP3 DUP8 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA3 DUP7 DUP3 DUP8 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB4 DUP7 DUP3 DUP8 ADD PUSH2 0xBB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD4 DUP2 PUSH2 0xCBE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0B JUMPI PUSH2 0xD0A PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD19 DUP5 DUP3 DUP6 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD39 JUMPI PUSH2 0xD38 PUSH2 0xB32 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD47 DUP6 DUP3 DUP7 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD58 DUP6 DUP3 DUP7 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDBC JUMPI PUSH2 0xDBB PUSH2 0xD62 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDFC DUP3 PUSH2 0xB95 JUMP JUMPDEST SWAP2 POP PUSH2 0xE07 DUP4 PUSH2 0xB95 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1F JUMPI PUSH2 0xE1E PUSH2 0xDC2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE81 PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xE8C DUP3 PUSH2 0xE25 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB0 DUP2 PUSH2 0xE74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF13 PUSH1 0x24 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xF1E DUP3 PUSH2 0xEB7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF42 DUP2 PUSH2 0xF06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA5 PUSH1 0x22 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xFB0 DUP3 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD4 DUP2 PUSH2 0xF98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 PUSH1 0x1D DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x101C DUP3 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1040 DUP2 PUSH2 0x1004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A3 PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x10AE DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10D2 DUP2 PUSH2 0x1096 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1135 PUSH1 0x23 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1140 DUP3 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1164 DUP2 PUSH2 0x1128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C7 PUSH1 0x26 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x11D2 DUP3 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F6 DUP2 PUSH2 0x11BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB JUMPI 0xFB 0xBA 0xE9 MSTORE8 DUP11 MSIZE PUSH2 0x1C0 DUP8 ADD 0x2D 0x2D KECCAK256 0xDA 0xD5 GASPRICE ADD 0x5D SSTORE SWAP12 SWAP7 LOG1 0x4A PUSH26 0x9D3B6EE56F64736F6C6343000812003300000000000000000000 ","sourceMap":"1632:11861:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4802:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3613:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5561:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3462:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6212:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3777:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2727:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6933:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4098:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4345:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2516:98;2570:13;2602:5;2595:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:98;:::o;4802:197::-;4885:4;4901:13;4917:12;:10;:12::i;:::-;4901:28;;4939:32;4948:5;4955:7;4964:6;4939:8;:32::i;:::-;4988:4;4981:11;;;4802:197;;;;:::o;3613:106::-;3674:7;3700:12;;3693:19;;3613:106;:::o;5561:256::-;5658:4;5674:15;5692:12;:10;:12::i;:::-;5674:30;;5714:38;5730:4;5736:7;5745:6;5714:15;:38::i;:::-;5762:27;5772:4;5778:2;5782:6;5762:9;:27::i;:::-;5806:4;5799:11;;;5561:256;;;;;:::o;3462:91::-;3520:5;3544:2;3537:9;;3462:91;:::o;6212:234::-;6300:4;6316:13;6332:12;:10;:12::i;:::-;6316:28;;6354:64;6363:5;6370:7;6407:10;6379:25;6389:5;6396:7;6379:9;:25::i;:::-;:38;;;;:::i;:::-;6354:8;:64::i;:::-;6435:4;6428:11;;;6212:234;;;;:::o;3777:125::-;3851:7;3877:9;:18;3887:7;3877:18;;;;;;;;;;;;;;;;3870:25;;3777:125;;;:::o;2727:102::-;2783:13;2815:7;2808:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2727:102;:::o;6933:427::-;7026:4;7042:13;7058:12;:10;:12::i;:::-;7042:28;;7080:24;7107:25;7117:5;7124:7;7107:9;:25::i;:::-;7080:52;;7170:15;7150:16;:35;;7142:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7261:60;7270:5;7277:7;7305:15;7286:16;:34;7261:8;:60::i;:::-;7349:4;7342:11;;;;6933:427;;;;:::o;4098:189::-;4177:4;4193:13;4209:12;:10;:12::i;:::-;4193:28;;4231;4241:5;4248:2;4252:6;4231:9;:28::i;:::-;4276:4;4269:11;;;4098:189;;;;:::o;4345:149::-;4434:7;4460:11;:18;4472:5;4460:18;;;;;;;;;;;;;;;:27;4479:7;4460:27;;;;;;;;;;;;;;;;4453:34;;4345:149;;;;:::o;886:96:12:-;939:7;965:10;958:17;;886:96;:::o;10815:340:4:-;10933:1;10916:19;;:5;:19;;;10908:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11013:1;10994:21;;:7;:21;;;10986:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11095:6;11065:11;:18;11077:5;11065:18;;;;;;;;;;;;;;;:27;11084:7;11065:27;;;;;;;;;;;;;;;:36;;;;11132:7;11116:32;;11125:5;11116:32;;;11141:6;11116:32;;;;;;:::i;:::-;;;;;;;;10815:340;;;:::o;11436:411::-;11536:24;11563:25;11573:5;11580:7;11563:9;:25::i;:::-;11536:52;;11622:17;11602:16;:37;11598:243;;11683:6;11663:16;:26;;11655:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11765:51;11774:5;11781:7;11809:6;11790:16;:25;11765:8;:51::i;:::-;11598:243;11526:321;11436:411;;;:::o;7814:788::-;7926:1;7910:18;;:4;:18;;;7902:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8002:1;7988:16;;:2;:16;;;7980:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8055:38;8076:4;8082:2;8086:6;8055:20;:38::i;:::-;8104:19;8126:9;:15;8136:4;8126:15;;;;;;;;;;;;;;;;8104:37;;8174:6;8159:11;:21;;8151:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8289:6;8275:11;:20;8257:9;:15;8267:4;8257:15;;;;;;;;;;;;;;;:38;;;;8489:6;8472:9;:13;8482:2;8472:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8536:2;8521:26;;8530:4;8521:26;;;8540:6;8521:26;;;;;;:::i;:::-;;;;;;;;8558:37;8578:4;8584:2;8588:6;8558:19;:37::i;:::-;7892:710;7814:788;;;:::o;12431:91::-;;;;:::o;13110:90::-;;;;:::o;7:99:20:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":164,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":167,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1846,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":474,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":480,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":482,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":484,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":486,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1066,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol":{"ERC20BurnableUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0x28846e6988bf5a88b5d6ebb5871dc23141cbf5da8b29fc217a7435b0d2c46519\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a42556ee056b322c4dda747f2f7a3d0300d0c1a9ea0a2378959275793b754f3\",\"dweb:/ipfs/QmU9akpnUxNpheCowGotVhM9waNjJv7ZKqcffMkDSxh3ia\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":164,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":167,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1846,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":474,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":480,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":482,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":484,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":486,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1066,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":1209,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:ERC20BurnableUpgradeable","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ERC20PermitUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:storage-size\":\"51\",\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":\"ERC20PermitUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x3d159b9049d4ef465c1fb41f7ff7620f18f52bf6f8f3018bae4ed95c2df537d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f7cfa624d878eec3c97e30dac64c6c00a79c65aa2799cebbf683e74488cd27\",\"dweb:/ipfs/QmdtMH3xSGXNqvBcndsxWCUfmjta6kebnUYwKasJZucTfP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x7077d7f3369b21f286840c0d69b09a8a6d3d6e522fff67bfc240fd0a6cdf178c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f59e7a19530bd6ee236285f9a87c930d27b73464f6b7398e29a6f4cfc2670ac\",\"dweb:/ipfs/QmVfN4gHvJNac7KiuhLhtgtbdDo5a6Mw5hMcwJkzYugq5R\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":164,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":167,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1846,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":474,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":480,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":482,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":484,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":486,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1066,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":2535,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_hashedName","offset":0,"slot":"101","type":"t_bytes32"},{"astId":2538,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_hashedVersion","offset":0,"slot":"102","type":"t_bytes32"},{"astId":2540,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_name","offset":0,"slot":"103","type":"t_string_storage"},{"astId":2542,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_version","offset":0,"slot":"104","type":"t_string_storage"},{"astId":2800,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"105","type":"t_array(t_uint256)48_storage"},{"astId":1237,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_nonces","offset":0,"slot":"153","type":"t_mapping(t_address,t_struct(Counter)1853_storage)"},{"astId":1245,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"154","type":"t_bytes32"},{"astId":1401,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"__gap","offset":0,"slot":"155","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)48_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[48]","numberOfBytes":"1536"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)1853_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CountersUpgradeable.Counter)","numberOfBytes":"32","value":"t_struct(Counter)1853_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)1853_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":1852,"contract":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:ERC20PermitUpgradeable","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"IERC20MetadataUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"IERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":\"IERC20PermitUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1e81d06f794b6904b45d3f960374dfb635fb61dd133ccef6cfd6da7056794d964736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xE8 SAR MOD 0xF7 SWAP5 0xB6 SWAP1 0x4B GASLIMIT 0xD3 0xF9 PUSH1 0x37 0x4D 0xFB PUSH4 0x5FB61DD1 CALLER 0xCC 0xEF PUSH13 0xFD6DA7056794D964736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1e81d06f794b6904b45d3f960374dfb635fb61dd133ccef6cfd6da7056794d964736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xE8 SAR MOD 0xF7 SWAP5 0xB6 SWAP1 0x4B GASLIMIT 0xD3 0xF9 PUSH1 0x37 0x4D 0xFB PUSH4 0x5FB61DD1 CALLER 0xCC 0xEF PUSH13 0xFD6DA7056794D964736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"194:9180:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":164,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":167,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1846,"contract":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol":{"CountersUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202d8cc65c85ec9eb5b7738072be37e7b410ee0aacb12e38447bb24553c1dafdd064736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D DUP13 0xC6 0x5C DUP6 0xEC SWAP15 0xB5 0xB7 PUSH20 0x8072BE37E7B410EE0AACB12E38447BB24553C1DA REVERT 0xD0 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"424:982:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202d8cc65c85ec9eb5b7738072be37e7b410ee0aacb12e38447bb24553c1dafdd064736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D DUP13 0xC6 0x5C DUP6 0xEC SWAP15 0xB5 0xB7 PUSH20 0x8072BE37E7B410EE0AACB12E38447BB24553C1DA REVERT 0xD0 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"424:982:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":\"CountersUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol":{"StringsUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d4cdaec1cd8b296288ed9fff9d06a8a78e401f1f43ea8ced926e8e052d0c5aae64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xCD 0xAE 0xC1 0xCD DUP12 0x29 PUSH3 0x88ED9F SELFDESTRUCT SWAP14 MOD 0xA8 0xA7 DUP15 BLOCKHASH 0x1F 0x1F NUMBER 0xEA DUP13 0xED SWAP3 PUSH15 0x8E052D0C5AAE64736F6C6343000812 STOP CALLER ","sourceMap":"242:2603:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d4cdaec1cd8b296288ed9fff9d06a8a78e401f1f43ea8ced926e8e052d0c5aae64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xCD 0xAE 0xC1 0xCD DUP12 0x29 PUSH3 0x88ED9F SELFDESTRUCT SWAP14 MOD 0xA8 0xA7 DUP15 BLOCKHASH 0x1F 0x1F NUMBER 0xEA DUP13 0xED SWAP3 PUSH15 0x8E052D0C5AAE64736F6C6343000812 STOP CALLER ","sourceMap":"242:2603:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol":{"ECDSAUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f316fc15a7d376b9767fa6fc8da52cfdf45389df6f156d06a438915ea9e5d4464736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F BALANCE PUSH16 0xC15A7D376B9767FA6FC8DA52CFDF4538 SWAP14 0xF6 CALL JUMP 0xD0 PUSH11 0x438915EA9E5D4464736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"380:8783:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f316fc15a7d376b9767fa6fc8da52cfdf45389df6f156d06a438915ea9e5d4464736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F BALANCE PUSH16 0xC15A7D376B9767FA6FC8DA52CFDF4538 SWAP14 0xF6 CALL JUMP 0xD0 PUSH11 0x438915EA9E5D4464736F6C PUSH4 0x43000812 STOP CALLER ","sourceMap":"380:8783:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":\"ECDSAUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:storage-size\":\"52\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"_hashedName\":{\"custom:oz-renamed-from\":\"_HASHED_NAME\"},\"_hashedVersion\":{\"custom:oz-renamed-from\":\"_HASHED_VERSION\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x7077d7f3369b21f286840c0d69b09a8a6d3d6e522fff67bfc240fd0a6cdf178c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f59e7a19530bd6ee236285f9a87c930d27b73464f6b7398e29a6f4cfc2670ac\",\"dweb:/ipfs/QmVfN4gHvJNac7KiuhLhtgtbdDo5a6Mw5hMcwJkzYugq5R\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":164,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":167,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":2535,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_hashedName","offset":0,"slot":"1","type":"t_bytes32"},{"astId":2538,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_hashedVersion","offset":0,"slot":"2","type":"t_bytes32"},{"astId":2540,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":2542,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"_version","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2800,"contract":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:EIP712Upgradeable","label":"__gap","offset":0,"slot":"5","type":"t_array(t_uint256)48_storage"}],"types":{"t_array(t_uint256)48_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[48]","numberOfBytes":"1536"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}},"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol":{"MathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d88061e6c298d7c24df5bbaa3b0d31923f32f60d84caec5b309ee5bac27f20cc64736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 DUP1 PUSH2 0xE6C2 SWAP9 0xD7 0xC2 0x4D CREATE2 0xBB 0xAA EXTCODESIZE 0xD BALANCE SWAP3 EXTCODEHASH ORIGIN 0xF6 0xD DUP5 0xCA 0xEC JUMPDEST ADDRESS SWAP15 0xE5 0xBA 0xC2 PUSH32 0x20CC64736F6C6343000812003300000000000000000000000000000000000000 ","sourceMap":"202:12593:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d88061e6c298d7c24df5bbaa3b0d31923f32f60d84caec5b309ee5bac27f20cc64736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 DUP1 PUSH2 0xE6C2 SWAP9 0xD7 0xC2 0x4D CREATE2 0xBB 0xAA EXTCODESIZE 0xD BALANCE SWAP3 EXTCODEHASH ORIGIN 0xF6 0xD DUP5 0xCA 0xEC JUMPDEST ADDRESS SWAP15 0xE5 0xBA 0xC2 PUSH32 0x20CC64736F6C6343000812003300000000000000000000000000000000000000 ","sourceMap":"202:12593:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol":{"SignedMathUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf056c45faf61b9e86e8333ea519f5b9f1a613ecb11d80d0896e63677b204a6064736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SDIV PUSH13 0x45FAF61B9E86E8333EA519F5B9 CALL 0xA6 SGT 0xEC 0xB1 SAR DUP1 0xD0 DUP10 PUSH15 0x63677B204A6064736F6C6343000812 STOP CALLER ","sourceMap":"215:1058:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf056c45faf61b9e86e8333ea519f5b9f1a613ecb11d80d0896e63677b204a6064736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF SDIV PUSH13 0x45FAF61B9E86E8333EA519F5B9 CALL 0xA6 SGT 0xEC 0xB1 SAR DUP1 0xD0 DUP10 PUSH15 0x63677B204A6064736F6C6343000812 STOP CALLER ","sourceMap":"215:1058:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/TestPoL.sol":{"TestPoL":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"dests","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"multisend","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"transferWithPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3800":{"entryPoint":null,"id":3800,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_307":{"entryPoint":40,"id":307,"parameterSlots":0,"returnSlots":0},"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack":{"entryPoint":334,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":373,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":437,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":238,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":407,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a":{"entryPoint":255,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1638:20","statements":[{"body":{"nodeType":"YulBlock","src":"103:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"120:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"125:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"113:6:20"},"nodeType":"YulFunctionCall","src":"113:19:20"},"nodeType":"YulExpressionStatement","src":"113:19:20"},{"nodeType":"YulAssignment","src":"141:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"160:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"165:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"156:3:20"},"nodeType":"YulFunctionCall","src":"156:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"141:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"75:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"80:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"91:11:20","type":""}],"src":"7:169:20"},{"body":{"nodeType":"YulBlock","src":"288:120:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"310:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"318:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"306:3:20"},"nodeType":"YulFunctionCall","src":"306:14:20"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469","kind":"string","nodeType":"YulLiteral","src":"322:34:20","type":"","value":"Initializable: contract is initi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"299:6:20"},"nodeType":"YulFunctionCall","src":"299:58:20"},"nodeType":"YulExpressionStatement","src":"299:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"378:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"386:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"374:3:20"},"nodeType":"YulFunctionCall","src":"374:15:20"},{"hexValue":"616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"391:9:20","type":"","value":"alizing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"367:6:20"},"nodeType":"YulFunctionCall","src":"367:34:20"},"nodeType":"YulExpressionStatement","src":"367:34:20"}]},"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"280:6:20","type":""}],"src":"182:226:20"},{"body":{"nodeType":"YulBlock","src":"560:220:20","statements":[{"nodeType":"YulAssignment","src":"570:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"636:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"641:2:20","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"577:58:20"},"nodeType":"YulFunctionCall","src":"577:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"570:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"742:3:20"}],"functionName":{"name":"store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","nodeType":"YulIdentifier","src":"653:88:20"},"nodeType":"YulFunctionCall","src":"653:93:20"},"nodeType":"YulExpressionStatement","src":"653:93:20"},{"nodeType":"YulAssignment","src":"755:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"766:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"771:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"762:3:20"},"nodeType":"YulFunctionCall","src":"762:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"755:3:20"}]}]},"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"548:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"556:3:20","type":""}],"src":"414:366:20"},{"body":{"nodeType":"YulBlock","src":"957:248:20","statements":[{"nodeType":"YulAssignment","src":"967:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"979:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"990:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"975:3:20"},"nodeType":"YulFunctionCall","src":"975:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"967:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1025:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1010:3:20"},"nodeType":"YulFunctionCall","src":"1010:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1033:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1039:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1029:3:20"},"nodeType":"YulFunctionCall","src":"1029:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1003:6:20"},"nodeType":"YulFunctionCall","src":"1003:47:20"},"nodeType":"YulExpressionStatement","src":"1003:47:20"},{"nodeType":"YulAssignment","src":"1059:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1193:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1067:124:20"},"nodeType":"YulFunctionCall","src":"1067:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1059:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"937:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"952:4:20","type":""}],"src":"786:419:20"},{"body":{"nodeType":"YulBlock","src":"1254:43:20","statements":[{"nodeType":"YulAssignment","src":"1264:27:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1279:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1286:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1275:3:20"},"nodeType":"YulFunctionCall","src":"1275:16:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1264:7:20"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1236:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1246:7:20","type":""}],"src":"1211:86:20"},{"body":{"nodeType":"YulBlock","src":"1364:51:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1381:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1402:5:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"1386:15:20"},"nodeType":"YulFunctionCall","src":"1386:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1374:6:20"},"nodeType":"YulFunctionCall","src":"1374:35:20"},"nodeType":"YulExpressionStatement","src":"1374:35:20"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1352:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1359:3:20","type":""}],"src":"1303:112:20"},{"body":{"nodeType":"YulBlock","src":"1515:120:20","statements":[{"nodeType":"YulAssignment","src":"1525:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1537:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1548:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1533:3:20"},"nodeType":"YulFunctionCall","src":"1533:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1525:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1601:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1625:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1610:3:20"},"nodeType":"YulFunctionCall","src":"1610:17:20"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"1561:39:20"},"nodeType":"YulFunctionCall","src":"1561:67:20"},"nodeType":"YulExpressionStatement","src":"1561:67:20"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1487:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1499:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1510:4:20","type":""}],"src":"1421:214:20"}]},"contents":"{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is initi\")\n\n        mstore(add(memPtr, 32), \"alizing\")\n\n    }\n\n    function abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001d2565b600060019054906101000a900460ff16156200007b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000729062000175565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1614620000ec5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620000e39190620001b5565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200015d602783620000ee565b91506200016a82620000ff565b604082019050919050565b6000602082019050818103600083015262000190816200014e565b9050919050565b600060ff82169050919050565b620001af8162000197565b82525050565b6000602082019050620001cc6000830184620001a4565b92915050565b613c8a80620001e26000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806379cc6790116100f9578063a457c2d711610097578063d505accf11610071578063d505accf146104a0578063dd62ed3e146104bc578063f2fde38b146104ec578063fdd9589414610508576101a9565b8063a457c2d714610410578063a9059cbb14610440578063aad41a4114610470576101a9565b80638456cb59116100d35780638456cb59146103a657806384b0196e146103b05780638da5cb5b146103d457806395d89b41146103f2576101a9565b806379cc6790146103505780637ecebe001461036c5780638129fc1c1461039c576101a9565b8063395093511161016657806342966c681161014057806342966c68146102dc5780635c975abb146102f857806370a0823114610316578063715018a614610346576101a9565b806339509351146102865780633f4ba83a146102b657806340c10f19146102c0576101a9565b806306fdde03146101ae578063095ea7b3146101cc57806318160ddd146101fc57806323b872dd1461021a578063313ce5671461024a5780633644e51514610268575b600080fd5b6101b6610524565b6040516101c391906123a6565b60405180910390f35b6101e660048036038101906101e19190612470565b6105b6565b6040516101f391906124cb565b60405180910390f35b6102046105d9565b60405161021191906124f5565b60405180910390f35b610234600480360381019061022f9190612510565b6105e3565b60405161024191906124cb565b60405180910390f35b610252610612565b60405161025f919061257f565b60405180910390f35b61027061061b565b60405161027d91906125b3565b60405180910390f35b6102a0600480360381019061029b9190612470565b61062a565b6040516102ad91906124cb565b60405180910390f35b6102be610661565b005b6102da60048036038101906102d59190612470565b610673565b005b6102f660048036038101906102f191906125ce565b610681565b005b610300610695565b60405161030d91906124cb565b60405180910390f35b610330600480360381019061032b91906125fb565b6106ac565b60405161033d91906124f5565b60405180910390f35b61034e6106f5565b005b61036a60048036038101906103659190612470565b610709565b005b610386600480360381019061038191906125fb565b610729565b60405161039391906124f5565b60405180910390f35b6103a461077a565b005b6103ae61097a565b005b6103b861098c565b6040516103cb9796959493929190612730565b60405180910390f35b6103dc610a8d565b6040516103e991906127b4565b60405180910390f35b6103fa610ab7565b60405161040791906123a6565b60405180910390f35b61042a60048036038101906104259190612470565b610b49565b60405161043791906124cb565b60405180910390f35b61045a60048036038101906104559190612470565b610bc0565b60405161046791906124cb565b60405180910390f35b61048a600480360381019061048591906129da565b610be3565b60405161049791906124f5565b60405180910390f35b6104ba60048036038101906104b59190612aaa565b610c51565b005b6104d660048036038101906104d19190612b4c565b610d93565b6040516104e391906124f5565b60405180910390f35b610506600480360381019061050191906125fb565b610e1a565b005b610522600480360381019061051d9190612b8c565b610e9d565b005b60606036805461053390612c85565b80601f016020809104026020016040519081016040528092919081815260200182805461055f90612c85565b80156105ac5780601f10610581576101008083540402835291602001916105ac565b820191906000526020600020905b81548152906001019060200180831161058f57829003601f168201915b5050505050905090565b6000806105c1610eda565b90506105ce818585610ee2565b600191505092915050565b6000603554905090565b6000806105ee610eda565b90506105fb8582856110ab565b610606858585611137565b60019150509392505050565b60006012905090565b60006106256113b0565b905090565b600080610635610eda565b90506106568185856106478589610d93565b6106519190612ce5565b610ee2565b600191505092915050565b6106696113bf565b61067161143d565b565b61067d82826114a0565b5050565b61069261068c610eda565b826115f7565b50565b6000609760009054906101000a900460ff16905090565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106fd6113bf565b61070760006117c6565b565b61071b82610715610eda565b836110ab565b61072582826115f7565b5050565b600061077361012f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061188c565b9050919050565b60008060019054906101000a900460ff161590508080156107ab5750600160008054906101000a900460ff1660ff16105b806107d857506107ba3061189a565b1580156107d75750600160008054906101000a900460ff1660ff16145b5b610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080e90612d8b565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610854576001600060016101000a81548160ff0219169083151502179055505b6108c86040518060400160405280600781526020017f54657374506f4c000000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f54500000000000000000000000000000000000000000000000000000000000008152506118bd565b6108d061191a565b6108d861196b565b6108e06119c4565b61091e6040518060400160405280600781526020017f54657374506f4c00000000000000000000000000000000000000000000000000815250611a1d565b80156109775760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161096e9190612df0565b60405180910390a15b50565b6109826113bf565b61098a611aae565b565b6000606080600080600060606000801b60fb541480156109b057506000801b60fc54145b6109ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e690612e57565b60405180910390fd5b6109f7611b11565b6109ff611ba3565b46306000801b600067ffffffffffffffff811115610a2057610a1f6127d4565b5b604051908082528060200260200182016040528015610a4e5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b600060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060378054610ac690612c85565b80601f0160208091040260200160405190810160405280929190818152602001828054610af290612c85565b8015610b3f5780601f10610b1457610100808354040283529160200191610b3f565b820191906000526020600020905b815481529060010190602001808311610b2257829003601f168201915b5050505050905090565b600080610b54610eda565b90506000610b628286610d93565b905083811015610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e90612ee9565b60405180910390fd5b610bb48286868403610ee2565b60019250505092915050565b600080610bcb610eda565b9050610bd8818585611137565b600191505092915050565b600080600090505b8351811015610c4757610c32848281518110610c0a57610c09612f09565b5b6020026020010151848381518110610c2557610c24612f09565b5b6020026020010151610bc0565b50600181610c409190612ce5565b9050610beb565b8091505092915050565b83421115610c94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8b90612f84565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610cc38c611c35565b89604051602001610cd996959493929190612fa4565b6040516020818303038152906040528051906020012090506000610cfc82611c94565b90506000610d0c82878787611cae565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7390613051565b60405180910390fd5b610d878a8a8a610ee2565b50505050505050505050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610e226113bf565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e88906130e3565b60405180910390fd5b610e9a816117c6565b50565b610eb789898789610eae9190612ce5565b87878787610c51565b610ec28988886105e3565b50610ece8933876105e3565b50505050505050505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4890613175565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb790613207565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161109e91906124f5565b60405180910390a3505050565b60006110b78484610d93565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111315781811015611123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111a90613273565b60405180910390fd5b6111308484848403610ee2565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119d90613305565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120c90613397565b60405180910390fd5b611220838383611cd9565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156112a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129e90613429565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161139791906124f5565b60405180910390a36113aa848484611cde565b50505050565b60006113ba611ce3565b905090565b6113c7610eda565b73ffffffffffffffffffffffffffffffffffffffff166113e5610a8d565b73ffffffffffffffffffffffffffffffffffffffff161461143b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143290613495565b60405180910390fd5b565b611445611d47565b6000609760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611489610eda565b60405161149691906127b4565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361150f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150690613501565b60405180910390fd5b61151b60008383611cd9565b806035600082825461152d9190612ce5565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115df91906124f5565b60405180910390a36115f360008383611cde565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165d90613593565b60405180910390fd5b61167282600083611cd9565b6000603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156116f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f090613625565b60405180910390fd5b818103603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603560008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117ad91906124f5565b60405180910390a36117c183600084611cde565b505050565b600060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661190c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611903906136b7565b60405180910390fd5b6119168282611d90565b5050565b600060019054906101000a900460ff16611969576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611960906136b7565b60405180910390fd5b565b600060019054906101000a900460ff166119ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b1906136b7565b60405180910390fd5b6119c2611e03565b565b600060019054906101000a900460ff16611a13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0a906136b7565b60405180910390fd5b611a1b611e6f565b565b600060019054906101000a900460ff16611a6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a63906136b7565b60405180910390fd5b611aab816040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250611ed0565b50565b611ab6611f57565b6001609760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611afa610eda565b604051611b0791906127b4565b60405180910390a1565b606060fd8054611b2090612c85565b80601f0160208091040260200160405190810160405280929190818152602001828054611b4c90612c85565b8015611b995780601f10611b6e57610100808354040283529160200191611b99565b820191906000526020600020905b815481529060010190602001808311611b7c57829003601f168201915b5050505050905090565b606060fe8054611bb290612c85565b80601f0160208091040260200160405190810160405280929190818152602001828054611bde90612c85565b8015611c2b5780601f10611c0057610100808354040283529160200191611c2b565b820191906000526020600020905b815481529060010190602001808311611c0e57829003601f168201915b5050505050905090565b60008061012f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611c838161188c565b9150611c8e81611fa1565b50919050565b6000611ca7611ca16113b0565b83611fb7565b9050919050565b6000806000611cbf87878787611ff8565b91509150611ccc816120da565b8192505050949350505050565b505050565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611d0e612240565b611d166122ab565b4630604051602001611d2c9594939291906136d7565b60405160208183030381529060405280519060200120905090565b611d4f610695565b611d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8590613776565b60405180910390fd5b565b600060019054906101000a900460ff16611ddf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd6906136b7565b60405180910390fd5b8160369081611dee9190613938565b508060379081611dfe9190613938565b505050565b600060019054906101000a900460ff16611e52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e49906136b7565b60405180910390fd5b6000609760006101000a81548160ff021916908315150217905550565b600060019054906101000a900460ff16611ebe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eb5906136b7565b60405180910390fd5b611ece611ec9610eda565b6117c6565b565b600060019054906101000a900460ff16611f1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f16906136b7565b60405180910390fd5b8160fd9081611f2e9190613938565b508060fe9081611f3e9190613938565b506000801b60fb819055506000801b60fc819055505050565b611f5f610695565b15611f9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f9690613a56565b60405180910390fd5b565b6001816000016000828254019250508190555050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156120335760006003915091506120d1565b6000600187878787604051600081526020016040526040516120589493929190613a76565b6020604051602081039080840390855afa15801561207a573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036120c8576000600192509250506120d1565b80600092509250505b94509492505050565b600060048111156120ee576120ed613abb565b5b81600481111561210157612100613abb565b5b031561223d576001600481111561211b5761211a613abb565b5b81600481111561212e5761212d613abb565b5b0361216e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161216590613b36565b60405180910390fd5b6002600481111561218257612181613abb565b5b81600481111561219557612194613abb565b5b036121d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121cc90613ba2565b60405180910390fd5b600360048111156121e9576121e8613abb565b5b8160048111156121fc576121fb613abb565b5b0361223c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161223390613c34565b60405180910390fd5b5b50565b60008061224b611b11565b90506000815111156122675780805190602001209150506122a8565b600060fb5490506000801b81146122825780925050506122a8565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470925050505b90565b6000806122b6611ba3565b90506000815111156122d2578080519060200120915050612313565b600060fc5490506000801b81146122ed578092505050612313565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470925050505b90565b600081519050919050565b600082825260208201905092915050565b60005b83811015612350578082015181840152602081019050612335565b60008484015250505050565b6000601f19601f8301169050919050565b600061237882612316565b6123828185612321565b9350612392818560208601612332565b61239b8161235c565b840191505092915050565b600060208201905081810360008301526123c0818461236d565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612407826123dc565b9050919050565b612417816123fc565b811461242257600080fd5b50565b6000813590506124348161240e565b92915050565b6000819050919050565b61244d8161243a565b811461245857600080fd5b50565b60008135905061246a81612444565b92915050565b60008060408385031215612487576124866123d2565b5b600061249585828601612425565b92505060206124a68582860161245b565b9150509250929050565b60008115159050919050565b6124c5816124b0565b82525050565b60006020820190506124e060008301846124bc565b92915050565b6124ef8161243a565b82525050565b600060208201905061250a60008301846124e6565b92915050565b600080600060608486031215612529576125286123d2565b5b600061253786828701612425565b935050602061254886828701612425565b92505060406125598682870161245b565b9150509250925092565b600060ff82169050919050565b61257981612563565b82525050565b60006020820190506125946000830184612570565b92915050565b6000819050919050565b6125ad8161259a565b82525050565b60006020820190506125c860008301846125a4565b92915050565b6000602082840312156125e4576125e36123d2565b5b60006125f28482850161245b565b91505092915050565b600060208284031215612611576126106123d2565b5b600061261f84828501612425565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61265d81612628565b82525050565b61266c816123fc565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6126a78161243a565b82525050565b60006126b9838361269e565b60208301905092915050565b6000602082019050919050565b60006126dd82612672565b6126e7818561267d565b93506126f28361268e565b8060005b8381101561272357815161270a88826126ad565b9750612715836126c5565b9250506001810190506126f6565b5085935050505092915050565b600060e082019050612745600083018a612654565b8181036020830152612757818961236d565b9050818103604083015261276b818861236d565b905061277a60608301876124e6565b6127876080830186612663565b61279460a08301856125a4565b81810360c08301526127a681846126d2565b905098975050505050505050565b60006020820190506127c96000830184612663565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61280c8261235c565b810181811067ffffffffffffffff8211171561282b5761282a6127d4565b5b80604052505050565b600061283e6123c8565b905061284a8282612803565b919050565b600067ffffffffffffffff82111561286a576128696127d4565b5b602082029050602081019050919050565b600080fd5b600061289361288e8461284f565b612834565b905080838252602082019050602084028301858111156128b6576128b561287b565b5b835b818110156128df57806128cb8882612425565b8452602084019350506020810190506128b8565b5050509392505050565b600082601f8301126128fe576128fd6127cf565b5b813561290e848260208601612880565b91505092915050565b600067ffffffffffffffff821115612932576129316127d4565b5b602082029050602081019050919050565b600061295661295184612917565b612834565b905080838252602082019050602084028301858111156129795761297861287b565b5b835b818110156129a2578061298e888261245b565b84526020840193505060208101905061297b565b5050509392505050565b600082601f8301126129c1576129c06127cf565b5b81356129d1848260208601612943565b91505092915050565b600080604083850312156129f1576129f06123d2565b5b600083013567ffffffffffffffff811115612a0f57612a0e6123d7565b5b612a1b858286016128e9565b925050602083013567ffffffffffffffff811115612a3c57612a3b6123d7565b5b612a48858286016129ac565b9150509250929050565b612a5b81612563565b8114612a6657600080fd5b50565b600081359050612a7881612a52565b92915050565b612a878161259a565b8114612a9257600080fd5b50565b600081359050612aa481612a7e565b92915050565b600080600080600080600060e0888a031215612ac957612ac86123d2565b5b6000612ad78a828b01612425565b9750506020612ae88a828b01612425565b9650506040612af98a828b0161245b565b9550506060612b0a8a828b0161245b565b9450506080612b1b8a828b01612a69565b93505060a0612b2c8a828b01612a95565b92505060c0612b3d8a828b01612a95565b91505092959891949750929550565b60008060408385031215612b6357612b626123d2565b5b6000612b7185828601612425565b9250506020612b8285828601612425565b9150509250929050565b60008060008060008060008060006101208a8c031215612baf57612bae6123d2565b5b6000612bbd8c828d01612425565b9950506020612bce8c828d01612425565b9850506040612bdf8c828d01612425565b9750506060612bf08c828d0161245b565b9650506080612c018c828d0161245b565b95505060a0612c128c828d0161245b565b94505060c0612c238c828d01612a69565b93505060e0612c348c828d01612a95565b925050610100612c468c828d01612a95565b9150509295985092959850929598565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612c9d57607f821691505b602082108103612cb057612caf612c56565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612cf08261243a565b9150612cfb8361243a565b9250828201905080821115612d1357612d12612cb6565b5b92915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612d75602e83612321565b9150612d8082612d19565b604082019050919050565b60006020820190508181036000830152612da481612d68565b9050919050565b6000819050919050565b6000819050919050565b6000612dda612dd5612dd084612dab565b612db5565b612563565b9050919050565b612dea81612dbf565b82525050565b6000602082019050612e056000830184612de1565b92915050565b7f4549503731323a20556e696e697469616c697a65640000000000000000000000600082015250565b6000612e41601583612321565b9150612e4c82612e0b565b602082019050919050565b60006020820190508181036000830152612e7081612e34565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000612ed3602583612321565b9150612ede82612e77565b604082019050919050565b60006020820190508181036000830152612f0281612ec6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b6000612f6e601d83612321565b9150612f7982612f38565b602082019050919050565b60006020820190508181036000830152612f9d81612f61565b9050919050565b600060c082019050612fb960008301896125a4565b612fc66020830188612663565b612fd36040830187612663565b612fe060608301866124e6565b612fed60808301856124e6565b612ffa60a08301846124e6565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b600061303b601e83612321565b915061304682613005565b602082019050919050565b6000602082019050818103600083015261306a8161302e565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006130cd602683612321565b91506130d882613071565b604082019050919050565b600060208201905081810360008301526130fc816130c0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061315f602483612321565b915061316a82613103565b604082019050919050565b6000602082019050818103600083015261318e81613152565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006131f1602283612321565b91506131fc82613195565b604082019050919050565b60006020820190508181036000830152613220816131e4565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061325d601d83612321565b915061326882613227565b602082019050919050565b6000602082019050818103600083015261328c81613250565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006132ef602583612321565b91506132fa82613293565b604082019050919050565b6000602082019050818103600083015261331e816132e2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000613381602383612321565b915061338c82613325565b604082019050919050565b600060208201905081810360008301526133b081613374565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000613413602683612321565b915061341e826133b7565b604082019050919050565b6000602082019050818103600083015261344281613406565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061347f602083612321565b915061348a82613449565b602082019050919050565b600060208201905081810360008301526134ae81613472565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006134eb601f83612321565b91506134f6826134b5565b602082019050919050565b6000602082019050818103600083015261351a816134de565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061357d602183612321565b915061358882613521565b604082019050919050565b600060208201905081810360008301526135ac81613570565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b600061360f602283612321565b915061361a826135b3565b604082019050919050565b6000602082019050818103600083015261363e81613602565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006136a1602b83612321565b91506136ac82613645565b604082019050919050565b600060208201905081810360008301526136d081613694565b9050919050565b600060a0820190506136ec60008301886125a4565b6136f960208301876125a4565b61370660408301866125a4565b61371360608301856124e6565b6137206080830184612663565b9695505050505050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000613760601483612321565b915061376b8261372a565b602082019050919050565b6000602082019050818103600083015261378f81613753565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026137f87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826137bb565b61380286836137bb565b95508019841693508086168417925050509392505050565b600061383561383061382b8461243a565b612db5565b61243a565b9050919050565b6000819050919050565b61384f8361381a565b61386361385b8261383c565b8484546137c8565b825550505050565b600090565b61387861386b565b613883818484613846565b505050565b5b818110156138a75761389c600082613870565b600181019050613889565b5050565b601f8211156138ec576138bd81613796565b6138c6846137ab565b810160208510156138d5578190505b6138e96138e1856137ab565b830182613888565b50505b505050565b600082821c905092915050565b600061390f600019846008026138f1565b1980831691505092915050565b600061392883836138fe565b9150826002028217905092915050565b61394182612316565b67ffffffffffffffff81111561395a576139596127d4565b5b6139648254612c85565b61396f8282856138ab565b600060209050601f8311600181146139a25760008415613990578287015190505b61399a858261391c565b865550613a02565b601f1984166139b086613796565b60005b828110156139d8578489015182556001820191506020850194506020810190506139b3565b868310156139f557848901516139f1601f8916826138fe565b8355505b6001600288020188555050505b505050505050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613a40601083612321565b9150613a4b82613a0a565b602082019050919050565b60006020820190508181036000830152613a6f81613a33565b9050919050565b6000608082019050613a8b60008301876125a4565b613a986020830186612570565b613aa560408301856125a4565b613ab260608301846125a4565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000613b20601883612321565b9150613b2b82613aea565b602082019050919050565b60006020820190508181036000830152613b4f81613b13565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000613b8c601f83612321565b9150613b9782613b56565b602082019050919050565b60006020820190508181036000830152613bbb81613b7f565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000613c1e602283612321565b9150613c2982613bc2565b604082019050919050565b60006020820190508181036000830152613c4d81613c11565b905091905056fea2646970667358221220a311eb750360f3b62e3a8e6ba1f0c5e3b9853df8263ccfef21dd60236c68624564736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0x28 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x72 SWAP1 PUSH3 0x175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP1 AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH3 0xEC JUMPI PUSH1 0xFF PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0xFF PUSH1 0x40 MLOAD PUSH3 0xE3 SWAP2 SWAP1 PUSH3 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C697A696E6700000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15D PUSH1 0x27 DUP4 PUSH3 0xEE JUMP JUMPDEST SWAP2 POP PUSH3 0x16A DUP3 PUSH3 0xFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x190 DUP2 PUSH3 0x14E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1AF DUP2 PUSH3 0x197 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1CC PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C8A DUP1 PUSH3 0x1E2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xFDD95894 EQ PUSH2 0x508 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xAAD41A41 EQ PUSH2 0x470 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F2 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x39C JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x346 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C0 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x268 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x300 PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH2 0x6F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH2 0x77A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH2 0x97A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B8 PUSH2 0x98C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FA PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x29DA JUMP JUMPDEST PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH2 0xC51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x506 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH2 0xE1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x2B8C JUMP JUMPDEST PUSH2 0xE9D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x533 SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x55F SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x581 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5C1 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH2 0x5CE DUP2 DUP6 DUP6 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5EE PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH2 0x5FB DUP6 DUP3 DUP6 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x606 DUP6 DUP6 DUP6 PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x625 PUSH2 0x13B0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x635 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH2 0x656 DUP2 DUP6 DUP6 PUSH2 0x647 DUP6 DUP10 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x2CE5 JUMP JUMPDEST PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x669 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x671 PUSH2 0x143D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x67D DUP3 DUP3 PUSH2 0x14A0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x692 PUSH2 0x68C PUSH2 0xEDA JUMP JUMPDEST DUP3 PUSH2 0x15F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FD PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x707 PUSH1 0x0 PUSH2 0x17C6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x71B DUP3 PUSH2 0x715 PUSH2 0xEDA JUMP JUMPDEST DUP4 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x725 DUP3 DUP3 PUSH2 0x15F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x773 PUSH2 0x12F PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x188C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x7AB JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x7D8 JUMPI POP PUSH2 0x7BA ADDRESS PUSH2 0x189A JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x7D7 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80E SWAP1 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x854 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x8C8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54657374506F4C00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5450000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x8D0 PUSH2 0x191A JUMP JUMPDEST PUSH2 0x8D8 PUSH2 0x196B JUMP JUMPDEST PUSH2 0x8E0 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x91E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54657374506F4C00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1A1D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x977 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x96E SWAP2 SWAP1 PUSH2 0x2DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x982 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x98A PUSH2 0x1AAE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 SHL PUSH1 0xFB SLOAD EQ DUP1 ISZERO PUSH2 0x9B0 JUMPI POP PUSH1 0x0 DUP1 SHL PUSH1 0xFC SLOAD EQ JUMPDEST PUSH2 0x9EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E6 SWAP1 PUSH2 0x2E57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F7 PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0x9FF PUSH2 0x1BA3 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA20 JUMPI PUSH2 0xA1F PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA4E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0xAC6 SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAF2 SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB3F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB3F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB22 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB54 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB62 DUP3 DUP7 PUSH2 0xD93 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9E SWAP1 PUSH2 0x2EE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB4 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBCB PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH2 0xBD8 DUP2 DUP6 DUP6 PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC47 JUMPI PUSH2 0xC32 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC0A JUMPI PUSH2 0xC09 PUSH2 0x2F09 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC25 JUMPI PUSH2 0xC24 PUSH2 0x2F09 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xBC0 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH2 0xC40 SWAP2 SWAP1 PUSH2 0x2CE5 JUMP JUMPDEST SWAP1 POP PUSH2 0xBEB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xC94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8B SWAP1 PUSH2 0x2F84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xCC3 DUP13 PUSH2 0x1C35 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCD9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xCFC DUP3 PUSH2 0x1C94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD0C DUP3 DUP8 DUP8 DUP8 PUSH2 0x1CAE JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD73 SWAP1 PUSH2 0x3051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD87 DUP11 DUP11 DUP11 PUSH2 0xEE2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE22 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE88 SWAP1 PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9A DUP2 PUSH2 0x17C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEB7 DUP10 DUP10 DUP8 DUP10 PUSH2 0xEAE SWAP2 SWAP1 PUSH2 0x2CE5 JUMP JUMPDEST DUP8 DUP8 DUP8 DUP8 PUSH2 0xC51 JUMP JUMPDEST PUSH2 0xEC2 DUP10 DUP9 DUP9 PUSH2 0x5E3 JUMP JUMPDEST POP PUSH2 0xECE DUP10 CALLER DUP8 PUSH2 0x5E3 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF48 SWAP1 PUSH2 0x3175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB7 SWAP1 PUSH2 0x3207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x109E SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B7 DUP5 DUP5 PUSH2 0xD93 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1131 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111A SWAP1 PUSH2 0x3273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1130 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xEE2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119D SWAP1 PUSH2 0x3305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1215 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120C SWAP1 PUSH2 0x3397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1220 DUP4 DUP4 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129E SWAP1 PUSH2 0x3429 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1397 SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x13AA DUP5 DUP5 DUP5 PUSH2 0x1CDE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BA PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13C7 PUSH2 0xEDA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13E5 PUSH2 0xA8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x143B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1432 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1445 PUSH2 0x1D47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1489 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1496 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x150F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1506 SWAP1 PUSH2 0x3501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x151B PUSH1 0x0 DUP4 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x152D SWAP2 SWAP1 PUSH2 0x2CE5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15DF SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x15F3 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1CDE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1666 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165D SWAP1 PUSH2 0x3593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1672 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F0 SWAP1 PUSH2 0x3625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x17AD SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17C1 DUP4 PUSH1 0x0 DUP5 PUSH2 0x1CDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xC9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x190C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1903 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1916 DUP3 DUP3 PUSH2 0x1D90 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1969 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1960 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x19BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B1 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C2 PUSH2 0x1E03 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0A SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A1B PUSH2 0x1E6F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A63 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AAB DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1ED0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AB6 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x97 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1AFA PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B07 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFD DUP1 SLOAD PUSH2 0x1B20 SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B4C SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B6E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFE DUP1 SLOAD PUSH2 0x1BB2 SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BDE SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C2B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C00 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C2B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C0E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12F PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1C83 DUP2 PUSH2 0x188C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8E DUP2 PUSH2 0x1FA1 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA7 PUSH2 0x1CA1 PUSH2 0x13B0 JUMP JUMPDEST DUP4 PUSH2 0x1FB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1CBF DUP8 DUP8 DUP8 DUP8 PUSH2 0x1FF8 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1CCC DUP2 PUSH2 0x20DA JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x1D0E PUSH2 0x2240 JUMP JUMPDEST PUSH2 0x1D16 PUSH2 0x22AB JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D2C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D4F PUSH2 0x695 JUMP JUMPDEST PUSH2 0x1D8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D85 SWAP1 PUSH2 0x3776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1DDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD6 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x36 SWAP1 DUP2 PUSH2 0x1DEE SWAP2 SWAP1 PUSH2 0x3938 JUMP JUMPDEST POP DUP1 PUSH1 0x37 SWAP1 DUP2 PUSH2 0x1DFE SWAP2 SWAP1 PUSH2 0x3938 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E49 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1EBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB5 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1ECE PUSH2 0x1EC9 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x17C6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1F1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F16 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xFD SWAP1 DUP2 PUSH2 0x1F2E SWAP2 SWAP1 PUSH2 0x3938 JUMP JUMPDEST POP DUP1 PUSH1 0xFE SWAP1 DUP2 PUSH2 0x1F3E SWAP2 SWAP1 PUSH2 0x3938 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SHL PUSH1 0xFB DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SHL PUSH1 0xFC DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1F5F PUSH2 0x695 JUMP JUMPDEST ISZERO PUSH2 0x1F9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F96 SWAP1 PUSH2 0x3A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2033 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x20D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2058 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x207A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20C8 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x20D1 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x20EE JUMPI PUSH2 0x20ED PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2101 JUMPI PUSH2 0x2100 PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x223D JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x211B JUMPI PUSH2 0x211A PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x212E JUMPI PUSH2 0x212D PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x216E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2165 SWAP1 PUSH2 0x3B36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2182 JUMPI PUSH2 0x2181 PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2195 JUMPI PUSH2 0x2194 PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x21D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21CC SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x21E9 JUMPI PUSH2 0x21E8 PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x21FC JUMPI PUSH2 0x21FB PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x223C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2233 SWAP1 PUSH2 0x3C34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x224B PUSH2 0x1B11 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2267 JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP PUSH2 0x22A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFB SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ PUSH2 0x2282 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x22A8 JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22B6 PUSH2 0x1BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x22D2 JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFC SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ PUSH2 0x22ED JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x2313 JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2350 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2335 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2378 DUP3 PUSH2 0x2316 JUMP JUMPDEST PUSH2 0x2382 DUP2 DUP6 PUSH2 0x2321 JUMP JUMPDEST SWAP4 POP PUSH2 0x2392 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2332 JUMP JUMPDEST PUSH2 0x239B DUP2 PUSH2 0x235C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23C0 DUP2 DUP5 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2407 DUP3 PUSH2 0x23DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2417 DUP2 PUSH2 0x23FC JUMP JUMPDEST DUP2 EQ PUSH2 0x2422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2434 DUP2 PUSH2 0x240E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244D DUP2 PUSH2 0x243A JUMP JUMPDEST DUP2 EQ PUSH2 0x2458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x246A DUP2 PUSH2 0x2444 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2487 JUMPI PUSH2 0x2486 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2495 DUP6 DUP3 DUP7 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24A6 DUP6 DUP3 DUP7 ADD PUSH2 0x245B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24C5 DUP2 PUSH2 0x24B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24EF DUP2 PUSH2 0x243A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x250A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2529 JUMPI PUSH2 0x2528 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2537 DUP7 DUP3 DUP8 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2548 DUP7 DUP3 DUP8 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2559 DUP7 DUP3 DUP8 ADD PUSH2 0x245B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2579 DUP2 PUSH2 0x2563 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2594 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25AD DUP2 PUSH2 0x259A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E4 JUMPI PUSH2 0x25E3 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F2 DUP5 DUP3 DUP6 ADD PUSH2 0x245B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2611 JUMPI PUSH2 0x2610 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x261F DUP5 DUP3 DUP6 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x265D DUP2 PUSH2 0x2628 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x266C DUP2 PUSH2 0x23FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A7 DUP2 PUSH2 0x243A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B9 DUP4 DUP4 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DD DUP3 PUSH2 0x2672 JUMP JUMPDEST PUSH2 0x26E7 DUP2 DUP6 PUSH2 0x267D JUMP JUMPDEST SWAP4 POP PUSH2 0x26F2 DUP4 PUSH2 0x268E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2723 JUMPI DUP2 MLOAD PUSH2 0x270A DUP9 DUP3 PUSH2 0x26AD JUMP JUMPDEST SWAP8 POP PUSH2 0x2715 DUP4 PUSH2 0x26C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26F6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2745 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2654 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2757 DUP2 DUP10 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x276B DUP2 DUP9 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP PUSH2 0x277A PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x24E6 JUMP JUMPDEST PUSH2 0x2787 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2663 JUMP JUMPDEST PUSH2 0x2794 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x25A4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x27A6 DUP2 DUP5 PUSH2 0x26D2 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2663 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x280C DUP3 PUSH2 0x235C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x282B JUMPI PUSH2 0x282A PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x283E PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x284A DUP3 DUP3 PUSH2 0x2803 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x286A JUMPI PUSH2 0x2869 PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2893 PUSH2 0x288E DUP5 PUSH2 0x284F JUMP JUMPDEST PUSH2 0x2834 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x28B6 JUMPI PUSH2 0x28B5 PUSH2 0x287B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28DF JUMPI DUP1 PUSH2 0x28CB DUP9 DUP3 PUSH2 0x2425 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28B8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28FE JUMPI PUSH2 0x28FD PUSH2 0x27CF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x290E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2880 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2932 JUMPI PUSH2 0x2931 PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2956 PUSH2 0x2951 DUP5 PUSH2 0x2917 JUMP JUMPDEST PUSH2 0x2834 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2979 JUMPI PUSH2 0x2978 PUSH2 0x287B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29A2 JUMPI DUP1 PUSH2 0x298E DUP9 DUP3 PUSH2 0x245B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x297B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29C1 JUMPI PUSH2 0x29C0 PUSH2 0x27CF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x29D1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2943 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29F1 JUMPI PUSH2 0x29F0 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A0F JUMPI PUSH2 0x2A0E PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH2 0x2A1B DUP6 DUP3 DUP7 ADD PUSH2 0x28E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A3C JUMPI PUSH2 0x2A3B PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH2 0x2A48 DUP6 DUP3 DUP7 ADD PUSH2 0x29AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A5B DUP2 PUSH2 0x2563 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A78 DUP2 PUSH2 0x2A52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A87 DUP2 PUSH2 0x259A JUMP JUMPDEST DUP2 EQ PUSH2 0x2A92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AA4 DUP2 PUSH2 0x2A7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2AC9 JUMPI PUSH2 0x2AC8 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AD7 DUP11 DUP3 DUP12 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2AE8 DUP11 DUP3 DUP12 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2AF9 DUP11 DUP3 DUP12 ADD PUSH2 0x245B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2B0A DUP11 DUP3 DUP12 ADD PUSH2 0x245B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2B1B DUP11 DUP3 DUP12 ADD PUSH2 0x2A69 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2B2C DUP11 DUP3 DUP12 ADD PUSH2 0x2A95 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2B3D DUP11 DUP3 DUP12 ADD PUSH2 0x2A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B63 JUMPI PUSH2 0x2B62 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B71 DUP6 DUP3 DUP7 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B82 DUP6 DUP3 DUP7 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x2BAF JUMPI PUSH2 0x2BAE PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BBD DUP13 DUP3 DUP14 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0x2BCE DUP13 DUP3 DUP14 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0x2BDF DUP13 DUP3 DUP14 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x2BF0 DUP13 DUP3 DUP14 ADD PUSH2 0x245B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x2C01 DUP13 DUP3 DUP14 ADD PUSH2 0x245B JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x2C12 DUP13 DUP3 DUP14 ADD PUSH2 0x245B JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0x2C23 DUP13 DUP3 DUP14 ADD PUSH2 0x2A69 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 PUSH2 0x2C34 DUP13 DUP3 DUP14 ADD PUSH2 0x2A95 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH2 0x2C46 DUP13 DUP3 DUP14 ADD PUSH2 0x2A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C9D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2CB0 JUMPI PUSH2 0x2CAF PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CF0 DUP3 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFB DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D13 JUMPI PUSH2 0x2D12 PUSH2 0x2CB6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D75 PUSH1 0x2E DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D80 DUP3 PUSH2 0x2D19 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DA4 DUP2 PUSH2 0x2D68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDA PUSH2 0x2DD5 PUSH2 0x2DD0 DUP5 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x2DB5 JUMP JUMPDEST PUSH2 0x2563 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DEA DUP2 PUSH2 0x2DBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4549503731323A20556E696E697469616C697A65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E41 PUSH1 0x15 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E4C DUP3 PUSH2 0x2E0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E70 DUP2 PUSH2 0x2E34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ED3 PUSH1 0x25 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EDE DUP3 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F02 DUP2 PUSH2 0x2EC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6E PUSH1 0x1D DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F79 DUP3 PUSH2 0x2F38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F9D DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2FB9 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x2FC6 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2663 JUMP JUMPDEST PUSH2 0x2FD3 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2663 JUMP JUMPDEST PUSH2 0x2FE0 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x24E6 JUMP JUMPDEST PUSH2 0x2FED PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x24E6 JUMP JUMPDEST PUSH2 0x2FFA PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x24E6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x303B PUSH1 0x1E DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3046 DUP3 PUSH2 0x3005 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x306A DUP2 PUSH2 0x302E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30CD PUSH1 0x26 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x30D8 DUP3 PUSH2 0x3071 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30FC DUP2 PUSH2 0x30C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315F PUSH1 0x24 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x316A DUP3 PUSH2 0x3103 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x318E DUP2 PUSH2 0x3152 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F1 PUSH1 0x22 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x31FC DUP3 PUSH2 0x3195 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3220 DUP2 PUSH2 0x31E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x325D PUSH1 0x1D DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3268 DUP3 PUSH2 0x3227 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x328C DUP2 PUSH2 0x3250 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32EF PUSH1 0x25 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x32FA DUP3 PUSH2 0x3293 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x331E DUP2 PUSH2 0x32E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3381 PUSH1 0x23 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x338C DUP3 PUSH2 0x3325 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33B0 DUP2 PUSH2 0x3374 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3413 PUSH1 0x26 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x341E DUP3 PUSH2 0x33B7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3442 DUP2 PUSH2 0x3406 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347F PUSH1 0x20 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x348A DUP3 PUSH2 0x3449 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34AE DUP2 PUSH2 0x3472 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34EB PUSH1 0x1F DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x34F6 DUP3 PUSH2 0x34B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x351A DUP2 PUSH2 0x34DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357D PUSH1 0x21 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3588 DUP3 PUSH2 0x3521 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35AC DUP2 PUSH2 0x3570 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360F PUSH1 0x22 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x361A DUP3 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x363E DUP2 PUSH2 0x3602 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A1 PUSH1 0x2B DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x36AC DUP3 PUSH2 0x3645 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36D0 DUP2 PUSH2 0x3694 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x36EC PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x36F9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x3706 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x3713 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x24E6 JUMP JUMPDEST PUSH2 0x3720 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2663 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3760 PUSH1 0x14 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x376B DUP3 PUSH2 0x372A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x378F DUP2 PUSH2 0x3753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x37F8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x37BB JUMP JUMPDEST PUSH2 0x3802 DUP7 DUP4 PUSH2 0x37BB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3835 PUSH2 0x3830 PUSH2 0x382B DUP5 PUSH2 0x243A JUMP JUMPDEST PUSH2 0x2DB5 JUMP JUMPDEST PUSH2 0x243A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x384F DUP4 PUSH2 0x381A JUMP JUMPDEST PUSH2 0x3863 PUSH2 0x385B DUP3 PUSH2 0x383C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x37C8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3878 PUSH2 0x386B JUMP JUMPDEST PUSH2 0x3883 DUP2 DUP5 DUP5 PUSH2 0x3846 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38A7 JUMPI PUSH2 0x389C PUSH1 0x0 DUP3 PUSH2 0x3870 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3889 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x38EC JUMPI PUSH2 0x38BD DUP2 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x38C6 DUP5 PUSH2 0x37AB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x38D5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x38E9 PUSH2 0x38E1 DUP6 PUSH2 0x37AB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3888 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x38F1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3928 DUP4 DUP4 PUSH2 0x38FE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3941 DUP3 PUSH2 0x2316 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x395A JUMPI PUSH2 0x3959 PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH2 0x3964 DUP3 SLOAD PUSH2 0x2C85 JUMP JUMPDEST PUSH2 0x396F DUP3 DUP3 DUP6 PUSH2 0x38AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x39A2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3990 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x399A DUP6 DUP3 PUSH2 0x391C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A02 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x39B0 DUP7 PUSH2 0x3796 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39D8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39B3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x39F5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x39F1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x38FE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A40 PUSH1 0x10 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A4B DUP3 PUSH2 0x3A0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A6F DUP2 PUSH2 0x3A33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3A8B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x3A98 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2570 JUMP JUMPDEST PUSH2 0x3AA5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x3AB2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x25A4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B20 PUSH1 0x18 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B2B DUP3 PUSH2 0x3AEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B4F DUP2 PUSH2 0x3B13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8C PUSH1 0x1F DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B97 DUP3 PUSH2 0x3B56 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BBB DUP2 PUSH2 0x3B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1E PUSH1 0x22 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C29 DUP3 PUSH2 0x3BC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C4D DUP2 PUSH2 0x3C11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 GT 0xEB PUSH22 0x360F3B62E3A8E6BA1F0C5E3B9853DF8263CCFEF21DD PUSH1 0x23 PUSH13 0x68624564736F6C634300081200 CALLER ","sourceMap":"575:1436:19:-:0;;;777:53;;;;;;;;;;801:22;:20;;;:22;;:::i;:::-;575:1436;;5939:280:2;6007:13;;;;;;;;;;;6006:14;5998:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6094:15;6078:31;;:12;;;;;;;;;;:31;;;6074:139;;6140:15;6125:12;;:30;;;;;;;;;;;;;;;;;;6174:28;6186:15;6174:28;;;;;;:::i;:::-;;;;;;;;6074:139;5939:280::o;7:169:20:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:226::-;322:34;318:1;310:6;306:14;299:58;391:9;386:2;378:6;374:15;367:34;182:226;:::o;414:366::-;556:3;577:67;641:2;636:3;577:67;:::i;:::-;570:74;;653:93;742:3;653:93;:::i;:::-;771:2;766:3;762:12;755:19;;414:366;;;:::o;786:419::-;952:4;990:2;979:9;975:18;967:26;;1039:9;1033:4;1029:20;1025:1;1014:9;1010:17;1003:47;1067:131;1193:4;1067:131;:::i;:::-;1059:139;;786:419;;;:::o;1211:86::-;1246:7;1286:4;1279:5;1275:16;1264:27;;1211:86;;;:::o;1303:112::-;1386:22;1402:5;1386:22;:::i;:::-;1381:3;1374:35;1303:112;;:::o;1421:214::-;1510:4;1548:2;1537:9;1533:18;1525:26;;1561:67;1625:1;1614:9;1610:17;1601:6;1561:67;:::i;:::-;1421:214;;;;:::o;575:1436:19:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1367":{"entryPoint":1563,"id":1367,"parameterSlots":0,"returnSlots":1},"@_EIP712NameHash_2750":{"entryPoint":8768,"id":2750,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_2696":{"entryPoint":6929,"id":2696,"parameterSlots":0,"returnSlots":1},"@_EIP712VersionHash_2795":{"entryPoint":8875,"id":2795,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_2705":{"entryPoint":7075,"id":2705,"parameterSlots":0,"returnSlots":1},"@__EIP712_init_unchained_2584":{"entryPoint":7888,"id":2584,"parameterSlots":2,"returnSlots":0},"@__ERC20Burnable_init_1164":{"entryPoint":6426,"id":1164,"parameterSlots":0,"returnSlots":0},"@__ERC20Permit_init_1259":{"entryPoint":6685,"id":1259,"parameterSlots":1,"returnSlots":0},"@__ERC20_init_502":{"entryPoint":6333,"id":502,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_520":{"entryPoint":7568,"id":520,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_27":{"entryPoint":6596,"id":27,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_unchained_38":{"entryPoint":7791,"id":38,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_358":{"entryPoint":6507,"id":358,"parameterSlots":0,"returnSlots":0},"@__Pausable_init_unchained_368":{"entryPoint":7683,"id":368,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_1061":{"entryPoint":7390,"id":1061,"parameterSlots":3,"returnSlots":0},"@_approve_996":{"entryPoint":3810,"id":996,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1050":{"entryPoint":7385,"id":1050,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_2617":{"entryPoint":7395,"id":2617,"parameterSlots":0,"returnSlots":1},"@_burn_951":{"entryPoint":5623,"id":951,"parameterSlots":2,"returnSlots":0},"@_checkOwner_69":{"entryPoint":5055,"id":69,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_2594":{"entryPoint":5040,"id":2594,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_2633":{"entryPoint":7316,"id":2633,"parameterSlots":1,"returnSlots":1},"@_mint_879":{"entryPoint":5280,"id":879,"parameterSlots":2,"returnSlots":0},"@_msgSender_1824":{"entryPoint":3802,"id":1824,"parameterSlots":0,"returnSlots":1},"@_pause_432":{"entryPoint":6830,"id":432,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_405":{"entryPoint":8023,"id":405,"parameterSlots":0,"returnSlots":0},"@_requirePaused_416":{"entryPoint":7495,"id":416,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_1039":{"entryPoint":4267,"id":1039,"parameterSlots":3,"returnSlots":0},"@_throwError_2204":{"entryPoint":8410,"id":2204,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_126":{"entryPoint":6086,"id":126,"parameterSlots":1,"returnSlots":0},"@_transfer_822":{"entryPoint":4407,"id":822,"parameterSlots":3,"returnSlots":0},"@_unpause_448":{"entryPoint":5181,"id":448,"parameterSlots":0,"returnSlots":0},"@_useNonce_1396":{"entryPoint":7221,"id":1396,"parameterSlots":1,"returnSlots":1},"@allowance_617":{"entryPoint":3475,"id":617,"parameterSlots":2,"returnSlots":1},"@approve_642":{"entryPoint":1462,"id":642,"parameterSlots":2,"returnSlots":1},"@balanceOf_574":{"entryPoint":1708,"id":574,"parameterSlots":1,"returnSlots":1},"@burnFrom_1204":{"entryPoint":1801,"id":1204,"parameterSlots":2,"returnSlots":0},"@burn_1183":{"entryPoint":1665,"id":1183,"parameterSlots":1,"returnSlots":0},"@current_1865":{"entryPoint":6284,"id":1865,"parameterSlots":1,"returnSlots":1},"@decimals_550":{"entryPoint":1554,"id":550,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_745":{"entryPoint":2889,"id":745,"parameterSlots":2,"returnSlots":1},"@eip712Domain_2687":{"entryPoint":2444,"id":2687,"parameterSlots":0,"returnSlots":7},"@increaseAllowance_704":{"entryPoint":1578,"id":704,"parameterSlots":2,"returnSlots":1},"@increment_1879":{"entryPoint":8097,"id":1879,"parameterSlots":1,"returnSlots":0},"@initialize_3824":{"entryPoint":1914,"id":3824,"parameterSlots":0,"returnSlots":0},"@isContract_1484":{"entryPoint":6298,"id":1484,"parameterSlots":1,"returnSlots":1},"@mint_3855":{"entryPoint":1651,"id":3855,"parameterSlots":2,"returnSlots":0},"@multisend_3893":{"entryPoint":3043,"id":3893,"parameterSlots":2,"returnSlots":1},"@name_530":{"entryPoint":1316,"id":530,"parameterSlots":0,"returnSlots":1},"@nonces_1356":{"entryPoint":1833,"id":1356,"parameterSlots":1,"returnSlots":1},"@owner_55":{"entryPoint":2701,"id":55,"parameterSlots":0,"returnSlots":1},"@pause_3833":{"entryPoint":2426,"id":3833,"parameterSlots":0,"returnSlots":0},"@paused_393":{"entryPoint":1685,"id":393,"parameterSlots":0,"returnSlots":1},"@permit_1340":{"entryPoint":3153,"id":1340,"parameterSlots":7,"returnSlots":0},"@recover_2451":{"entryPoint":7342,"id":2451,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_83":{"entryPoint":1781,"id":83,"parameterSlots":0,"returnSlots":0},"@symbol_540":{"entryPoint":2743,"id":540,"parameterSlots":0,"returnSlots":1},"@toTypedDataHash_2495":{"entryPoint":8119,"id":2495,"parameterSlots":2,"returnSlots":1},"@totalSupply_560":{"entryPoint":1497,"id":560,"parameterSlots":0,"returnSlots":1},"@transferFrom_675":{"entryPoint":1507,"id":675,"parameterSlots":3,"returnSlots":1},"@transferOwnership_106":{"entryPoint":3610,"id":106,"parameterSlots":1,"returnSlots":0},"@transferWithPermit_3940":{"entryPoint":3741,"id":3940,"parameterSlots":9,"returnSlots":0},"@transfer_599":{"entryPoint":3008,"id":599,"parameterSlots":2,"returnSlots":1},"@tryRecover_2418":{"entryPoint":8184,"id":2418,"parameterSlots":4,"returnSlots":2},"@unpause_3842":{"entryPoint":1633,"id":3842,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":10368,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10563,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9253,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":10473,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10668,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":10901,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":10857,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9723,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":11084,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":11148,"id":null,"parameterSlots":2,"returnSlots":9},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9488,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":10922,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9328,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10714,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":9678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":9901,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9827,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9938,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9404,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":9812,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":9636,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack":{"entryPoint":11745,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":9069,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":15123,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":13172,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack":{"entryPoint":14163,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack":{"entryPoint":13826,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":15231,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":12480,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":12772,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack":{"entryPoint":11828,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":12880,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack":{"entryPoint":12129,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":13318,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":15377,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":14899,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack":{"entryPoint":11624,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack":{"entryPoint":12334,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":13426,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack":{"entryPoint":13680,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":13026,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":12626,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack":{"entryPoint":13972,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":11974,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":13534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":9886,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":9446,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":9584,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10164,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9419,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10032,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":9651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":12196,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":14039,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":14966,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed":{"entryPoint":11760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9126,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15158,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13207,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14198,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13861,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15266,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12515,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12807,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11863,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12915,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12164,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13353,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15412,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14934,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11659,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12369,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13461,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13715,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13061,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12661,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14007,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12009,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":9461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":9599,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":10292,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9160,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":10319,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10519,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9870,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":14230,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9842,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8982,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9925,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9853,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8993,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11493,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":14507,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":9212,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9392,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":9768,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":9626,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":11691,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9180,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9274,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":9571,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":14472,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint8":{"entryPoint":11711,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":14362,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":14648,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":9010,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":14251,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":11397,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":14620,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":10243,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":11701,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":14590,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11446,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":15035,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11350,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12041,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10196,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":14396,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10191,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":10363,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9175,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9170,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9052,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":14267,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":14577,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":14448,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":15082,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":13093,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":14122,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd":{"entryPoint":13747,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":15190,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":12401,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":12693,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade":{"entryPoint":11787,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":12839,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd":{"entryPoint":12088,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":13239,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":15298,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":14858,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759":{"entryPoint":11545,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124":{"entryPoint":12293,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":13385,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":13601,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":12947,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":12547,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b":{"entryPoint":13893,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":11895,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":13493,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":14280,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":14406,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9230,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":10878,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9284,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":10834,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":14443,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:48166:20","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:20","statements":[{"nodeType":"YulAssignment","src":"77:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:20"},"nodeType":"YulFunctionCall","src":"87:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:20","type":""}],"src":"7:99:20"},{"body":{"nodeType":"YulBlock","src":"208:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:20"},"nodeType":"YulFunctionCall","src":"218:19:20"},"nodeType":"YulExpressionStatement","src":"218:19:20"},{"nodeType":"YulAssignment","src":"246:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:20"},"nodeType":"YulFunctionCall","src":"261:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:20","type":""}],"src":"112:169:20"},{"body":{"nodeType":"YulBlock","src":"349:184:20","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:20"},"nodeType":"YulFunctionCall","src":"449:11:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:20"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:20"},"nodeType":"YulFunctionCall","src":"468:11:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:20"},"nodeType":"YulFunctionCall","src":"462:18:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:20"},"nodeType":"YulFunctionCall","src":"442:39:20"},"nodeType":"YulExpressionStatement","src":"442:39:20"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:20"},"nodeType":"YulFunctionCall","src":"386:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:20","statements":[{"nodeType":"YulAssignment","src":"402:15:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:20"},"nodeType":"YulFunctionCall","src":"407:10:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:20","statements":[]},"src":"378:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:20"},"nodeType":"YulFunctionCall","src":"507:16:20"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:20"},"nodeType":"YulFunctionCall","src":"500:27:20"},"nodeType":"YulExpressionStatement","src":"500:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:20","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:20","type":""}],"src":"287:246:20"},{"body":{"nodeType":"YulBlock","src":"587:54:20","statements":[{"nodeType":"YulAssignment","src":"597:38:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:20"},"nodeType":"YulFunctionCall","src":"611:14:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:20","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:20"},"nodeType":"YulFunctionCall","src":"627:7:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:20"},"nodeType":"YulFunctionCall","src":"607:28:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:20"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:20","type":""}],"src":"539:102:20"},{"body":{"nodeType":"YulBlock","src":"739:285:20","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:20"},"nodeType":"YulFunctionCall","src":"763:39:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:20","type":""}]},{"nodeType":"YulAssignment","src":"811:78:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:20"},"nodeType":"YulFunctionCall","src":"818:71:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:20"},"nodeType":"YulFunctionCall","src":"933:16:20"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:20"},"nodeType":"YulFunctionCall","src":"898:65:20"},"nodeType":"YulExpressionStatement","src":"898:65:20"},{"nodeType":"YulAssignment","src":"972:46:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:20"},"nodeType":"YulFunctionCall","src":"988:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:20"},"nodeType":"YulFunctionCall","src":"979:39:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:20","type":""}],"src":"647:377:20"},{"body":{"nodeType":"YulBlock","src":"1148:195:20","statements":[{"nodeType":"YulAssignment","src":"1158:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:20"},"nodeType":"YulFunctionCall","src":"1166:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:20"},"nodeType":"YulFunctionCall","src":"1201:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:20"},"nodeType":"YulFunctionCall","src":"1220:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:20"},"nodeType":"YulFunctionCall","src":"1194:47:20"},"nodeType":"YulExpressionStatement","src":"1194:47:20"},{"nodeType":"YulAssignment","src":"1250:86:20","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:20"},"nodeType":"YulFunctionCall","src":"1258:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:20","type":""}],"src":"1030:313:20"},{"body":{"nodeType":"YulBlock","src":"1389:35:20","statements":[{"nodeType":"YulAssignment","src":"1399:19:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:20"},"nodeType":"YulFunctionCall","src":"1409:9:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:20"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:20","type":""}],"src":"1349:75:20"},{"body":{"nodeType":"YulBlock","src":"1519:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:20"},"nodeType":"YulFunctionCall","src":"1529:12:20"},"nodeType":"YulExpressionStatement","src":"1529:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:20"},{"body":{"nodeType":"YulBlock","src":"1642:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:20"},"nodeType":"YulFunctionCall","src":"1652:12:20"},"nodeType":"YulExpressionStatement","src":"1652:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:20"},{"body":{"nodeType":"YulBlock","src":"1721:81:20","statements":[{"nodeType":"YulAssignment","src":"1731:65:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:20"},"nodeType":"YulFunctionCall","src":"1742:54:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:20"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:20","type":""}],"src":"1676:126:20"},{"body":{"nodeType":"YulBlock","src":"1853:51:20","statements":[{"nodeType":"YulAssignment","src":"1863:35:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:20"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:20"},"nodeType":"YulFunctionCall","src":"1874:24:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:20"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:20","type":""}],"src":"1808:96:20"},{"body":{"nodeType":"YulBlock","src":"1953:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:20"},"nodeType":"YulFunctionCall","src":"2012:12:20"},"nodeType":"YulExpressionStatement","src":"2012:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:20"},"nodeType":"YulFunctionCall","src":"1983:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:20"},"nodeType":"YulFunctionCall","src":"1973:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:20"},"nodeType":"YulFunctionCall","src":"1966:43:20"},"nodeType":"YulIf","src":"1963:63:20"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:20","type":""}],"src":"1910:122:20"},{"body":{"nodeType":"YulBlock","src":"2090:87:20","statements":[{"nodeType":"YulAssignment","src":"2100:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:20"},"nodeType":"YulFunctionCall","src":"2109:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:20"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:20"},"nodeType":"YulFunctionCall","src":"2138:33:20"},"nodeType":"YulExpressionStatement","src":"2138:33:20"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:20","type":""}],"src":"2038:139:20"},{"body":{"nodeType":"YulBlock","src":"2228:32:20","statements":[{"nodeType":"YulAssignment","src":"2238:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:20"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:20","type":""}],"src":"2183:77:20"},{"body":{"nodeType":"YulBlock","src":"2309:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:20"},"nodeType":"YulFunctionCall","src":"2368:12:20"},"nodeType":"YulExpressionStatement","src":"2368:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:20"},"nodeType":"YulFunctionCall","src":"2339:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:20"},"nodeType":"YulFunctionCall","src":"2329:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:20"},"nodeType":"YulFunctionCall","src":"2322:43:20"},"nodeType":"YulIf","src":"2319:63:20"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:20","type":""}],"src":"2266:122:20"},{"body":{"nodeType":"YulBlock","src":"2446:87:20","statements":[{"nodeType":"YulAssignment","src":"2456:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:20"},"nodeType":"YulFunctionCall","src":"2465:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:20"},"nodeType":"YulFunctionCall","src":"2494:33:20"},"nodeType":"YulExpressionStatement","src":"2494:33:20"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:20","type":""}],"src":"2394:139:20"},{"body":{"nodeType":"YulBlock","src":"2622:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:20"},"nodeType":"YulFunctionCall","src":"2670:79:20"},"nodeType":"YulExpressionStatement","src":"2670:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:20"},"nodeType":"YulFunctionCall","src":"2639:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:20"},"nodeType":"YulFunctionCall","src":"2635:32:20"},"nodeType":"YulIf","src":"2632:119:20"},{"nodeType":"YulBlock","src":"2761:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:20"},"nodeType":"YulFunctionCall","src":"2836:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:20"},"nodeType":"YulFunctionCall","src":"2815:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:20"}]}]},{"nodeType":"YulBlock","src":"2888:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:20","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:20"},"nodeType":"YulFunctionCall","src":"2964:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:20"},"nodeType":"YulFunctionCall","src":"2943:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:20","type":""}],"src":"2539:474:20"},{"body":{"nodeType":"YulBlock","src":"3061:48:20","statements":[{"nodeType":"YulAssignment","src":"3071:32:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:20"},"nodeType":"YulFunctionCall","src":"3089:13:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:20"},"nodeType":"YulFunctionCall","src":"3082:21:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:20"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:20","type":""}],"src":"3019:90:20"},{"body":{"nodeType":"YulBlock","src":"3174:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:20"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:20"},"nodeType":"YulFunctionCall","src":"3196:21:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:20"},"nodeType":"YulFunctionCall","src":"3184:34:20"},"nodeType":"YulExpressionStatement","src":"3184:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:20","type":""}],"src":"3115:109:20"},{"body":{"nodeType":"YulBlock","src":"3322:118:20","statements":[{"nodeType":"YulAssignment","src":"3332:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:20"},"nodeType":"YulFunctionCall","src":"3340:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:20"},"nodeType":"YulFunctionCall","src":"3415:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:20"},"nodeType":"YulFunctionCall","src":"3368:65:20"},"nodeType":"YulExpressionStatement","src":"3368:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:20","type":""}],"src":"3230:210:20"},{"body":{"nodeType":"YulBlock","src":"3511:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:20"},"nodeType":"YulFunctionCall","src":"3533:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:20"},"nodeType":"YulFunctionCall","src":"3521:37:20"},"nodeType":"YulExpressionStatement","src":"3521:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:20","type":""}],"src":"3446:118:20"},{"body":{"nodeType":"YulBlock","src":"3668:124:20","statements":[{"nodeType":"YulAssignment","src":"3678:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:20"},"nodeType":"YulFunctionCall","src":"3686:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:20"},"nodeType":"YulFunctionCall","src":"3767:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:20"},"nodeType":"YulFunctionCall","src":"3714:71:20"},"nodeType":"YulExpressionStatement","src":"3714:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:20","type":""}],"src":"3570:222:20"},{"body":{"nodeType":"YulBlock","src":"3898:519:20","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:20"},"nodeType":"YulFunctionCall","src":"3946:79:20"},"nodeType":"YulExpressionStatement","src":"3946:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:20"},"nodeType":"YulFunctionCall","src":"3915:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:20"},"nodeType":"YulFunctionCall","src":"3911:32:20"},"nodeType":"YulIf","src":"3908:119:20"},{"nodeType":"YulBlock","src":"4037:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:20"},"nodeType":"YulFunctionCall","src":"4112:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:20"},"nodeType":"YulFunctionCall","src":"4091:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:20"}]}]},{"nodeType":"YulBlock","src":"4164:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:20"},"nodeType":"YulFunctionCall","src":"4240:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:20"},"nodeType":"YulFunctionCall","src":"4219:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:20"}]}]},{"nodeType":"YulBlock","src":"4292:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:20","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:20"},"nodeType":"YulFunctionCall","src":"4368:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:20"},"nodeType":"YulFunctionCall","src":"4347:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:20","type":""}],"src":"3798:619:20"},{"body":{"nodeType":"YulBlock","src":"4466:43:20","statements":[{"nodeType":"YulAssignment","src":"4476:27:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:20"},"nodeType":"YulFunctionCall","src":"4487:16:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:20"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:20","type":""}],"src":"4423:86:20"},{"body":{"nodeType":"YulBlock","src":"4576:51:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:20"},"nodeType":"YulFunctionCall","src":"4598:22:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:20"},"nodeType":"YulFunctionCall","src":"4586:35:20"},"nodeType":"YulExpressionStatement","src":"4586:35:20"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:20","type":""}],"src":"4515:112:20"},{"body":{"nodeType":"YulBlock","src":"4727:120:20","statements":[{"nodeType":"YulAssignment","src":"4737:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:20"},"nodeType":"YulFunctionCall","src":"4745:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:20"},"nodeType":"YulFunctionCall","src":"4822:17:20"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:20"},"nodeType":"YulFunctionCall","src":"4773:67:20"},"nodeType":"YulExpressionStatement","src":"4773:67:20"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:20","type":""}],"src":"4633:214:20"},{"body":{"nodeType":"YulBlock","src":"4898:32:20","statements":[{"nodeType":"YulAssignment","src":"4908:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"4919:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4908:7:20"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4880:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4890:7:20","type":""}],"src":"4853:77:20"},{"body":{"nodeType":"YulBlock","src":"5001:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5018:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5041:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5023:17:20"},"nodeType":"YulFunctionCall","src":"5023:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5011:6:20"},"nodeType":"YulFunctionCall","src":"5011:37:20"},"nodeType":"YulExpressionStatement","src":"5011:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4989:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4996:3:20","type":""}],"src":"4936:118:20"},{"body":{"nodeType":"YulBlock","src":"5158:124:20","statements":[{"nodeType":"YulAssignment","src":"5168:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5180:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5191:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5176:3:20"},"nodeType":"YulFunctionCall","src":"5176:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5168:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5248:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5261:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"5272:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5257:3:20"},"nodeType":"YulFunctionCall","src":"5257:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5204:43:20"},"nodeType":"YulFunctionCall","src":"5204:71:20"},"nodeType":"YulExpressionStatement","src":"5204:71:20"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5130:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5142:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5153:4:20","type":""}],"src":"5060:222:20"},{"body":{"nodeType":"YulBlock","src":"5354:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:20"},"nodeType":"YulFunctionCall","src":"5402:79:20"},"nodeType":"YulExpressionStatement","src":"5402:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:20"},"nodeType":"YulFunctionCall","src":"5371:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:20"},"nodeType":"YulFunctionCall","src":"5367:32:20"},"nodeType":"YulIf","src":"5364:119:20"},{"nodeType":"YulBlock","src":"5493:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5537:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5572:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5583:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5568:3:20"},"nodeType":"YulFunctionCall","src":"5568:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5592:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5547:20:20"},"nodeType":"YulFunctionCall","src":"5547:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:20","type":""}],"src":"5288:329:20"},{"body":{"nodeType":"YulBlock","src":"5689:263:20","statements":[{"body":{"nodeType":"YulBlock","src":"5735:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5737:77:20"},"nodeType":"YulFunctionCall","src":"5737:79:20"},"nodeType":"YulExpressionStatement","src":"5737:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5710:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"5719:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5706:3:20"},"nodeType":"YulFunctionCall","src":"5706:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"5731:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5702:3:20"},"nodeType":"YulFunctionCall","src":"5702:32:20"},"nodeType":"YulIf","src":"5699:119:20"},{"nodeType":"YulBlock","src":"5828:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"5843:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"5857:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5847:6:20","type":""}]},{"nodeType":"YulAssignment","src":"5872:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5907:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"5918:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5903:3:20"},"nodeType":"YulFunctionCall","src":"5903:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5927:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5882:20:20"},"nodeType":"YulFunctionCall","src":"5882:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5872:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5659:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5670:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5682:6:20","type":""}],"src":"5623:329:20"},{"body":{"nodeType":"YulBlock","src":"6002:105:20","statements":[{"nodeType":"YulAssignment","src":"6012:89:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6027:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"6034:66:20","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6023:3:20"},"nodeType":"YulFunctionCall","src":"6023:78:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6012:7:20"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5984:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5994:7:20","type":""}],"src":"5958:149:20"},{"body":{"nodeType":"YulBlock","src":"6176:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6193:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6215:5:20"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"6198:16:20"},"nodeType":"YulFunctionCall","src":"6198:23:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6186:6:20"},"nodeType":"YulFunctionCall","src":"6186:36:20"},"nodeType":"YulExpressionStatement","src":"6186:36:20"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6164:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6171:3:20","type":""}],"src":"6113:115:20"},{"body":{"nodeType":"YulBlock","src":"6299:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6316:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6339:5:20"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6321:17:20"},"nodeType":"YulFunctionCall","src":"6321:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6309:6:20"},"nodeType":"YulFunctionCall","src":"6309:37:20"},"nodeType":"YulExpressionStatement","src":"6309:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6287:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6294:3:20","type":""}],"src":"6234:118:20"},{"body":{"nodeType":"YulBlock","src":"6432:40:20","statements":[{"nodeType":"YulAssignment","src":"6443:22:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6459:5:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6453:5:20"},"nodeType":"YulFunctionCall","src":"6453:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6443:6:20"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6425:6:20","type":""}],"src":"6358:114:20"},{"body":{"nodeType":"YulBlock","src":"6589:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6606:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"6611:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6599:6:20"},"nodeType":"YulFunctionCall","src":"6599:19:20"},"nodeType":"YulExpressionStatement","src":"6599:19:20"},{"nodeType":"YulAssignment","src":"6627:29:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6646:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6651:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6642:3:20"},"nodeType":"YulFunctionCall","src":"6642:14:20"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6627:11:20"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6561:3:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"6566:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6577:11:20","type":""}],"src":"6478:184:20"},{"body":{"nodeType":"YulBlock","src":"6740:60:20","statements":[{"nodeType":"YulAssignment","src":"6750:11:20","value":{"name":"ptr","nodeType":"YulIdentifier","src":"6758:3:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6750:4:20"}]},{"nodeType":"YulAssignment","src":"6771:22:20","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6783:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"6788:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6779:3:20"},"nodeType":"YulFunctionCall","src":"6779:14:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"6771:4:20"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6727:3:20","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"6735:4:20","type":""}],"src":"6668:132:20"},{"body":{"nodeType":"YulBlock","src":"6861:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6878:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6901:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6883:17:20"},"nodeType":"YulFunctionCall","src":"6883:24:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6871:6:20"},"nodeType":"YulFunctionCall","src":"6871:37:20"},"nodeType":"YulExpressionStatement","src":"6871:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6849:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6856:3:20","type":""}],"src":"6806:108:20"},{"body":{"nodeType":"YulBlock","src":"7000:99:20","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7044:6:20"},{"name":"pos","nodeType":"YulIdentifier","src":"7052:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7010:33:20"},"nodeType":"YulFunctionCall","src":"7010:46:20"},"nodeType":"YulExpressionStatement","src":"7010:46:20"},{"nodeType":"YulAssignment","src":"7065:28:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7083:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7088:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7079:3:20"},"nodeType":"YulFunctionCall","src":"7079:14:20"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"7065:10:20"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"6973:6:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6981:3:20","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"6989:10:20","type":""}],"src":"6920:179:20"},{"body":{"nodeType":"YulBlock","src":"7180:38:20","statements":[{"nodeType":"YulAssignment","src":"7190:22:20","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7202:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"7207:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7198:3:20"},"nodeType":"YulFunctionCall","src":"7198:14:20"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"7190:4:20"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7167:3:20","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"7175:4:20","type":""}],"src":"7105:113:20"},{"body":{"nodeType":"YulBlock","src":"7378:608:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7388:68:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7450:5:20"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7402:47:20"},"nodeType":"YulFunctionCall","src":"7402:54:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7392:6:20","type":""}]},{"nodeType":"YulAssignment","src":"7465:93:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7546:3:20"},{"name":"length","nodeType":"YulIdentifier","src":"7551:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7472:73:20"},"nodeType":"YulFunctionCall","src":"7472:86:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7465:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"7567:71:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7632:5:20"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7582:49:20"},"nodeType":"YulFunctionCall","src":"7582:56:20"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"7571:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7647:21:20","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"7661:7:20"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"7651:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"7737:224:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7751:34:20","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7778:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7772:5:20"},"nodeType":"YulFunctionCall","src":"7772:13:20"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"7755:13:20","type":""}]},{"nodeType":"YulAssignment","src":"7798:70:20","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"7849:13:20"},{"name":"pos","nodeType":"YulIdentifier","src":"7864:3:20"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"7805:43:20"},"nodeType":"YulFunctionCall","src":"7805:63:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7798:3:20"}]},{"nodeType":"YulAssignment","src":"7881:70:20","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7944:6:20"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7891:52:20"},"nodeType":"YulFunctionCall","src":"7891:60:20"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7881:6:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7699:1:20"},{"name":"length","nodeType":"YulIdentifier","src":"7702:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7696:2:20"},"nodeType":"YulFunctionCall","src":"7696:13:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7710:18:20","statements":[{"nodeType":"YulAssignment","src":"7712:14:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7721:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"7724:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7717:3:20"},"nodeType":"YulFunctionCall","src":"7717:9:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7712:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"7681:14:20","statements":[{"nodeType":"YulVariableDeclaration","src":"7683:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"7692:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7687:1:20","type":""}]}]},"src":"7677:284:20"},{"nodeType":"YulAssignment","src":"7970:10:20","value":{"name":"pos","nodeType":"YulIdentifier","src":"7977:3:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7970:3:20"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7357:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7364:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7373:3:20","type":""}],"src":"7254:732:20"},{"body":{"nodeType":"YulBlock","src":"8346:861:20","statements":[{"nodeType":"YulAssignment","src":"8356:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8368:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8379:3:20","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8364:3:20"},"nodeType":"YulFunctionCall","src":"8364:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8356:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8435:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8448:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8459:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8444:3:20"},"nodeType":"YulFunctionCall","src":"8444:17:20"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"8393:41:20"},"nodeType":"YulFunctionCall","src":"8393:69:20"},"nodeType":"YulExpressionStatement","src":"8393:69:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8483:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8494:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8479:3:20"},"nodeType":"YulFunctionCall","src":"8479:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8503:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8509:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8499:3:20"},"nodeType":"YulFunctionCall","src":"8499:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8472:6:20"},"nodeType":"YulFunctionCall","src":"8472:48:20"},"nodeType":"YulExpressionStatement","src":"8472:48:20"},{"nodeType":"YulAssignment","src":"8529:86:20","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8601:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"8610:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8537:63:20"},"nodeType":"YulFunctionCall","src":"8537:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8529:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8636:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8647:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8632:3:20"},"nodeType":"YulFunctionCall","src":"8632:18:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8656:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"8662:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8652:3:20"},"nodeType":"YulFunctionCall","src":"8652:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8625:6:20"},"nodeType":"YulFunctionCall","src":"8625:48:20"},"nodeType":"YulExpressionStatement","src":"8625:48:20"},{"nodeType":"YulAssignment","src":"8682:86:20","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8754:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"8763:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8690:63:20"},"nodeType":"YulFunctionCall","src":"8690:78:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8682:4:20"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"8822:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8835:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8846:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8831:3:20"},"nodeType":"YulFunctionCall","src":"8831:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8778:43:20"},"nodeType":"YulFunctionCall","src":"8778:72:20"},"nodeType":"YulExpressionStatement","src":"8778:72:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"8904:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8917:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"8928:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8913:3:20"},"nodeType":"YulFunctionCall","src":"8913:19:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8860:43:20"},"nodeType":"YulFunctionCall","src":"8860:73:20"},"nodeType":"YulExpressionStatement","src":"8860:73:20"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"8987:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9000:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9011:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8996:3:20"},"nodeType":"YulFunctionCall","src":"8996:19:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"8943:43:20"},"nodeType":"YulFunctionCall","src":"8943:73:20"},"nodeType":"YulExpressionStatement","src":"8943:73:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9037:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9048:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9033:3:20"},"nodeType":"YulFunctionCall","src":"9033:19:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9058:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"9064:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9054:3:20"},"nodeType":"YulFunctionCall","src":"9054:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9026:6:20"},"nodeType":"YulFunctionCall","src":"9026:49:20"},"nodeType":"YulExpressionStatement","src":"9026:49:20"},{"nodeType":"YulAssignment","src":"9084:116:20","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"9186:6:20"},{"name":"tail","nodeType":"YulIdentifier","src":"9195:4:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9092:93:20"},"nodeType":"YulFunctionCall","src":"9092:108:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9084:4:20"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8270:9:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8282:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8290:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8298:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8306:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8314:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8322:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8330:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8341:4:20","type":""}],"src":"7992:1215:20"},{"body":{"nodeType":"YulBlock","src":"9311:124:20","statements":[{"nodeType":"YulAssignment","src":"9321:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9333:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9344:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9329:3:20"},"nodeType":"YulFunctionCall","src":"9329:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9321:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9401:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9414:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"9425:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9410:3:20"},"nodeType":"YulFunctionCall","src":"9410:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9357:43:20"},"nodeType":"YulFunctionCall","src":"9357:71:20"},"nodeType":"YulExpressionStatement","src":"9357:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9283:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9295:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9306:4:20","type":""}],"src":"9213:222:20"},{"body":{"nodeType":"YulBlock","src":"9530:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9547:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9550:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9540:6:20"},"nodeType":"YulFunctionCall","src":"9540:12:20"},"nodeType":"YulExpressionStatement","src":"9540:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"9441:117:20"},{"body":{"nodeType":"YulBlock","src":"9592:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9609:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9612:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9602:6:20"},"nodeType":"YulFunctionCall","src":"9602:88:20"},"nodeType":"YulExpressionStatement","src":"9602:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9706:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9709:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9699:6:20"},"nodeType":"YulFunctionCall","src":"9699:15:20"},"nodeType":"YulExpressionStatement","src":"9699:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9730:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9733:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9723:6:20"},"nodeType":"YulFunctionCall","src":"9723:15:20"},"nodeType":"YulExpressionStatement","src":"9723:15:20"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"9564:180:20"},{"body":{"nodeType":"YulBlock","src":"9793:238:20","statements":[{"nodeType":"YulVariableDeclaration","src":"9803:58:20","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9825:6:20"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9855:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9833:21:20"},"nodeType":"YulFunctionCall","src":"9833:27:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9821:3:20"},"nodeType":"YulFunctionCall","src":"9821:40:20"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"9807:10:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"9972:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9974:16:20"},"nodeType":"YulFunctionCall","src":"9974:18:20"},"nodeType":"YulExpressionStatement","src":"9974:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9915:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"9927:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9912:2:20"},"nodeType":"YulFunctionCall","src":"9912:34:20"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9951:10:20"},{"name":"memPtr","nodeType":"YulIdentifier","src":"9963:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9948:2:20"},"nodeType":"YulFunctionCall","src":"9948:22:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9909:2:20"},"nodeType":"YulFunctionCall","src":"9909:62:20"},"nodeType":"YulIf","src":"9906:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10010:2:20","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"10014:10:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10003:6:20"},"nodeType":"YulFunctionCall","src":"10003:22:20"},"nodeType":"YulExpressionStatement","src":"10003:22:20"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9779:6:20","type":""},{"name":"size","nodeType":"YulTypedName","src":"9787:4:20","type":""}],"src":"9750:281:20"},{"body":{"nodeType":"YulBlock","src":"10078:88:20","statements":[{"nodeType":"YulAssignment","src":"10088:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"10098:18:20"},"nodeType":"YulFunctionCall","src":"10098:20:20"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10088:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10147:6:20"},{"name":"size","nodeType":"YulIdentifier","src":"10155:4:20"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"10127:19:20"},"nodeType":"YulFunctionCall","src":"10127:33:20"},"nodeType":"YulExpressionStatement","src":"10127:33:20"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"10062:4:20","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"10071:6:20","type":""}],"src":"10037:129:20"},{"body":{"nodeType":"YulBlock","src":"10254:229:20","statements":[{"body":{"nodeType":"YulBlock","src":"10359:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10361:16:20"},"nodeType":"YulFunctionCall","src":"10361:18:20"},"nodeType":"YulExpressionStatement","src":"10361:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10331:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10339:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10328:2:20"},"nodeType":"YulFunctionCall","src":"10328:30:20"},"nodeType":"YulIf","src":"10325:56:20"},{"nodeType":"YulAssignment","src":"10391:25:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10403:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10411:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10399:3:20"},"nodeType":"YulFunctionCall","src":"10399:17:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10391:4:20"}]},{"nodeType":"YulAssignment","src":"10453:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10465:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"10471:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10461:3:20"},"nodeType":"YulFunctionCall","src":"10461:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10453:4:20"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10238:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10249:4:20","type":""}],"src":"10172:311:20"},{"body":{"nodeType":"YulBlock","src":"10578:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10595:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10598:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10588:6:20"},"nodeType":"YulFunctionCall","src":"10588:12:20"},"nodeType":"YulExpressionStatement","src":"10588:12:20"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"10489:117:20"},{"body":{"nodeType":"YulBlock","src":"10731:608:20","statements":[{"nodeType":"YulAssignment","src":"10741:90:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10823:6:20"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10766:56:20"},"nodeType":"YulFunctionCall","src":"10766:64:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10750:15:20"},"nodeType":"YulFunctionCall","src":"10750:81:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10741:5:20"}]},{"nodeType":"YulVariableDeclaration","src":"10840:16:20","value":{"name":"array","nodeType":"YulIdentifier","src":"10851:5:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10844:3:20","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10873:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"10880:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10866:6:20"},"nodeType":"YulFunctionCall","src":"10866:21:20"},"nodeType":"YulExpressionStatement","src":"10866:21:20"},{"nodeType":"YulAssignment","src":"10896:23:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10907:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"10914:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10903:3:20"},"nodeType":"YulFunctionCall","src":"10903:16:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"10896:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"10929:44:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10947:6:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10959:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"10967:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10955:3:20"},"nodeType":"YulFunctionCall","src":"10955:17:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10943:3:20"},"nodeType":"YulFunctionCall","src":"10943:30:20"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"10933:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"11001:103:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"11015:77:20"},"nodeType":"YulFunctionCall","src":"11015:79:20"},"nodeType":"YulExpressionStatement","src":"11015:79:20"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"10988:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"10996:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10985:2:20"},"nodeType":"YulFunctionCall","src":"10985:15:20"},"nodeType":"YulIf","src":"10982:122:20"},{"body":{"nodeType":"YulBlock","src":"11189:144:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11204:21:20","value":{"name":"src","nodeType":"YulIdentifier","src":"11222:3:20"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"11208:10:20","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11246:3:20"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"11272:10:20"},{"name":"end","nodeType":"YulIdentifier","src":"11284:3:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11251:20:20"},"nodeType":"YulFunctionCall","src":"11251:37:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11239:6:20"},"nodeType":"YulFunctionCall","src":"11239:50:20"},"nodeType":"YulExpressionStatement","src":"11239:50:20"},{"nodeType":"YulAssignment","src":"11302:21:20","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11313:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11318:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11309:3:20"},"nodeType":"YulFunctionCall","src":"11309:14:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11302:3:20"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11142:3:20"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"11147:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11139:2:20"},"nodeType":"YulFunctionCall","src":"11139:15:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11155:25:20","statements":[{"nodeType":"YulAssignment","src":"11157:21:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11168:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"11173:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11164:3:20"},"nodeType":"YulFunctionCall","src":"11164:14:20"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"11157:3:20"}]}]},"pre":{"nodeType":"YulBlock","src":"11117:21:20","statements":[{"nodeType":"YulVariableDeclaration","src":"11119:17:20","value":{"name":"offset","nodeType":"YulIdentifier","src":"11130:6:20"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"11123:3:20","type":""}]}]},"src":"11113:220:20"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10701:6:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"10709:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"10717:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10725:5:20","type":""}],"src":"10629:710:20"},{"body":{"nodeType":"YulBlock","src":"11439:293:20","statements":[{"body":{"nodeType":"YulBlock","src":"11488:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11490:77:20"},"nodeType":"YulFunctionCall","src":"11490:79:20"},"nodeType":"YulExpressionStatement","src":"11490:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11467:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11475:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11463:3:20"},"nodeType":"YulFunctionCall","src":"11463:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"11482:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11459:3:20"},"nodeType":"YulFunctionCall","src":"11459:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11452:6:20"},"nodeType":"YulFunctionCall","src":"11452:35:20"},"nodeType":"YulIf","src":"11449:122:20"},{"nodeType":"YulVariableDeclaration","src":"11580:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11607:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11594:12:20"},"nodeType":"YulFunctionCall","src":"11594:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11584:6:20","type":""}]},{"nodeType":"YulAssignment","src":"11623:103:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11699:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11707:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11695:3:20"},"nodeType":"YulFunctionCall","src":"11695:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"11714:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"11722:3:20"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11632:62:20"},"nodeType":"YulFunctionCall","src":"11632:94:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11623:5:20"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11417:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"11425:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11433:5:20","type":""}],"src":"11362:370:20"},{"body":{"nodeType":"YulBlock","src":"11820:229:20","statements":[{"body":{"nodeType":"YulBlock","src":"11925:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11927:16:20"},"nodeType":"YulFunctionCall","src":"11927:18:20"},"nodeType":"YulExpressionStatement","src":"11927:18:20"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11897:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11905:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11894:2:20"},"nodeType":"YulFunctionCall","src":"11894:30:20"},"nodeType":"YulIf","src":"11891:56:20"},{"nodeType":"YulAssignment","src":"11957:25:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11969:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"11977:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11965:3:20"},"nodeType":"YulFunctionCall","src":"11965:17:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11957:4:20"}]},{"nodeType":"YulAssignment","src":"12019:23:20","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"12031:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"12037:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12027:3:20"},"nodeType":"YulFunctionCall","src":"12027:15:20"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"12019:4:20"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"11804:6:20","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"11815:4:20","type":""}],"src":"11738:311:20"},{"body":{"nodeType":"YulBlock","src":"12174:608:20","statements":[{"nodeType":"YulAssignment","src":"12184:90:20","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12266:6:20"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12209:56:20"},"nodeType":"YulFunctionCall","src":"12209:64:20"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"12193:15:20"},"nodeType":"YulFunctionCall","src":"12193:81:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"12184:5:20"}]},{"nodeType":"YulVariableDeclaration","src":"12283:16:20","value":{"name":"array","nodeType":"YulIdentifier","src":"12294:5:20"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"12287:3:20","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12316:5:20"},{"name":"length","nodeType":"YulIdentifier","src":"12323:6:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12309:6:20"},"nodeType":"YulFunctionCall","src":"12309:21:20"},"nodeType":"YulExpressionStatement","src":"12309:21:20"},{"nodeType":"YulAssignment","src":"12339:23:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"12350:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"12357:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12346:3:20"},"nodeType":"YulFunctionCall","src":"12346:16:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"12339:3:20"}]},{"nodeType":"YulVariableDeclaration","src":"12372:44:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12390:6:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12402:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12410:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12398:3:20"},"nodeType":"YulFunctionCall","src":"12398:17:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12386:3:20"},"nodeType":"YulFunctionCall","src":"12386:30:20"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"12376:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"12444:103:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"12458:77:20"},"nodeType":"YulFunctionCall","src":"12458:79:20"},"nodeType":"YulExpressionStatement","src":"12458:79:20"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"12431:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"12439:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12428:2:20"},"nodeType":"YulFunctionCall","src":"12428:15:20"},"nodeType":"YulIf","src":"12425:122:20"},{"body":{"nodeType":"YulBlock","src":"12632:144:20","statements":[{"nodeType":"YulVariableDeclaration","src":"12647:21:20","value":{"name":"src","nodeType":"YulIdentifier","src":"12665:3:20"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"12651:10:20","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12689:3:20"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"12715:10:20"},{"name":"end","nodeType":"YulIdentifier","src":"12727:3:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12694:20:20"},"nodeType":"YulFunctionCall","src":"12694:37:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12682:6:20"},"nodeType":"YulFunctionCall","src":"12682:50:20"},"nodeType":"YulExpressionStatement","src":"12682:50:20"},{"nodeType":"YulAssignment","src":"12745:21:20","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12756:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12761:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12752:3:20"},"nodeType":"YulFunctionCall","src":"12752:14:20"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"12745:3:20"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12585:3:20"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"12590:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12582:2:20"},"nodeType":"YulFunctionCall","src":"12582:15:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12598:25:20","statements":[{"nodeType":"YulAssignment","src":"12600:21:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12611:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"12616:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12607:3:20"},"nodeType":"YulFunctionCall","src":"12607:14:20"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"12600:3:20"}]}]},"pre":{"nodeType":"YulBlock","src":"12560:21:20","statements":[{"nodeType":"YulVariableDeclaration","src":"12562:17:20","value":{"name":"offset","nodeType":"YulIdentifier","src":"12573:6:20"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"12566:3:20","type":""}]}]},"src":"12556:220:20"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12144:6:20","type":""},{"name":"length","nodeType":"YulTypedName","src":"12152:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"12160:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"12168:5:20","type":""}],"src":"12072:710:20"},{"body":{"nodeType":"YulBlock","src":"12882:293:20","statements":[{"body":{"nodeType":"YulBlock","src":"12931:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"12933:77:20"},"nodeType":"YulFunctionCall","src":"12933:79:20"},"nodeType":"YulExpressionStatement","src":"12933:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12910:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"12918:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12906:3:20"},"nodeType":"YulFunctionCall","src":"12906:17:20"},{"name":"end","nodeType":"YulIdentifier","src":"12925:3:20"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12902:3:20"},"nodeType":"YulFunctionCall","src":"12902:27:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12895:6:20"},"nodeType":"YulFunctionCall","src":"12895:35:20"},"nodeType":"YulIf","src":"12892:122:20"},{"nodeType":"YulVariableDeclaration","src":"13023:34:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13050:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13037:12:20"},"nodeType":"YulFunctionCall","src":"13037:20:20"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13027:6:20","type":""}]},{"nodeType":"YulAssignment","src":"13066:103:20","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13142:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13150:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13138:3:20"},"nodeType":"YulFunctionCall","src":"13138:17:20"},{"name":"length","nodeType":"YulIdentifier","src":"13157:6:20"},{"name":"end","nodeType":"YulIdentifier","src":"13165:3:20"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13075:62:20"},"nodeType":"YulFunctionCall","src":"13075:94:20"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13066:5:20"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12860:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"12868:3:20","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"12876:5:20","type":""}],"src":"12805:370:20"},{"body":{"nodeType":"YulBlock","src":"13314:761:20","statements":[{"body":{"nodeType":"YulBlock","src":"13360:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13362:77:20"},"nodeType":"YulFunctionCall","src":"13362:79:20"},"nodeType":"YulExpressionStatement","src":"13362:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13335:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"13344:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13331:3:20"},"nodeType":"YulFunctionCall","src":"13331:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"13356:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13327:3:20"},"nodeType":"YulFunctionCall","src":"13327:32:20"},"nodeType":"YulIf","src":"13324:119:20"},{"nodeType":"YulBlock","src":"13453:302:20","statements":[{"nodeType":"YulVariableDeclaration","src":"13468:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13499:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13510:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13495:3:20"},"nodeType":"YulFunctionCall","src":"13495:17:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13482:12:20"},"nodeType":"YulFunctionCall","src":"13482:31:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13472:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"13560:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13562:77:20"},"nodeType":"YulFunctionCall","src":"13562:79:20"},"nodeType":"YulExpressionStatement","src":"13562:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13532:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13540:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13529:2:20"},"nodeType":"YulFunctionCall","src":"13529:30:20"},"nodeType":"YulIf","src":"13526:117:20"},{"nodeType":"YulAssignment","src":"13657:88:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13717:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"13728:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13713:3:20"},"nodeType":"YulFunctionCall","src":"13713:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13737:7:20"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13667:45:20"},"nodeType":"YulFunctionCall","src":"13667:78:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13657:6:20"}]}]},{"nodeType":"YulBlock","src":"13765:303:20","statements":[{"nodeType":"YulVariableDeclaration","src":"13780:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13811:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"13822:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13807:3:20"},"nodeType":"YulFunctionCall","src":"13807:18:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13794:12:20"},"nodeType":"YulFunctionCall","src":"13794:32:20"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13784:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"13873:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13875:77:20"},"nodeType":"YulFunctionCall","src":"13875:79:20"},"nodeType":"YulExpressionStatement","src":"13875:79:20"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13845:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"13853:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13842:2:20"},"nodeType":"YulFunctionCall","src":"13842:30:20"},"nodeType":"YulIf","src":"13839:117:20"},{"nodeType":"YulAssignment","src":"13970:88:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14030:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"14041:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14026:3:20"},"nodeType":"YulFunctionCall","src":"14026:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14050:7:20"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13980:45:20"},"nodeType":"YulFunctionCall","src":"13980:78:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13970:6:20"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13276:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13287:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13299:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13307:6:20","type":""}],"src":"13181:894:20"},{"body":{"nodeType":"YulBlock","src":"14122:77:20","statements":[{"body":{"nodeType":"YulBlock","src":"14177:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14186:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14189:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14179:6:20"},"nodeType":"YulFunctionCall","src":"14179:12:20"},"nodeType":"YulExpressionStatement","src":"14179:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14145:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14168:5:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"14152:15:20"},"nodeType":"YulFunctionCall","src":"14152:22:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14142:2:20"},"nodeType":"YulFunctionCall","src":"14142:33:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14135:6:20"},"nodeType":"YulFunctionCall","src":"14135:41:20"},"nodeType":"YulIf","src":"14132:61:20"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14115:5:20","type":""}],"src":"14081:118:20"},{"body":{"nodeType":"YulBlock","src":"14255:85:20","statements":[{"nodeType":"YulAssignment","src":"14265:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14287:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14274:12:20"},"nodeType":"YulFunctionCall","src":"14274:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14265:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14328:5:20"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"14303:24:20"},"nodeType":"YulFunctionCall","src":"14303:31:20"},"nodeType":"YulExpressionStatement","src":"14303:31:20"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14233:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"14241:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14249:5:20","type":""}],"src":"14205:135:20"},{"body":{"nodeType":"YulBlock","src":"14389:79:20","statements":[{"body":{"nodeType":"YulBlock","src":"14446:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14455:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14458:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14448:6:20"},"nodeType":"YulFunctionCall","src":"14448:12:20"},"nodeType":"YulExpressionStatement","src":"14448:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14412:5:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14437:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"14419:17:20"},"nodeType":"YulFunctionCall","src":"14419:24:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14409:2:20"},"nodeType":"YulFunctionCall","src":"14409:35:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14402:6:20"},"nodeType":"YulFunctionCall","src":"14402:43:20"},"nodeType":"YulIf","src":"14399:63:20"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14382:5:20","type":""}],"src":"14346:122:20"},{"body":{"nodeType":"YulBlock","src":"14526:87:20","statements":[{"nodeType":"YulAssignment","src":"14536:29:20","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14558:6:20"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14545:12:20"},"nodeType":"YulFunctionCall","src":"14545:20:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14536:5:20"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14601:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"14574:26:20"},"nodeType":"YulFunctionCall","src":"14574:33:20"},"nodeType":"YulExpressionStatement","src":"14574:33:20"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14504:6:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"14512:3:20","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14520:5:20","type":""}],"src":"14474:139:20"},{"body":{"nodeType":"YulBlock","src":"14785:1033:20","statements":[{"body":{"nodeType":"YulBlock","src":"14832:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14834:77:20"},"nodeType":"YulFunctionCall","src":"14834:79:20"},"nodeType":"YulExpressionStatement","src":"14834:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14806:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"14815:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14802:3:20"},"nodeType":"YulFunctionCall","src":"14802:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"14827:3:20","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14798:3:20"},"nodeType":"YulFunctionCall","src":"14798:33:20"},"nodeType":"YulIf","src":"14795:120:20"},{"nodeType":"YulBlock","src":"14925:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"14940:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"14954:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14944:6:20","type":""}]},{"nodeType":"YulAssignment","src":"14969:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15004:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"15015:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15000:3:20"},"nodeType":"YulFunctionCall","src":"15000:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15024:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14979:20:20"},"nodeType":"YulFunctionCall","src":"14979:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14969:6:20"}]}]},{"nodeType":"YulBlock","src":"15052:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15067:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"15081:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15071:6:20","type":""}]},{"nodeType":"YulAssignment","src":"15097:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15132:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"15143:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15128:3:20"},"nodeType":"YulFunctionCall","src":"15128:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15152:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15107:20:20"},"nodeType":"YulFunctionCall","src":"15107:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15097:6:20"}]}]},{"nodeType":"YulBlock","src":"15180:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15195:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"15209:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15199:6:20","type":""}]},{"nodeType":"YulAssignment","src":"15225:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15260:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"15271:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15256:3:20"},"nodeType":"YulFunctionCall","src":"15256:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15280:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15235:20:20"},"nodeType":"YulFunctionCall","src":"15235:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"15225:6:20"}]}]},{"nodeType":"YulBlock","src":"15308:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15323:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"15337:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15327:6:20","type":""}]},{"nodeType":"YulAssignment","src":"15353:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15388:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"15399:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15384:3:20"},"nodeType":"YulFunctionCall","src":"15384:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15408:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15363:20:20"},"nodeType":"YulFunctionCall","src":"15363:53:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15353:6:20"}]}]},{"nodeType":"YulBlock","src":"15436:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15451:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"15465:3:20","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15455:6:20","type":""}]},{"nodeType":"YulAssignment","src":"15482:61:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15515:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"15526:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15511:3:20"},"nodeType":"YulFunctionCall","src":"15511:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15535:7:20"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"15492:18:20"},"nodeType":"YulFunctionCall","src":"15492:51:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"15482:6:20"}]}]},{"nodeType":"YulBlock","src":"15563:119:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15578:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"15592:3:20","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15582:6:20","type":""}]},{"nodeType":"YulAssignment","src":"15609:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15644:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"15655:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15640:3:20"},"nodeType":"YulFunctionCall","src":"15640:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15664:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"15619:20:20"},"nodeType":"YulFunctionCall","src":"15619:53:20"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"15609:6:20"}]}]},{"nodeType":"YulBlock","src":"15692:119:20","statements":[{"nodeType":"YulVariableDeclaration","src":"15707:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"15721:3:20","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15711:6:20","type":""}]},{"nodeType":"YulAssignment","src":"15738:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15773:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"15784:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15769:3:20"},"nodeType":"YulFunctionCall","src":"15769:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15793:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"15748:20:20"},"nodeType":"YulFunctionCall","src":"15748:53:20"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"15738:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14707:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14718:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14730:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14738:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14746:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14754:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"14762:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"14770:6:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"14778:6:20","type":""}],"src":"14619:1199:20"},{"body":{"nodeType":"YulBlock","src":"15907:391:20","statements":[{"body":{"nodeType":"YulBlock","src":"15953:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15955:77:20"},"nodeType":"YulFunctionCall","src":"15955:79:20"},"nodeType":"YulExpressionStatement","src":"15955:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15928:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"15937:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15924:3:20"},"nodeType":"YulFunctionCall","src":"15924:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"15949:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15920:3:20"},"nodeType":"YulFunctionCall","src":"15920:32:20"},"nodeType":"YulIf","src":"15917:119:20"},{"nodeType":"YulBlock","src":"16046:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16061:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16075:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16065:6:20","type":""}]},{"nodeType":"YulAssignment","src":"16090:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16125:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"16136:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16121:3:20"},"nodeType":"YulFunctionCall","src":"16121:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16145:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16100:20:20"},"nodeType":"YulFunctionCall","src":"16100:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16090:6:20"}]}]},{"nodeType":"YulBlock","src":"16173:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16188:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16202:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16192:6:20","type":""}]},{"nodeType":"YulAssignment","src":"16218:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16253:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"16264:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16249:3:20"},"nodeType":"YulFunctionCall","src":"16249:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16273:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16228:20:20"},"nodeType":"YulFunctionCall","src":"16228:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16218:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15869:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15880:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15892:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15900:6:20","type":""}],"src":"15824:474:20"},{"body":{"nodeType":"YulBlock","src":"16504:1291:20","statements":[{"body":{"nodeType":"YulBlock","src":"16551:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16553:77:20"},"nodeType":"YulFunctionCall","src":"16553:79:20"},"nodeType":"YulExpressionStatement","src":"16553:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16525:7:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"16534:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16521:3:20"},"nodeType":"YulFunctionCall","src":"16521:23:20"},{"kind":"number","nodeType":"YulLiteral","src":"16546:3:20","type":"","value":"288"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16517:3:20"},"nodeType":"YulFunctionCall","src":"16517:33:20"},"nodeType":"YulIf","src":"16514:120:20"},{"nodeType":"YulBlock","src":"16644:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16659:15:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16673:1:20","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16663:6:20","type":""}]},{"nodeType":"YulAssignment","src":"16688:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16723:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"16734:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16719:3:20"},"nodeType":"YulFunctionCall","src":"16719:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16743:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16698:20:20"},"nodeType":"YulFunctionCall","src":"16698:53:20"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16688:6:20"}]}]},{"nodeType":"YulBlock","src":"16771:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16786:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16800:2:20","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16790:6:20","type":""}]},{"nodeType":"YulAssignment","src":"16816:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16851:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"16862:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16847:3:20"},"nodeType":"YulFunctionCall","src":"16847:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16871:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16826:20:20"},"nodeType":"YulFunctionCall","src":"16826:53:20"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16816:6:20"}]}]},{"nodeType":"YulBlock","src":"16899:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"16914:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"16928:2:20","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16918:6:20","type":""}]},{"nodeType":"YulAssignment","src":"16944:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16979:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"16990:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16975:3:20"},"nodeType":"YulFunctionCall","src":"16975:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16999:7:20"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16954:20:20"},"nodeType":"YulFunctionCall","src":"16954:53:20"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16944:6:20"}]}]},{"nodeType":"YulBlock","src":"17027:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17042:16:20","value":{"kind":"number","nodeType":"YulLiteral","src":"17056:2:20","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17046:6:20","type":""}]},{"nodeType":"YulAssignment","src":"17072:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17107:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"17118:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17103:3:20"},"nodeType":"YulFunctionCall","src":"17103:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17127:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17082:20:20"},"nodeType":"YulFunctionCall","src":"17082:53:20"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"17072:6:20"}]}]},{"nodeType":"YulBlock","src":"17155:119:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17170:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"17184:3:20","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17174:6:20","type":""}]},{"nodeType":"YulAssignment","src":"17201:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17236:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"17247:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17232:3:20"},"nodeType":"YulFunctionCall","src":"17232:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17256:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17211:20:20"},"nodeType":"YulFunctionCall","src":"17211:53:20"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"17201:6:20"}]}]},{"nodeType":"YulBlock","src":"17284:119:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17299:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"17313:3:20","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17303:6:20","type":""}]},{"nodeType":"YulAssignment","src":"17330:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17365:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"17376:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17361:3:20"},"nodeType":"YulFunctionCall","src":"17361:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17385:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17340:20:20"},"nodeType":"YulFunctionCall","src":"17340:53:20"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"17330:6:20"}]}]},{"nodeType":"YulBlock","src":"17413:117:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17428:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"17442:3:20","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17432:6:20","type":""}]},{"nodeType":"YulAssignment","src":"17459:61:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17492:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"17503:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17488:3:20"},"nodeType":"YulFunctionCall","src":"17488:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17512:7:20"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"17469:18:20"},"nodeType":"YulFunctionCall","src":"17469:51:20"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"17459:6:20"}]}]},{"nodeType":"YulBlock","src":"17540:119:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17555:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"17569:3:20","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17559:6:20","type":""}]},{"nodeType":"YulAssignment","src":"17586:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17621:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"17632:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17617:3:20"},"nodeType":"YulFunctionCall","src":"17617:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17641:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"17596:20:20"},"nodeType":"YulFunctionCall","src":"17596:53:20"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"17586:6:20"}]}]},{"nodeType":"YulBlock","src":"17669:119:20","statements":[{"nodeType":"YulVariableDeclaration","src":"17684:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"17698:3:20","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17688:6:20","type":""}]},{"nodeType":"YulAssignment","src":"17715:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17750:9:20"},{"name":"offset","nodeType":"YulIdentifier","src":"17761:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17746:3:20"},"nodeType":"YulFunctionCall","src":"17746:22:20"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17770:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"17725:20:20"},"nodeType":"YulFunctionCall","src":"17725:53:20"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"17715:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16410:9:20","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16421:7:20","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16433:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16441:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16449:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16457:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16465:6:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"16473:6:20","type":""},{"name":"value6","nodeType":"YulTypedName","src":"16481:6:20","type":""},{"name":"value7","nodeType":"YulTypedName","src":"16489:6:20","type":""},{"name":"value8","nodeType":"YulTypedName","src":"16497:6:20","type":""}],"src":"16304:1491:20"},{"body":{"nodeType":"YulBlock","src":"17829:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17846:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17849:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17839:6:20"},"nodeType":"YulFunctionCall","src":"17839:88:20"},"nodeType":"YulExpressionStatement","src":"17839:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17943:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17946:4:20","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17936:6:20"},"nodeType":"YulFunctionCall","src":"17936:15:20"},"nodeType":"YulExpressionStatement","src":"17936:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17967:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17970:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17960:6:20"},"nodeType":"YulFunctionCall","src":"17960:15:20"},"nodeType":"YulExpressionStatement","src":"17960:15:20"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"17801:180:20"},{"body":{"nodeType":"YulBlock","src":"18038:269:20","statements":[{"nodeType":"YulAssignment","src":"18048:22:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18062:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"18068:1:20","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18058:3:20"},"nodeType":"YulFunctionCall","src":"18058:12:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18048:6:20"}]},{"nodeType":"YulVariableDeclaration","src":"18079:38:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18109:4:20"},{"kind":"number","nodeType":"YulLiteral","src":"18115:1:20","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18105:3:20"},"nodeType":"YulFunctionCall","src":"18105:12:20"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"18083:18:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"18156:51:20","statements":[{"nodeType":"YulAssignment","src":"18170:27:20","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18184:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"18192:4:20","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18180:3:20"},"nodeType":"YulFunctionCall","src":"18180:17:20"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"18170:6:20"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18136:18:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18129:6:20"},"nodeType":"YulFunctionCall","src":"18129:26:20"},"nodeType":"YulIf","src":"18126:81:20"},{"body":{"nodeType":"YulBlock","src":"18259:42:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"18273:16:20"},"nodeType":"YulFunctionCall","src":"18273:18:20"},"nodeType":"YulExpressionStatement","src":"18273:18:20"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"18223:18:20"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18246:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"18254:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18243:2:20"},"nodeType":"YulFunctionCall","src":"18243:14:20"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18220:2:20"},"nodeType":"YulFunctionCall","src":"18220:38:20"},"nodeType":"YulIf","src":"18217:84:20"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18022:4:20","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"18031:6:20","type":""}],"src":"17987:320:20"},{"body":{"nodeType":"YulBlock","src":"18341:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18358:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18361:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18351:6:20"},"nodeType":"YulFunctionCall","src":"18351:88:20"},"nodeType":"YulExpressionStatement","src":"18351:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18455:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18458:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18448:6:20"},"nodeType":"YulFunctionCall","src":"18448:15:20"},"nodeType":"YulExpressionStatement","src":"18448:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18479:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18482:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18472:6:20"},"nodeType":"YulFunctionCall","src":"18472:15:20"},"nodeType":"YulExpressionStatement","src":"18472:15:20"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"18313:180:20"},{"body":{"nodeType":"YulBlock","src":"18543:147:20","statements":[{"nodeType":"YulAssignment","src":"18553:25:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18576:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18558:17:20"},"nodeType":"YulFunctionCall","src":"18558:20:20"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18553:1:20"}]},{"nodeType":"YulAssignment","src":"18587:25:20","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18610:1:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18592:17:20"},"nodeType":"YulFunctionCall","src":"18592:20:20"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18587:1:20"}]},{"nodeType":"YulAssignment","src":"18621:16:20","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18632:1:20"},{"name":"y","nodeType":"YulIdentifier","src":"18635:1:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18628:3:20"},"nodeType":"YulFunctionCall","src":"18628:9:20"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18621:3:20"}]},{"body":{"nodeType":"YulBlock","src":"18661:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18663:16:20"},"nodeType":"YulFunctionCall","src":"18663:18:20"},"nodeType":"YulExpressionStatement","src":"18663:18:20"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18653:1:20"},{"name":"sum","nodeType":"YulIdentifier","src":"18656:3:20"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18650:2:20"},"nodeType":"YulFunctionCall","src":"18650:10:20"},"nodeType":"YulIf","src":"18647:36:20"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18530:1:20","type":""},{"name":"y","nodeType":"YulTypedName","src":"18533:1:20","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18539:3:20","type":""}],"src":"18499:191:20"},{"body":{"nodeType":"YulBlock","src":"18802:127:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18824:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"18832:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18820:3:20"},"nodeType":"YulFunctionCall","src":"18820:14:20"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"18836:34:20","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18813:6:20"},"nodeType":"YulFunctionCall","src":"18813:58:20"},"nodeType":"YulExpressionStatement","src":"18813:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18892:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"18900:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18888:3:20"},"nodeType":"YulFunctionCall","src":"18888:15:20"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"18905:16:20","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18881:6:20"},"nodeType":"YulFunctionCall","src":"18881:41:20"},"nodeType":"YulExpressionStatement","src":"18881:41:20"}]},"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18794:6:20","type":""}],"src":"18696:233:20"},{"body":{"nodeType":"YulBlock","src":"19081:220:20","statements":[{"nodeType":"YulAssignment","src":"19091:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19157:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19162:2:20","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19098:58:20"},"nodeType":"YulFunctionCall","src":"19098:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19091:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19263:3:20"}],"functionName":{"name":"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","nodeType":"YulIdentifier","src":"19174:88:20"},"nodeType":"YulFunctionCall","src":"19174:93:20"},"nodeType":"YulExpressionStatement","src":"19174:93:20"},{"nodeType":"YulAssignment","src":"19276:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19287:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"19292:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19283:3:20"},"nodeType":"YulFunctionCall","src":"19283:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19276:3:20"}]}]},"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19069:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19077:3:20","type":""}],"src":"18935:366:20"},{"body":{"nodeType":"YulBlock","src":"19478:248:20","statements":[{"nodeType":"YulAssignment","src":"19488:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19500:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19511:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19496:3:20"},"nodeType":"YulFunctionCall","src":"19496:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19488:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19535:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"19546:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19531:3:20"},"nodeType":"YulFunctionCall","src":"19531:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19554:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"19560:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19550:3:20"},"nodeType":"YulFunctionCall","src":"19550:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19524:6:20"},"nodeType":"YulFunctionCall","src":"19524:47:20"},"nodeType":"YulExpressionStatement","src":"19524:47:20"},{"nodeType":"YulAssignment","src":"19580:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19714:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19588:124:20"},"nodeType":"YulFunctionCall","src":"19588:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19580:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19458:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19473:4:20","type":""}],"src":"19307:419:20"},{"body":{"nodeType":"YulBlock","src":"19785:32:20","statements":[{"nodeType":"YulAssignment","src":"19795:16:20","value":{"name":"value","nodeType":"YulIdentifier","src":"19806:5:20"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"19795:7:20"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19767:5:20","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"19777:7:20","type":""}],"src":"19732:85:20"},{"body":{"nodeType":"YulBlock","src":"19855:28:20","statements":[{"nodeType":"YulAssignment","src":"19865:12:20","value":{"name":"value","nodeType":"YulIdentifier","src":"19872:5:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19865:3:20"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19841:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19851:3:20","type":""}],"src":"19823:60:20"},{"body":{"nodeType":"YulBlock","src":"19955:88:20","statements":[{"nodeType":"YulAssignment","src":"19965:72:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20029:5:20"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"20003:25:20"},"nodeType":"YulFunctionCall","src":"20003:32:20"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"19994:8:20"},"nodeType":"YulFunctionCall","src":"19994:42:20"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"19978:15:20"},"nodeType":"YulFunctionCall","src":"19978:59:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"19965:9:20"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19935:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"19945:9:20","type":""}],"src":"19889:154:20"},{"body":{"nodeType":"YulBlock","src":"20120:72:20","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20137:3:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20179:5:20"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint8","nodeType":"YulIdentifier","src":"20142:36:20"},"nodeType":"YulFunctionCall","src":"20142:43:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20130:6:20"},"nodeType":"YulFunctionCall","src":"20130:56:20"},"nodeType":"YulExpressionStatement","src":"20130:56:20"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20108:5:20","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20115:3:20","type":""}],"src":"20049:143:20"},{"body":{"nodeType":"YulBlock","src":"20302:130:20","statements":[{"nodeType":"YulAssignment","src":"20312:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20324:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20335:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20320:3:20"},"nodeType":"YulFunctionCall","src":"20320:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20312:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20398:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20411:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"20422:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20407:3:20"},"nodeType":"YulFunctionCall","src":"20407:17:20"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"20348:49:20"},"nodeType":"YulFunctionCall","src":"20348:77:20"},"nodeType":"YulExpressionStatement","src":"20348:77:20"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20274:9:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20286:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20297:4:20","type":""}],"src":"20198:234:20"},{"body":{"nodeType":"YulBlock","src":"20544:65:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20566:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"20574:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20562:3:20"},"nodeType":"YulFunctionCall","src":"20562:14:20"},{"hexValue":"4549503731323a20556e696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"20578:23:20","type":"","value":"EIP712: Uninitialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20555:6:20"},"nodeType":"YulFunctionCall","src":"20555:47:20"},"nodeType":"YulExpressionStatement","src":"20555:47:20"}]},"name":"store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20536:6:20","type":""}],"src":"20438:171:20"},{"body":{"nodeType":"YulBlock","src":"20761:220:20","statements":[{"nodeType":"YulAssignment","src":"20771:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20837:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20842:2:20","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20778:58:20"},"nodeType":"YulFunctionCall","src":"20778:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20771:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20943:3:20"}],"functionName":{"name":"store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","nodeType":"YulIdentifier","src":"20854:88:20"},"nodeType":"YulFunctionCall","src":"20854:93:20"},"nodeType":"YulExpressionStatement","src":"20854:93:20"},{"nodeType":"YulAssignment","src":"20956:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20967:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"20972:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20963:3:20"},"nodeType":"YulFunctionCall","src":"20963:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20956:3:20"}]}]},"name":"abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20749:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20757:3:20","type":""}],"src":"20615:366:20"},{"body":{"nodeType":"YulBlock","src":"21158:248:20","statements":[{"nodeType":"YulAssignment","src":"21168:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21180:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21191:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21176:3:20"},"nodeType":"YulFunctionCall","src":"21176:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21168:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21215:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"21226:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21211:3:20"},"nodeType":"YulFunctionCall","src":"21211:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21234:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"21240:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21230:3:20"},"nodeType":"YulFunctionCall","src":"21230:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21204:6:20"},"nodeType":"YulFunctionCall","src":"21204:47:20"},"nodeType":"YulExpressionStatement","src":"21204:47:20"},{"nodeType":"YulAssignment","src":"21260:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21394:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21268:124:20"},"nodeType":"YulFunctionCall","src":"21268:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21260:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21138:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21153:4:20","type":""}],"src":"20987:419:20"},{"body":{"nodeType":"YulBlock","src":"21518:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21540:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21548:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21536:3:20"},"nodeType":"YulFunctionCall","src":"21536:14:20"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"21552:34:20","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21529:6:20"},"nodeType":"YulFunctionCall","src":"21529:58:20"},"nodeType":"YulExpressionStatement","src":"21529:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21608:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"21616:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21604:3:20"},"nodeType":"YulFunctionCall","src":"21604:15:20"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"21621:7:20","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21597:6:20"},"nodeType":"YulFunctionCall","src":"21597:32:20"},"nodeType":"YulExpressionStatement","src":"21597:32:20"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21510:6:20","type":""}],"src":"21412:224:20"},{"body":{"nodeType":"YulBlock","src":"21788:220:20","statements":[{"nodeType":"YulAssignment","src":"21798:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21864:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21869:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21805:58:20"},"nodeType":"YulFunctionCall","src":"21805:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21798:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21970:3:20"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"21881:88:20"},"nodeType":"YulFunctionCall","src":"21881:93:20"},"nodeType":"YulExpressionStatement","src":"21881:93:20"},{"nodeType":"YulAssignment","src":"21983:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21994:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"21999:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21990:3:20"},"nodeType":"YulFunctionCall","src":"21990:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21983:3:20"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21776:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21784:3:20","type":""}],"src":"21642:366:20"},{"body":{"nodeType":"YulBlock","src":"22185:248:20","statements":[{"nodeType":"YulAssignment","src":"22195:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22207:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22218:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22203:3:20"},"nodeType":"YulFunctionCall","src":"22203:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22195:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22242:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"22253:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22238:3:20"},"nodeType":"YulFunctionCall","src":"22238:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22261:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"22267:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22257:3:20"},"nodeType":"YulFunctionCall","src":"22257:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22231:6:20"},"nodeType":"YulFunctionCall","src":"22231:47:20"},"nodeType":"YulExpressionStatement","src":"22231:47:20"},{"nodeType":"YulAssignment","src":"22287:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22421:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22295:124:20"},"nodeType":"YulFunctionCall","src":"22295:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22287:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22165:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22180:4:20","type":""}],"src":"22014:419:20"},{"body":{"nodeType":"YulBlock","src":"22467:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22484:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22487:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22477:6:20"},"nodeType":"YulFunctionCall","src":"22477:88:20"},"nodeType":"YulExpressionStatement","src":"22477:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22581:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22584:4:20","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22574:6:20"},"nodeType":"YulFunctionCall","src":"22574:15:20"},"nodeType":"YulExpressionStatement","src":"22574:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22605:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22608:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22598:6:20"},"nodeType":"YulFunctionCall","src":"22598:15:20"},"nodeType":"YulExpressionStatement","src":"22598:15:20"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22439:180:20"},{"body":{"nodeType":"YulBlock","src":"22731:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22753:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"22761:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22749:3:20"},"nodeType":"YulFunctionCall","src":"22749:14:20"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"22765:31:20","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22742:6:20"},"nodeType":"YulFunctionCall","src":"22742:55:20"},"nodeType":"YulExpressionStatement","src":"22742:55:20"}]},"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22723:6:20","type":""}],"src":"22625:179:20"},{"body":{"nodeType":"YulBlock","src":"22956:220:20","statements":[{"nodeType":"YulAssignment","src":"22966:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23032:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"23037:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22973:58:20"},"nodeType":"YulFunctionCall","src":"22973:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22966:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23138:3:20"}],"functionName":{"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulIdentifier","src":"23049:88:20"},"nodeType":"YulFunctionCall","src":"23049:93:20"},"nodeType":"YulExpressionStatement","src":"23049:93:20"},{"nodeType":"YulAssignment","src":"23151:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23162:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"23167:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23158:3:20"},"nodeType":"YulFunctionCall","src":"23158:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23151:3:20"}]}]},"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22944:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22952:3:20","type":""}],"src":"22810:366:20"},{"body":{"nodeType":"YulBlock","src":"23353:248:20","statements":[{"nodeType":"YulAssignment","src":"23363:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23375:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23386:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23371:3:20"},"nodeType":"YulFunctionCall","src":"23371:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23363:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23410:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23421:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23406:3:20"},"nodeType":"YulFunctionCall","src":"23406:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23429:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"23435:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23425:3:20"},"nodeType":"YulFunctionCall","src":"23425:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23399:6:20"},"nodeType":"YulFunctionCall","src":"23399:47:20"},"nodeType":"YulExpressionStatement","src":"23399:47:20"},{"nodeType":"YulAssignment","src":"23455:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23589:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23463:124:20"},"nodeType":"YulFunctionCall","src":"23463:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23455:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23333:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23348:4:20","type":""}],"src":"23182:419:20"},{"body":{"nodeType":"YulBlock","src":"23845:537:20","statements":[{"nodeType":"YulAssignment","src":"23855:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23867:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23878:3:20","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23863:3:20"},"nodeType":"YulFunctionCall","src":"23863:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23855:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23936:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23949:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"23960:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23945:3:20"},"nodeType":"YulFunctionCall","src":"23945:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23892:43:20"},"nodeType":"YulFunctionCall","src":"23892:71:20"},"nodeType":"YulExpressionStatement","src":"23892:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24017:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24030:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24041:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24026:3:20"},"nodeType":"YulFunctionCall","src":"24026:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23973:43:20"},"nodeType":"YulFunctionCall","src":"23973:72:20"},"nodeType":"YulExpressionStatement","src":"23973:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24099:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24112:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24123:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24108:3:20"},"nodeType":"YulFunctionCall","src":"24108:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24055:43:20"},"nodeType":"YulFunctionCall","src":"24055:72:20"},"nodeType":"YulExpressionStatement","src":"24055:72:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24181:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24194:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24205:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24190:3:20"},"nodeType":"YulFunctionCall","src":"24190:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24137:43:20"},"nodeType":"YulFunctionCall","src":"24137:72:20"},"nodeType":"YulExpressionStatement","src":"24137:72:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24263:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24276:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24287:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24272:3:20"},"nodeType":"YulFunctionCall","src":"24272:19:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24219:43:20"},"nodeType":"YulFunctionCall","src":"24219:73:20"},"nodeType":"YulExpressionStatement","src":"24219:73:20"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"24346:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24359:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"24370:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24355:3:20"},"nodeType":"YulFunctionCall","src":"24355:19:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24302:43:20"},"nodeType":"YulFunctionCall","src":"24302:73:20"},"nodeType":"YulExpressionStatement","src":"24302:73:20"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23777:9:20","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23789:6:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23797:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23805:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23813:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23821:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23829:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23840:4:20","type":""}],"src":"23607:775:20"},{"body":{"nodeType":"YulBlock","src":"24494:74:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24516:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"24524:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24512:3:20"},"nodeType":"YulFunctionCall","src":"24512:14:20"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"24528:32:20","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24505:6:20"},"nodeType":"YulFunctionCall","src":"24505:56:20"},"nodeType":"YulExpressionStatement","src":"24505:56:20"}]},"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24486:6:20","type":""}],"src":"24388:180:20"},{"body":{"nodeType":"YulBlock","src":"24720:220:20","statements":[{"nodeType":"YulAssignment","src":"24730:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24796:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"24801:2:20","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24737:58:20"},"nodeType":"YulFunctionCall","src":"24737:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24730:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24902:3:20"}],"functionName":{"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulIdentifier","src":"24813:88:20"},"nodeType":"YulFunctionCall","src":"24813:93:20"},"nodeType":"YulExpressionStatement","src":"24813:93:20"},{"nodeType":"YulAssignment","src":"24915:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24926:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"24931:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24922:3:20"},"nodeType":"YulFunctionCall","src":"24922:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24915:3:20"}]}]},"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24708:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24716:3:20","type":""}],"src":"24574:366:20"},{"body":{"nodeType":"YulBlock","src":"25117:248:20","statements":[{"nodeType":"YulAssignment","src":"25127:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25139:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25150:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25135:3:20"},"nodeType":"YulFunctionCall","src":"25135:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25127:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25174:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"25185:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25170:3:20"},"nodeType":"YulFunctionCall","src":"25170:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25193:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"25199:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25189:3:20"},"nodeType":"YulFunctionCall","src":"25189:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25163:6:20"},"nodeType":"YulFunctionCall","src":"25163:47:20"},"nodeType":"YulExpressionStatement","src":"25163:47:20"},{"nodeType":"YulAssignment","src":"25219:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25353:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25227:124:20"},"nodeType":"YulFunctionCall","src":"25227:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25219:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25097:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25112:4:20","type":""}],"src":"24946:419:20"},{"body":{"nodeType":"YulBlock","src":"25477:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25499:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"25507:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25495:3:20"},"nodeType":"YulFunctionCall","src":"25495:14:20"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"25511:34:20","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25488:6:20"},"nodeType":"YulFunctionCall","src":"25488:58:20"},"nodeType":"YulExpressionStatement","src":"25488:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25567:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"25575:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25563:3:20"},"nodeType":"YulFunctionCall","src":"25563:15:20"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"25580:8:20","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25556:6:20"},"nodeType":"YulFunctionCall","src":"25556:33:20"},"nodeType":"YulExpressionStatement","src":"25556:33:20"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25469:6:20","type":""}],"src":"25371:225:20"},{"body":{"nodeType":"YulBlock","src":"25748:220:20","statements":[{"nodeType":"YulAssignment","src":"25758:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25824:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"25829:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25765:58:20"},"nodeType":"YulFunctionCall","src":"25765:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25758:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25930:3:20"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"25841:88:20"},"nodeType":"YulFunctionCall","src":"25841:93:20"},"nodeType":"YulExpressionStatement","src":"25841:93:20"},{"nodeType":"YulAssignment","src":"25943:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25954:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"25959:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25950:3:20"},"nodeType":"YulFunctionCall","src":"25950:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25943:3:20"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25736:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25744:3:20","type":""}],"src":"25602:366:20"},{"body":{"nodeType":"YulBlock","src":"26145:248:20","statements":[{"nodeType":"YulAssignment","src":"26155:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26167:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"26178:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26163:3:20"},"nodeType":"YulFunctionCall","src":"26163:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26155:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26202:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"26213:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26198:3:20"},"nodeType":"YulFunctionCall","src":"26198:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26221:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"26227:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26217:3:20"},"nodeType":"YulFunctionCall","src":"26217:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26191:6:20"},"nodeType":"YulFunctionCall","src":"26191:47:20"},"nodeType":"YulExpressionStatement","src":"26191:47:20"},{"nodeType":"YulAssignment","src":"26247:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26381:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26255:124:20"},"nodeType":"YulFunctionCall","src":"26255:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26247:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26125:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26140:4:20","type":""}],"src":"25974:419:20"},{"body":{"nodeType":"YulBlock","src":"26505:117:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26527:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"26535:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26523:3:20"},"nodeType":"YulFunctionCall","src":"26523:14:20"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"26539:34:20","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26516:6:20"},"nodeType":"YulFunctionCall","src":"26516:58:20"},"nodeType":"YulExpressionStatement","src":"26516:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26595:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"26603:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26591:3:20"},"nodeType":"YulFunctionCall","src":"26591:15:20"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"26608:6:20","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26584:6:20"},"nodeType":"YulFunctionCall","src":"26584:31:20"},"nodeType":"YulExpressionStatement","src":"26584:31:20"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26497:6:20","type":""}],"src":"26399:223:20"},{"body":{"nodeType":"YulBlock","src":"26774:220:20","statements":[{"nodeType":"YulAssignment","src":"26784:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26850:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"26855:2:20","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26791:58:20"},"nodeType":"YulFunctionCall","src":"26791:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26784:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26956:3:20"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"26867:88:20"},"nodeType":"YulFunctionCall","src":"26867:93:20"},"nodeType":"YulExpressionStatement","src":"26867:93:20"},{"nodeType":"YulAssignment","src":"26969:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26980:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"26985:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26976:3:20"},"nodeType":"YulFunctionCall","src":"26976:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26969:3:20"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26762:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26770:3:20","type":""}],"src":"26628:366:20"},{"body":{"nodeType":"YulBlock","src":"27171:248:20","statements":[{"nodeType":"YulAssignment","src":"27181:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27193:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27204:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27189:3:20"},"nodeType":"YulFunctionCall","src":"27189:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27181:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27228:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"27239:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27224:3:20"},"nodeType":"YulFunctionCall","src":"27224:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27247:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"27253:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27243:3:20"},"nodeType":"YulFunctionCall","src":"27243:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27217:6:20"},"nodeType":"YulFunctionCall","src":"27217:47:20"},"nodeType":"YulExpressionStatement","src":"27217:47:20"},{"nodeType":"YulAssignment","src":"27273:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27407:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27281:124:20"},"nodeType":"YulFunctionCall","src":"27281:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27273:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27151:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27166:4:20","type":""}],"src":"27000:419:20"},{"body":{"nodeType":"YulBlock","src":"27531:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27553:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"27561:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27549:3:20"},"nodeType":"YulFunctionCall","src":"27549:14:20"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"27565:34:20","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27542:6:20"},"nodeType":"YulFunctionCall","src":"27542:58:20"},"nodeType":"YulExpressionStatement","src":"27542:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27621:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"27629:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27617:3:20"},"nodeType":"YulFunctionCall","src":"27617:15:20"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"27634:4:20","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27610:6:20"},"nodeType":"YulFunctionCall","src":"27610:29:20"},"nodeType":"YulExpressionStatement","src":"27610:29:20"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27523:6:20","type":""}],"src":"27425:221:20"},{"body":{"nodeType":"YulBlock","src":"27798:220:20","statements":[{"nodeType":"YulAssignment","src":"27808:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27874:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"27879:2:20","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27815:58:20"},"nodeType":"YulFunctionCall","src":"27815:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27808:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27980:3:20"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"27891:88:20"},"nodeType":"YulFunctionCall","src":"27891:93:20"},"nodeType":"YulExpressionStatement","src":"27891:93:20"},{"nodeType":"YulAssignment","src":"27993:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28004:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"28009:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28000:3:20"},"nodeType":"YulFunctionCall","src":"28000:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27993:3:20"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27786:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27794:3:20","type":""}],"src":"27652:366:20"},{"body":{"nodeType":"YulBlock","src":"28195:248:20","statements":[{"nodeType":"YulAssignment","src":"28205:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28217:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28228:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28213:3:20"},"nodeType":"YulFunctionCall","src":"28213:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28205:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28252:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"28263:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28248:3:20"},"nodeType":"YulFunctionCall","src":"28248:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28271:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"28277:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28267:3:20"},"nodeType":"YulFunctionCall","src":"28267:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28241:6:20"},"nodeType":"YulFunctionCall","src":"28241:47:20"},"nodeType":"YulExpressionStatement","src":"28241:47:20"},{"nodeType":"YulAssignment","src":"28297:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28431:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28305:124:20"},"nodeType":"YulFunctionCall","src":"28305:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28297:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28175:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28190:4:20","type":""}],"src":"28024:419:20"},{"body":{"nodeType":"YulBlock","src":"28555:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28577:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"28585:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28573:3:20"},"nodeType":"YulFunctionCall","src":"28573:14:20"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"28589:31:20","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28566:6:20"},"nodeType":"YulFunctionCall","src":"28566:55:20"},"nodeType":"YulExpressionStatement","src":"28566:55:20"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28547:6:20","type":""}],"src":"28449:179:20"},{"body":{"nodeType":"YulBlock","src":"28780:220:20","statements":[{"nodeType":"YulAssignment","src":"28790:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28856:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"28861:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28797:58:20"},"nodeType":"YulFunctionCall","src":"28797:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28790:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28962:3:20"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"28873:88:20"},"nodeType":"YulFunctionCall","src":"28873:93:20"},"nodeType":"YulExpressionStatement","src":"28873:93:20"},{"nodeType":"YulAssignment","src":"28975:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28986:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"28991:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28982:3:20"},"nodeType":"YulFunctionCall","src":"28982:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28975:3:20"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28768:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28776:3:20","type":""}],"src":"28634:366:20"},{"body":{"nodeType":"YulBlock","src":"29177:248:20","statements":[{"nodeType":"YulAssignment","src":"29187:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29199:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29210:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29195:3:20"},"nodeType":"YulFunctionCall","src":"29195:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29187:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29234:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"29245:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29230:3:20"},"nodeType":"YulFunctionCall","src":"29230:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29253:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"29259:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29249:3:20"},"nodeType":"YulFunctionCall","src":"29249:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29223:6:20"},"nodeType":"YulFunctionCall","src":"29223:47:20"},"nodeType":"YulExpressionStatement","src":"29223:47:20"},{"nodeType":"YulAssignment","src":"29279:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29413:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29287:124:20"},"nodeType":"YulFunctionCall","src":"29287:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29279:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29157:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29172:4:20","type":""}],"src":"29006:419:20"},{"body":{"nodeType":"YulBlock","src":"29537:118:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29559:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"29567:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29555:3:20"},"nodeType":"YulFunctionCall","src":"29555:14:20"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"29571:34:20","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29548:6:20"},"nodeType":"YulFunctionCall","src":"29548:58:20"},"nodeType":"YulExpressionStatement","src":"29548:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29627:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"29635:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29623:3:20"},"nodeType":"YulFunctionCall","src":"29623:15:20"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"29640:7:20","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29616:6:20"},"nodeType":"YulFunctionCall","src":"29616:32:20"},"nodeType":"YulExpressionStatement","src":"29616:32:20"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29529:6:20","type":""}],"src":"29431:224:20"},{"body":{"nodeType":"YulBlock","src":"29807:220:20","statements":[{"nodeType":"YulAssignment","src":"29817:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29883:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"29888:2:20","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29824:58:20"},"nodeType":"YulFunctionCall","src":"29824:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29817:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29989:3:20"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"29900:88:20"},"nodeType":"YulFunctionCall","src":"29900:93:20"},"nodeType":"YulExpressionStatement","src":"29900:93:20"},{"nodeType":"YulAssignment","src":"30002:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30013:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"30018:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30009:3:20"},"nodeType":"YulFunctionCall","src":"30009:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30002:3:20"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29795:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29803:3:20","type":""}],"src":"29661:366:20"},{"body":{"nodeType":"YulBlock","src":"30204:248:20","statements":[{"nodeType":"YulAssignment","src":"30214:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30226:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30237:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30222:3:20"},"nodeType":"YulFunctionCall","src":"30222:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30214:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30261:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"30272:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30257:3:20"},"nodeType":"YulFunctionCall","src":"30257:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30280:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"30286:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30276:3:20"},"nodeType":"YulFunctionCall","src":"30276:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30250:6:20"},"nodeType":"YulFunctionCall","src":"30250:47:20"},"nodeType":"YulExpressionStatement","src":"30250:47:20"},{"nodeType":"YulAssignment","src":"30306:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30440:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30314:124:20"},"nodeType":"YulFunctionCall","src":"30314:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30306:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30184:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30199:4:20","type":""}],"src":"30033:419:20"},{"body":{"nodeType":"YulBlock","src":"30564:116:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30586:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"30594:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30582:3:20"},"nodeType":"YulFunctionCall","src":"30582:14:20"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"30598:34:20","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30575:6:20"},"nodeType":"YulFunctionCall","src":"30575:58:20"},"nodeType":"YulExpressionStatement","src":"30575:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30654:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"30662:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30650:3:20"},"nodeType":"YulFunctionCall","src":"30650:15:20"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"30667:5:20","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30643:6:20"},"nodeType":"YulFunctionCall","src":"30643:30:20"},"nodeType":"YulExpressionStatement","src":"30643:30:20"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30556:6:20","type":""}],"src":"30458:222:20"},{"body":{"nodeType":"YulBlock","src":"30832:220:20","statements":[{"nodeType":"YulAssignment","src":"30842:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30908:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"30913:2:20","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30849:58:20"},"nodeType":"YulFunctionCall","src":"30849:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30842:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31014:3:20"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"30925:88:20"},"nodeType":"YulFunctionCall","src":"30925:93:20"},"nodeType":"YulExpressionStatement","src":"30925:93:20"},{"nodeType":"YulAssignment","src":"31027:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31038:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"31043:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31034:3:20"},"nodeType":"YulFunctionCall","src":"31034:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31027:3:20"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30820:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30828:3:20","type":""}],"src":"30686:366:20"},{"body":{"nodeType":"YulBlock","src":"31229:248:20","statements":[{"nodeType":"YulAssignment","src":"31239:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31251:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31262:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31247:3:20"},"nodeType":"YulFunctionCall","src":"31247:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31239:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31286:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"31297:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31282:3:20"},"nodeType":"YulFunctionCall","src":"31282:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31305:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"31311:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31301:3:20"},"nodeType":"YulFunctionCall","src":"31301:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31275:6:20"},"nodeType":"YulFunctionCall","src":"31275:47:20"},"nodeType":"YulExpressionStatement","src":"31275:47:20"},{"nodeType":"YulAssignment","src":"31331:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31465:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31339:124:20"},"nodeType":"YulFunctionCall","src":"31339:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31331:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31209:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31224:4:20","type":""}],"src":"31058:419:20"},{"body":{"nodeType":"YulBlock","src":"31589:119:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31611:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"31619:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31607:3:20"},"nodeType":"YulFunctionCall","src":"31607:14:20"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"31623:34:20","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31600:6:20"},"nodeType":"YulFunctionCall","src":"31600:58:20"},"nodeType":"YulExpressionStatement","src":"31600:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31679:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"31687:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31675:3:20"},"nodeType":"YulFunctionCall","src":"31675:15:20"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"31692:8:20","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31668:6:20"},"nodeType":"YulFunctionCall","src":"31668:33:20"},"nodeType":"YulExpressionStatement","src":"31668:33:20"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31581:6:20","type":""}],"src":"31483:225:20"},{"body":{"nodeType":"YulBlock","src":"31860:220:20","statements":[{"nodeType":"YulAssignment","src":"31870:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31936:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"31941:2:20","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31877:58:20"},"nodeType":"YulFunctionCall","src":"31877:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31870:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32042:3:20"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"31953:88:20"},"nodeType":"YulFunctionCall","src":"31953:93:20"},"nodeType":"YulExpressionStatement","src":"31953:93:20"},{"nodeType":"YulAssignment","src":"32055:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32066:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"32071:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32062:3:20"},"nodeType":"YulFunctionCall","src":"32062:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32055:3:20"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31848:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31856:3:20","type":""}],"src":"31714:366:20"},{"body":{"nodeType":"YulBlock","src":"32257:248:20","statements":[{"nodeType":"YulAssignment","src":"32267:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32279:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32290:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32275:3:20"},"nodeType":"YulFunctionCall","src":"32275:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32267:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32314:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"32325:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32310:3:20"},"nodeType":"YulFunctionCall","src":"32310:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32333:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"32339:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32329:3:20"},"nodeType":"YulFunctionCall","src":"32329:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32303:6:20"},"nodeType":"YulFunctionCall","src":"32303:47:20"},"nodeType":"YulExpressionStatement","src":"32303:47:20"},{"nodeType":"YulAssignment","src":"32359:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32493:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32367:124:20"},"nodeType":"YulFunctionCall","src":"32367:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32359:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32237:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32252:4:20","type":""}],"src":"32086:419:20"},{"body":{"nodeType":"YulBlock","src":"32617:76:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32639:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"32647:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32635:3:20"},"nodeType":"YulFunctionCall","src":"32635:14:20"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"32651:34:20","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32628:6:20"},"nodeType":"YulFunctionCall","src":"32628:58:20"},"nodeType":"YulExpressionStatement","src":"32628:58:20"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32609:6:20","type":""}],"src":"32511:182:20"},{"body":{"nodeType":"YulBlock","src":"32845:220:20","statements":[{"nodeType":"YulAssignment","src":"32855:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32921:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"32926:2:20","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32862:58:20"},"nodeType":"YulFunctionCall","src":"32862:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32855:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33027:3:20"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"32938:88:20"},"nodeType":"YulFunctionCall","src":"32938:93:20"},"nodeType":"YulExpressionStatement","src":"32938:93:20"},{"nodeType":"YulAssignment","src":"33040:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33051:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"33056:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33047:3:20"},"nodeType":"YulFunctionCall","src":"33047:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33040:3:20"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32833:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32841:3:20","type":""}],"src":"32699:366:20"},{"body":{"nodeType":"YulBlock","src":"33242:248:20","statements":[{"nodeType":"YulAssignment","src":"33252:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33264:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33275:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33260:3:20"},"nodeType":"YulFunctionCall","src":"33260:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33252:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33299:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"33310:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33295:3:20"},"nodeType":"YulFunctionCall","src":"33295:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33318:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"33324:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33314:3:20"},"nodeType":"YulFunctionCall","src":"33314:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33288:6:20"},"nodeType":"YulFunctionCall","src":"33288:47:20"},"nodeType":"YulExpressionStatement","src":"33288:47:20"},{"nodeType":"YulAssignment","src":"33344:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33478:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33352:124:20"},"nodeType":"YulFunctionCall","src":"33352:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33344:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33222:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33237:4:20","type":""}],"src":"33071:419:20"},{"body":{"nodeType":"YulBlock","src":"33602:75:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33624:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"33632:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33620:3:20"},"nodeType":"YulFunctionCall","src":"33620:14:20"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"33636:33:20","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33613:6:20"},"nodeType":"YulFunctionCall","src":"33613:57:20"},"nodeType":"YulExpressionStatement","src":"33613:57:20"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33594:6:20","type":""}],"src":"33496:181:20"},{"body":{"nodeType":"YulBlock","src":"33829:220:20","statements":[{"nodeType":"YulAssignment","src":"33839:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33905:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"33910:2:20","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33846:58:20"},"nodeType":"YulFunctionCall","src":"33846:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33839:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34011:3:20"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"33922:88:20"},"nodeType":"YulFunctionCall","src":"33922:93:20"},"nodeType":"YulExpressionStatement","src":"33922:93:20"},{"nodeType":"YulAssignment","src":"34024:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34035:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"34040:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34031:3:20"},"nodeType":"YulFunctionCall","src":"34031:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34024:3:20"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33817:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33825:3:20","type":""}],"src":"33683:366:20"},{"body":{"nodeType":"YulBlock","src":"34226:248:20","statements":[{"nodeType":"YulAssignment","src":"34236:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34248:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34259:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34244:3:20"},"nodeType":"YulFunctionCall","src":"34244:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34236:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34283:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"34294:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34279:3:20"},"nodeType":"YulFunctionCall","src":"34279:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34302:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"34308:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34298:3:20"},"nodeType":"YulFunctionCall","src":"34298:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34272:6:20"},"nodeType":"YulFunctionCall","src":"34272:47:20"},"nodeType":"YulExpressionStatement","src":"34272:47:20"},{"nodeType":"YulAssignment","src":"34328:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34462:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34336:124:20"},"nodeType":"YulFunctionCall","src":"34336:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34328:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34206:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34221:4:20","type":""}],"src":"34055:419:20"},{"body":{"nodeType":"YulBlock","src":"34586:114:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34608:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"34616:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34604:3:20"},"nodeType":"YulFunctionCall","src":"34604:14:20"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"34620:34:20","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34597:6:20"},"nodeType":"YulFunctionCall","src":"34597:58:20"},"nodeType":"YulExpressionStatement","src":"34597:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34676:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"34684:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34672:3:20"},"nodeType":"YulFunctionCall","src":"34672:15:20"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"34689:3:20","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34665:6:20"},"nodeType":"YulFunctionCall","src":"34665:28:20"},"nodeType":"YulExpressionStatement","src":"34665:28:20"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34578:6:20","type":""}],"src":"34480:220:20"},{"body":{"nodeType":"YulBlock","src":"34852:220:20","statements":[{"nodeType":"YulAssignment","src":"34862:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34928:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"34933:2:20","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34869:58:20"},"nodeType":"YulFunctionCall","src":"34869:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34862:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35034:3:20"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"34945:88:20"},"nodeType":"YulFunctionCall","src":"34945:93:20"},"nodeType":"YulExpressionStatement","src":"34945:93:20"},{"nodeType":"YulAssignment","src":"35047:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35058:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"35063:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35054:3:20"},"nodeType":"YulFunctionCall","src":"35054:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35047:3:20"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34840:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34848:3:20","type":""}],"src":"34706:366:20"},{"body":{"nodeType":"YulBlock","src":"35249:248:20","statements":[{"nodeType":"YulAssignment","src":"35259:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35271:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35282:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35267:3:20"},"nodeType":"YulFunctionCall","src":"35267:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35259:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35306:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"35317:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35302:3:20"},"nodeType":"YulFunctionCall","src":"35302:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35325:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"35331:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35321:3:20"},"nodeType":"YulFunctionCall","src":"35321:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35295:6:20"},"nodeType":"YulFunctionCall","src":"35295:47:20"},"nodeType":"YulExpressionStatement","src":"35295:47:20"},{"nodeType":"YulAssignment","src":"35351:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35485:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35359:124:20"},"nodeType":"YulFunctionCall","src":"35359:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35351:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35229:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35244:4:20","type":""}],"src":"35078:419:20"},{"body":{"nodeType":"YulBlock","src":"35609:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35631:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"35639:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35627:3:20"},"nodeType":"YulFunctionCall","src":"35627:14:20"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"35643:34:20","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35620:6:20"},"nodeType":"YulFunctionCall","src":"35620:58:20"},"nodeType":"YulExpressionStatement","src":"35620:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35699:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"35707:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35695:3:20"},"nodeType":"YulFunctionCall","src":"35695:15:20"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"35712:4:20","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35688:6:20"},"nodeType":"YulFunctionCall","src":"35688:29:20"},"nodeType":"YulExpressionStatement","src":"35688:29:20"}]},"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35601:6:20","type":""}],"src":"35503:221:20"},{"body":{"nodeType":"YulBlock","src":"35876:220:20","statements":[{"nodeType":"YulAssignment","src":"35886:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35952:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"35957:2:20","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35893:58:20"},"nodeType":"YulFunctionCall","src":"35893:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35886:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36058:3:20"}],"functionName":{"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulIdentifier","src":"35969:88:20"},"nodeType":"YulFunctionCall","src":"35969:93:20"},"nodeType":"YulExpressionStatement","src":"35969:93:20"},{"nodeType":"YulAssignment","src":"36071:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36082:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"36087:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36078:3:20"},"nodeType":"YulFunctionCall","src":"36078:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36071:3:20"}]}]},"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35864:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35872:3:20","type":""}],"src":"35730:366:20"},{"body":{"nodeType":"YulBlock","src":"36273:248:20","statements":[{"nodeType":"YulAssignment","src":"36283:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36295:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36306:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36291:3:20"},"nodeType":"YulFunctionCall","src":"36291:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36283:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36330:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"36341:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36326:3:20"},"nodeType":"YulFunctionCall","src":"36326:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36349:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"36355:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36345:3:20"},"nodeType":"YulFunctionCall","src":"36345:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36319:6:20"},"nodeType":"YulFunctionCall","src":"36319:47:20"},"nodeType":"YulExpressionStatement","src":"36319:47:20"},{"nodeType":"YulAssignment","src":"36375:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36509:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36383:124:20"},"nodeType":"YulFunctionCall","src":"36383:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36375:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36253:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36268:4:20","type":""}],"src":"36102:419:20"},{"body":{"nodeType":"YulBlock","src":"36633:124:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36655:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"36663:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36651:3:20"},"nodeType":"YulFunctionCall","src":"36651:14:20"},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","kind":"string","nodeType":"YulLiteral","src":"36667:34:20","type":"","value":"Initializable: contract is not i"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36644:6:20"},"nodeType":"YulFunctionCall","src":"36644:58:20"},"nodeType":"YulExpressionStatement","src":"36644:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36723:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"36731:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36719:3:20"},"nodeType":"YulFunctionCall","src":"36719:15:20"},{"hexValue":"6e697469616c697a696e67","kind":"string","nodeType":"YulLiteral","src":"36736:13:20","type":"","value":"nitializing"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36712:6:20"},"nodeType":"YulFunctionCall","src":"36712:38:20"},"nodeType":"YulExpressionStatement","src":"36712:38:20"}]},"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36625:6:20","type":""}],"src":"36527:230:20"},{"body":{"nodeType":"YulBlock","src":"36909:220:20","statements":[{"nodeType":"YulAssignment","src":"36919:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36985:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"36990:2:20","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36926:58:20"},"nodeType":"YulFunctionCall","src":"36926:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36919:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37091:3:20"}],"functionName":{"name":"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","nodeType":"YulIdentifier","src":"37002:88:20"},"nodeType":"YulFunctionCall","src":"37002:93:20"},"nodeType":"YulExpressionStatement","src":"37002:93:20"},{"nodeType":"YulAssignment","src":"37104:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37115:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"37120:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37111:3:20"},"nodeType":"YulFunctionCall","src":"37111:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37104:3:20"}]}]},"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36897:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36905:3:20","type":""}],"src":"36763:366:20"},{"body":{"nodeType":"YulBlock","src":"37306:248:20","statements":[{"nodeType":"YulAssignment","src":"37316:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37328:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37339:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37324:3:20"},"nodeType":"YulFunctionCall","src":"37324:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37316:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37363:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37374:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37359:3:20"},"nodeType":"YulFunctionCall","src":"37359:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37382:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"37388:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37378:3:20"},"nodeType":"YulFunctionCall","src":"37378:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37352:6:20"},"nodeType":"YulFunctionCall","src":"37352:47:20"},"nodeType":"YulExpressionStatement","src":"37352:47:20"},{"nodeType":"YulAssignment","src":"37408:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37542:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37416:124:20"},"nodeType":"YulFunctionCall","src":"37416:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37408:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37286:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37301:4:20","type":""}],"src":"37135:419:20"},{"body":{"nodeType":"YulBlock","src":"37770:454:20","statements":[{"nodeType":"YulAssignment","src":"37780:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37792:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37803:3:20","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37788:3:20"},"nodeType":"YulFunctionCall","src":"37788:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37780:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37861:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37874:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37885:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37870:3:20"},"nodeType":"YulFunctionCall","src":"37870:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37817:43:20"},"nodeType":"YulFunctionCall","src":"37817:71:20"},"nodeType":"YulExpressionStatement","src":"37817:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37942:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37955:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"37966:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37951:3:20"},"nodeType":"YulFunctionCall","src":"37951:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37898:43:20"},"nodeType":"YulFunctionCall","src":"37898:72:20"},"nodeType":"YulExpressionStatement","src":"37898:72:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38024:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38037:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"38048:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38033:3:20"},"nodeType":"YulFunctionCall","src":"38033:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"37980:43:20"},"nodeType":"YulFunctionCall","src":"37980:72:20"},"nodeType":"YulExpressionStatement","src":"37980:72:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38106:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38119:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"38130:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38115:3:20"},"nodeType":"YulFunctionCall","src":"38115:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"38062:43:20"},"nodeType":"YulFunctionCall","src":"38062:72:20"},"nodeType":"YulExpressionStatement","src":"38062:72:20"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"38188:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38201:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"38212:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38197:3:20"},"nodeType":"YulFunctionCall","src":"38197:19:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"38144:43:20"},"nodeType":"YulFunctionCall","src":"38144:73:20"},"nodeType":"YulExpressionStatement","src":"38144:73:20"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37710:9:20","type":""},{"name":"value4","nodeType":"YulTypedName","src":"37722:6:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37730:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37738:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37746:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37754:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37765:4:20","type":""}],"src":"37560:664:20"},{"body":{"nodeType":"YulBlock","src":"38336:64:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38358:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"38366:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38354:3:20"},"nodeType":"YulFunctionCall","src":"38354:14:20"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"38370:22:20","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38347:6:20"},"nodeType":"YulFunctionCall","src":"38347:46:20"},"nodeType":"YulExpressionStatement","src":"38347:46:20"}]},"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38328:6:20","type":""}],"src":"38230:170:20"},{"body":{"nodeType":"YulBlock","src":"38552:220:20","statements":[{"nodeType":"YulAssignment","src":"38562:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38628:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"38633:2:20","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38569:58:20"},"nodeType":"YulFunctionCall","src":"38569:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38562:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38734:3:20"}],"functionName":{"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulIdentifier","src":"38645:88:20"},"nodeType":"YulFunctionCall","src":"38645:93:20"},"nodeType":"YulExpressionStatement","src":"38645:93:20"},{"nodeType":"YulAssignment","src":"38747:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38758:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"38763:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38754:3:20"},"nodeType":"YulFunctionCall","src":"38754:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38747:3:20"}]}]},"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38540:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38548:3:20","type":""}],"src":"38406:366:20"},{"body":{"nodeType":"YulBlock","src":"38949:248:20","statements":[{"nodeType":"YulAssignment","src":"38959:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38971:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"38982:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38967:3:20"},"nodeType":"YulFunctionCall","src":"38967:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38959:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39006:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"39017:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39002:3:20"},"nodeType":"YulFunctionCall","src":"39002:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39025:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"39031:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39021:3:20"},"nodeType":"YulFunctionCall","src":"39021:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38995:6:20"},"nodeType":"YulFunctionCall","src":"38995:47:20"},"nodeType":"YulExpressionStatement","src":"38995:47:20"},{"nodeType":"YulAssignment","src":"39051:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39185:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39059:124:20"},"nodeType":"YulFunctionCall","src":"39059:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39051:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38929:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38944:4:20","type":""}],"src":"38778:419:20"},{"body":{"nodeType":"YulBlock","src":"39257:87:20","statements":[{"nodeType":"YulAssignment","src":"39267:11:20","value":{"name":"ptr","nodeType":"YulIdentifier","src":"39275:3:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"39267:4:20"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39295:1:20","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"39298:3:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39288:6:20"},"nodeType":"YulFunctionCall","src":"39288:14:20"},"nodeType":"YulExpressionStatement","src":"39288:14:20"},{"nodeType":"YulAssignment","src":"39311:26:20","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"39329:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"39332:4:20","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"39319:9:20"},"nodeType":"YulFunctionCall","src":"39319:18:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"39311:4:20"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"39244:3:20","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"39252:4:20","type":""}],"src":"39203:141:20"},{"body":{"nodeType":"YulBlock","src":"39394:49:20","statements":[{"nodeType":"YulAssignment","src":"39404:33:20","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39422:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"39429:2:20","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39418:3:20"},"nodeType":"YulFunctionCall","src":"39418:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"39434:2:20","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"39414:3:20"},"nodeType":"YulFunctionCall","src":"39414:23:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"39404:6:20"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39377:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"39387:6:20","type":""}],"src":"39350:93:20"},{"body":{"nodeType":"YulBlock","src":"39502:54:20","statements":[{"nodeType":"YulAssignment","src":"39512:37:20","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"39537:4:20"},{"name":"value","nodeType":"YulIdentifier","src":"39543:5:20"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"39533:3:20"},"nodeType":"YulFunctionCall","src":"39533:16:20"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"39512:8:20"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"39477:4:20","type":""},{"name":"value","nodeType":"YulTypedName","src":"39483:5:20","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"39493:8:20","type":""}],"src":"39449:107:20"},{"body":{"nodeType":"YulBlock","src":"39638:317:20","statements":[{"nodeType":"YulVariableDeclaration","src":"39648:35:20","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"39669:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"39681:1:20","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"39665:3:20"},"nodeType":"YulFunctionCall","src":"39665:18:20"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"39652:9:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"39692:109:20","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"39723:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"39734:66:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"39704:18:20"},"nodeType":"YulFunctionCall","src":"39704:97:20"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"39696:4:20","type":""}]},{"nodeType":"YulAssignment","src":"39810:51:20","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"39841:9:20"},{"name":"toInsert","nodeType":"YulIdentifier","src":"39852:8:20"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"39822:18:20"},"nodeType":"YulFunctionCall","src":"39822:39:20"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"39810:8:20"}]},{"nodeType":"YulAssignment","src":"39870:30:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39883:5:20"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"39894:4:20"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"39890:3:20"},"nodeType":"YulFunctionCall","src":"39890:9:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39879:3:20"},"nodeType":"YulFunctionCall","src":"39879:21:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"39870:5:20"}]},{"nodeType":"YulAssignment","src":"39909:40:20","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39922:5:20"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"39933:8:20"},{"name":"mask","nodeType":"YulIdentifier","src":"39943:4:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"39929:3:20"},"nodeType":"YulFunctionCall","src":"39929:19:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"39919:2:20"},"nodeType":"YulFunctionCall","src":"39919:30:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"39909:6:20"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"39599:5:20","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"39606:10:20","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"39618:8:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"39631:6:20","type":""}],"src":"39562:393:20"},{"body":{"nodeType":"YulBlock","src":"40021:82:20","statements":[{"nodeType":"YulAssignment","src":"40031:66:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"40089:5:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40071:17:20"},"nodeType":"YulFunctionCall","src":"40071:24:20"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"40062:8:20"},"nodeType":"YulFunctionCall","src":"40062:34:20"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"40044:17:20"},"nodeType":"YulFunctionCall","src":"40044:53:20"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"40031:9:20"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40001:5:20","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"40011:9:20","type":""}],"src":"39961:142:20"},{"body":{"nodeType":"YulBlock","src":"40156:28:20","statements":[{"nodeType":"YulAssignment","src":"40166:12:20","value":{"name":"value","nodeType":"YulIdentifier","src":"40173:5:20"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"40166:3:20"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"40142:5:20","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"40152:3:20","type":""}],"src":"40109:75:20"},{"body":{"nodeType":"YulBlock","src":"40266:193:20","statements":[{"nodeType":"YulVariableDeclaration","src":"40276:63:20","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"40331:7:20"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"40300:30:20"},"nodeType":"YulFunctionCall","src":"40300:39:20"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"40280:16:20","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"40355:4:20"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"40395:4:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"40389:5:20"},"nodeType":"YulFunctionCall","src":"40389:11:20"},{"name":"offset","nodeType":"YulIdentifier","src":"40402:6:20"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"40434:16:20"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"40410:23:20"},"nodeType":"YulFunctionCall","src":"40410:41:20"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"40361:27:20"},"nodeType":"YulFunctionCall","src":"40361:91:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"40348:6:20"},"nodeType":"YulFunctionCall","src":"40348:105:20"},"nodeType":"YulExpressionStatement","src":"40348:105:20"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"40243:4:20","type":""},{"name":"offset","nodeType":"YulTypedName","src":"40249:6:20","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"40257:7:20","type":""}],"src":"40190:269:20"},{"body":{"nodeType":"YulBlock","src":"40514:24:20","statements":[{"nodeType":"YulAssignment","src":"40524:8:20","value":{"kind":"number","nodeType":"YulLiteral","src":"40531:1:20","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"40524:3:20"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"40510:3:20","type":""}],"src":"40465:73:20"},{"body":{"nodeType":"YulBlock","src":"40597:136:20","statements":[{"nodeType":"YulVariableDeclaration","src":"40607:46:20","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"40621:30:20"},"nodeType":"YulFunctionCall","src":"40621:32:20"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"40611:6:20","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"40706:4:20"},{"name":"offset","nodeType":"YulIdentifier","src":"40712:6:20"},{"name":"zero_0","nodeType":"YulIdentifier","src":"40720:6:20"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"40662:43:20"},"nodeType":"YulFunctionCall","src":"40662:65:20"},"nodeType":"YulExpressionStatement","src":"40662:65:20"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"40583:4:20","type":""},{"name":"offset","nodeType":"YulTypedName","src":"40589:6:20","type":""}],"src":"40544:189:20"},{"body":{"nodeType":"YulBlock","src":"40789:136:20","statements":[{"body":{"nodeType":"YulBlock","src":"40856:63:20","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"40900:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"40907:1:20","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"40870:29:20"},"nodeType":"YulFunctionCall","src":"40870:39:20"},"nodeType":"YulExpressionStatement","src":"40870:39:20"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"40809:5:20"},{"name":"end","nodeType":"YulIdentifier","src":"40816:3:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"40806:2:20"},"nodeType":"YulFunctionCall","src":"40806:14:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"40821:26:20","statements":[{"nodeType":"YulAssignment","src":"40823:22:20","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"40836:5:20"},{"kind":"number","nodeType":"YulLiteral","src":"40843:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40832:3:20"},"nodeType":"YulFunctionCall","src":"40832:13:20"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"40823:5:20"}]}]},"pre":{"nodeType":"YulBlock","src":"40803:2:20","statements":[]},"src":"40799:120:20"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"40777:5:20","type":""},{"name":"end","nodeType":"YulTypedName","src":"40784:3:20","type":""}],"src":"40739:186:20"},{"body":{"nodeType":"YulBlock","src":"41010:464:20","statements":[{"body":{"nodeType":"YulBlock","src":"41036:431:20","statements":[{"nodeType":"YulVariableDeclaration","src":"41050:54:20","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"41098:5:20"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"41066:31:20"},"nodeType":"YulFunctionCall","src":"41066:38:20"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"41054:8:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"41117:63:20","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"41140:8:20"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"41168:10:20"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"41150:17:20"},"nodeType":"YulFunctionCall","src":"41150:29:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41136:3:20"},"nodeType":"YulFunctionCall","src":"41136:44:20"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"41121:11:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"41337:27:20","statements":[{"nodeType":"YulAssignment","src":"41339:23:20","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"41354:8:20"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"41339:11:20"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"41321:10:20"},{"kind":"number","nodeType":"YulLiteral","src":"41333:2:20","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"41318:2:20"},"nodeType":"YulFunctionCall","src":"41318:18:20"},"nodeType":"YulIf","src":"41315:49:20"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"41406:11:20"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"41423:8:20"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"41451:3:20"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"41433:17:20"},"nodeType":"YulFunctionCall","src":"41433:22:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41419:3:20"},"nodeType":"YulFunctionCall","src":"41419:37:20"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"41377:28:20"},"nodeType":"YulFunctionCall","src":"41377:80:20"},"nodeType":"YulExpressionStatement","src":"41377:80:20"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"41027:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"41032:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"41024:2:20"},"nodeType":"YulFunctionCall","src":"41024:11:20"},"nodeType":"YulIf","src":"41021:446:20"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"40986:5:20","type":""},{"name":"len","nodeType":"YulTypedName","src":"40993:3:20","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"40998:10:20","type":""}],"src":"40931:543:20"},{"body":{"nodeType":"YulBlock","src":"41543:54:20","statements":[{"nodeType":"YulAssignment","src":"41553:37:20","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"41578:4:20"},{"name":"value","nodeType":"YulIdentifier","src":"41584:5:20"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"41574:3:20"},"nodeType":"YulFunctionCall","src":"41574:16:20"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"41553:8:20"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"41518:4:20","type":""},{"name":"value","nodeType":"YulTypedName","src":"41524:5:20","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"41534:8:20","type":""}],"src":"41480:117:20"},{"body":{"nodeType":"YulBlock","src":"41654:118:20","statements":[{"nodeType":"YulVariableDeclaration","src":"41664:68:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41713:1:20","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"41716:5:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"41709:3:20"},"nodeType":"YulFunctionCall","src":"41709:13:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"41728:1:20","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"41724:3:20"},"nodeType":"YulFunctionCall","src":"41724:6:20"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"41680:28:20"},"nodeType":"YulFunctionCall","src":"41680:51:20"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"41676:3:20"},"nodeType":"YulFunctionCall","src":"41676:56:20"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"41668:4:20","type":""}]},{"nodeType":"YulAssignment","src":"41741:25:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"41755:4:20"},{"name":"mask","nodeType":"YulIdentifier","src":"41761:4:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"41751:3:20"},"nodeType":"YulFunctionCall","src":"41751:15:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"41741:6:20"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"41631:4:20","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"41637:5:20","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"41647:6:20","type":""}],"src":"41603:169:20"},{"body":{"nodeType":"YulBlock","src":"41858:214:20","statements":[{"nodeType":"YulAssignment","src":"41991:37:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42018:4:20"},{"name":"len","nodeType":"YulIdentifier","src":"42024:3:20"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"41999:18:20"},"nodeType":"YulFunctionCall","src":"41999:29:20"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"41991:4:20"}]},{"nodeType":"YulAssignment","src":"42037:29:20","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"42048:4:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42058:1:20","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"42061:3:20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"42054:3:20"},"nodeType":"YulFunctionCall","src":"42054:11:20"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"42045:2:20"},"nodeType":"YulFunctionCall","src":"42045:21:20"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"42037:4:20"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"41839:4:20","type":""},{"name":"len","nodeType":"YulTypedName","src":"41845:3:20","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"41853:4:20","type":""}],"src":"41777:295:20"},{"body":{"nodeType":"YulBlock","src":"42169:1303:20","statements":[{"nodeType":"YulVariableDeclaration","src":"42180:51:20","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"42227:3:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"42194:32:20"},"nodeType":"YulFunctionCall","src":"42194:37:20"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"42184:6:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"42316:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"42318:16:20"},"nodeType":"YulFunctionCall","src":"42318:18:20"},"nodeType":"YulExpressionStatement","src":"42318:18:20"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"42288:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"42296:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"42285:2:20"},"nodeType":"YulFunctionCall","src":"42285:30:20"},"nodeType":"YulIf","src":"42282:56:20"},{"nodeType":"YulVariableDeclaration","src":"42348:52:20","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"42394:4:20"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"42388:5:20"},"nodeType":"YulFunctionCall","src":"42388:11:20"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"42362:25:20"},"nodeType":"YulFunctionCall","src":"42362:38:20"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"42352:6:20","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"42493:4:20"},{"name":"oldLen","nodeType":"YulIdentifier","src":"42499:6:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"42507:6:20"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"42447:45:20"},"nodeType":"YulFunctionCall","src":"42447:67:20"},"nodeType":"YulExpressionStatement","src":"42447:67:20"},{"nodeType":"YulVariableDeclaration","src":"42524:18:20","value":{"kind":"number","nodeType":"YulLiteral","src":"42541:1:20","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"42528:9:20","type":""}]},{"nodeType":"YulAssignment","src":"42552:17:20","value":{"kind":"number","nodeType":"YulLiteral","src":"42565:4:20","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"42552:9:20"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"42616:611:20","statements":[{"nodeType":"YulVariableDeclaration","src":"42630:37:20","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"42649:6:20"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"42661:4:20","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"42657:3:20"},"nodeType":"YulFunctionCall","src":"42657:9:20"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"42645:3:20"},"nodeType":"YulFunctionCall","src":"42645:22:20"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"42634:7:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"42681:51:20","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"42727:4:20"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"42695:31:20"},"nodeType":"YulFunctionCall","src":"42695:37:20"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"42685:6:20","type":""}]},{"nodeType":"YulVariableDeclaration","src":"42745:10:20","value":{"kind":"number","nodeType":"YulLiteral","src":"42754:1:20","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"42749:1:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"42813:163:20","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"42838:6:20"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"42856:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"42861:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42852:3:20"},"nodeType":"YulFunctionCall","src":"42852:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"42846:5:20"},"nodeType":"YulFunctionCall","src":"42846:26:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"42831:6:20"},"nodeType":"YulFunctionCall","src":"42831:42:20"},"nodeType":"YulExpressionStatement","src":"42831:42:20"},{"nodeType":"YulAssignment","src":"42890:24:20","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"42904:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"42912:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42900:3:20"},"nodeType":"YulFunctionCall","src":"42900:14:20"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"42890:6:20"}]},{"nodeType":"YulAssignment","src":"42931:31:20","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"42948:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"42959:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42944:3:20"},"nodeType":"YulFunctionCall","src":"42944:18:20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"42931:9:20"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"42779:1:20"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"42782:7:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"42776:2:20"},"nodeType":"YulFunctionCall","src":"42776:14:20"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"42791:21:20","statements":[{"nodeType":"YulAssignment","src":"42793:17:20","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"42802:1:20"},{"kind":"number","nodeType":"YulLiteral","src":"42805:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42798:3:20"},"nodeType":"YulFunctionCall","src":"42798:12:20"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"42793:1:20"}]}]},"pre":{"nodeType":"YulBlock","src":"42772:3:20","statements":[]},"src":"42768:208:20"},{"body":{"nodeType":"YulBlock","src":"43012:156:20","statements":[{"nodeType":"YulVariableDeclaration","src":"43030:43:20","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"43057:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"43062:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43053:3:20"},"nodeType":"YulFunctionCall","src":"43053:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43047:5:20"},"nodeType":"YulFunctionCall","src":"43047:26:20"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"43034:9:20","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"43097:6:20"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"43124:9:20"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"43139:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43147:4:20","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"43135:3:20"},"nodeType":"YulFunctionCall","src":"43135:17:20"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"43105:18:20"},"nodeType":"YulFunctionCall","src":"43105:48:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"43090:6:20"},"nodeType":"YulFunctionCall","src":"43090:64:20"},"nodeType":"YulExpressionStatement","src":"43090:64:20"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"42995:7:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"43004:6:20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"42992:2:20"},"nodeType":"YulFunctionCall","src":"42992:19:20"},"nodeType":"YulIf","src":"42989:179:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"43188:4:20"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"43202:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43210:1:20","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"43198:3:20"},"nodeType":"YulFunctionCall","src":"43198:14:20"},{"kind":"number","nodeType":"YulLiteral","src":"43214:1:20","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43194:3:20"},"nodeType":"YulFunctionCall","src":"43194:22:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"43181:6:20"},"nodeType":"YulFunctionCall","src":"43181:36:20"},"nodeType":"YulExpressionStatement","src":"43181:36:20"}]},"nodeType":"YulCase","src":"42609:618:20","value":{"kind":"number","nodeType":"YulLiteral","src":"42614:1:20","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"43244:222:20","statements":[{"nodeType":"YulVariableDeclaration","src":"43258:14:20","value":{"kind":"number","nodeType":"YulLiteral","src":"43271:1:20","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"43262:5:20","type":""}]},{"body":{"nodeType":"YulBlock","src":"43295:67:20","statements":[{"nodeType":"YulAssignment","src":"43313:35:20","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"43332:3:20"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"43337:9:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43328:3:20"},"nodeType":"YulFunctionCall","src":"43328:19:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"43322:5:20"},"nodeType":"YulFunctionCall","src":"43322:26:20"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"43313:5:20"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"43288:6:20"},"nodeType":"YulIf","src":"43285:77:20"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"43382:4:20"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"43441:5:20"},{"name":"newLen","nodeType":"YulIdentifier","src":"43448:6:20"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"43388:52:20"},"nodeType":"YulFunctionCall","src":"43388:67:20"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"43375:6:20"},"nodeType":"YulFunctionCall","src":"43375:81:20"},"nodeType":"YulExpressionStatement","src":"43375:81:20"}]},"nodeType":"YulCase","src":"43236:230:20","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"42589:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"42597:2:20","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"42586:2:20"},"nodeType":"YulFunctionCall","src":"42586:14:20"},"nodeType":"YulSwitch","src":"42579:887:20"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"42158:4:20","type":""},{"name":"src","nodeType":"YulTypedName","src":"42164:3:20","type":""}],"src":"42077:1395:20"},{"body":{"nodeType":"YulBlock","src":"43584:60:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43606:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"43614:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43602:3:20"},"nodeType":"YulFunctionCall","src":"43602:14:20"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"43618:18:20","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43595:6:20"},"nodeType":"YulFunctionCall","src":"43595:42:20"},"nodeType":"YulExpressionStatement","src":"43595:42:20"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43576:6:20","type":""}],"src":"43478:166:20"},{"body":{"nodeType":"YulBlock","src":"43796:220:20","statements":[{"nodeType":"YulAssignment","src":"43806:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43872:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"43877:2:20","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43813:58:20"},"nodeType":"YulFunctionCall","src":"43813:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43806:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43978:3:20"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"43889:88:20"},"nodeType":"YulFunctionCall","src":"43889:93:20"},"nodeType":"YulExpressionStatement","src":"43889:93:20"},{"nodeType":"YulAssignment","src":"43991:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44002:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"44007:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43998:3:20"},"nodeType":"YulFunctionCall","src":"43998:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43991:3:20"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43784:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43792:3:20","type":""}],"src":"43650:366:20"},{"body":{"nodeType":"YulBlock","src":"44193:248:20","statements":[{"nodeType":"YulAssignment","src":"44203:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44215:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"44226:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44211:3:20"},"nodeType":"YulFunctionCall","src":"44211:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44203:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44250:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"44261:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44246:3:20"},"nodeType":"YulFunctionCall","src":"44246:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44269:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"44275:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44265:3:20"},"nodeType":"YulFunctionCall","src":"44265:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44239:6:20"},"nodeType":"YulFunctionCall","src":"44239:47:20"},"nodeType":"YulExpressionStatement","src":"44239:47:20"},{"nodeType":"YulAssignment","src":"44295:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44429:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44303:124:20"},"nodeType":"YulFunctionCall","src":"44303:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44295:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44173:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44188:4:20","type":""}],"src":"44022:419:20"},{"body":{"nodeType":"YulBlock","src":"44625:367:20","statements":[{"nodeType":"YulAssignment","src":"44635:27:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44647:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"44658:3:20","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44643:3:20"},"nodeType":"YulFunctionCall","src":"44643:19:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44635:4:20"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"44716:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44729:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"44740:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44725:3:20"},"nodeType":"YulFunctionCall","src":"44725:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"44672:43:20"},"nodeType":"YulFunctionCall","src":"44672:71:20"},"nodeType":"YulExpressionStatement","src":"44672:71:20"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"44793:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44806:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"44817:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44802:3:20"},"nodeType":"YulFunctionCall","src":"44802:18:20"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"44753:39:20"},"nodeType":"YulFunctionCall","src":"44753:68:20"},"nodeType":"YulExpressionStatement","src":"44753:68:20"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"44875:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44888:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"44899:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44884:3:20"},"nodeType":"YulFunctionCall","src":"44884:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"44831:43:20"},"nodeType":"YulFunctionCall","src":"44831:72:20"},"nodeType":"YulExpressionStatement","src":"44831:72:20"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"44957:6:20"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44970:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"44981:2:20","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44966:3:20"},"nodeType":"YulFunctionCall","src":"44966:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"44913:43:20"},"nodeType":"YulFunctionCall","src":"44913:72:20"},"nodeType":"YulExpressionStatement","src":"44913:72:20"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44573:9:20","type":""},{"name":"value3","nodeType":"YulTypedName","src":"44585:6:20","type":""},{"name":"value2","nodeType":"YulTypedName","src":"44593:6:20","type":""},{"name":"value1","nodeType":"YulTypedName","src":"44601:6:20","type":""},{"name":"value0","nodeType":"YulTypedName","src":"44609:6:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44620:4:20","type":""}],"src":"44447:545:20"},{"body":{"nodeType":"YulBlock","src":"45026:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45043:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"45046:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45036:6:20"},"nodeType":"YulFunctionCall","src":"45036:88:20"},"nodeType":"YulExpressionStatement","src":"45036:88:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45140:1:20","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"45143:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45133:6:20"},"nodeType":"YulFunctionCall","src":"45133:15:20"},"nodeType":"YulExpressionStatement","src":"45133:15:20"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45164:1:20","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"45167:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"45157:6:20"},"nodeType":"YulFunctionCall","src":"45157:15:20"},"nodeType":"YulExpressionStatement","src":"45157:15:20"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"44998:180:20"},{"body":{"nodeType":"YulBlock","src":"45290:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45312:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"45320:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45308:3:20"},"nodeType":"YulFunctionCall","src":"45308:14:20"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"45324:26:20","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45301:6:20"},"nodeType":"YulFunctionCall","src":"45301:50:20"},"nodeType":"YulExpressionStatement","src":"45301:50:20"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45282:6:20","type":""}],"src":"45184:174:20"},{"body":{"nodeType":"YulBlock","src":"45510:220:20","statements":[{"nodeType":"YulAssignment","src":"45520:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45586:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"45591:2:20","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45527:58:20"},"nodeType":"YulFunctionCall","src":"45527:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45520:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45692:3:20"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"45603:88:20"},"nodeType":"YulFunctionCall","src":"45603:93:20"},"nodeType":"YulExpressionStatement","src":"45603:93:20"},{"nodeType":"YulAssignment","src":"45705:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45716:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"45721:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45712:3:20"},"nodeType":"YulFunctionCall","src":"45712:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45705:3:20"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45498:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45506:3:20","type":""}],"src":"45364:366:20"},{"body":{"nodeType":"YulBlock","src":"45907:248:20","statements":[{"nodeType":"YulAssignment","src":"45917:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45929:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"45940:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45925:3:20"},"nodeType":"YulFunctionCall","src":"45925:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45917:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45964:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"45975:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45960:3:20"},"nodeType":"YulFunctionCall","src":"45960:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45983:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"45989:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45979:3:20"},"nodeType":"YulFunctionCall","src":"45979:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45953:6:20"},"nodeType":"YulFunctionCall","src":"45953:47:20"},"nodeType":"YulExpressionStatement","src":"45953:47:20"},{"nodeType":"YulAssignment","src":"46009:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46143:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46017:124:20"},"nodeType":"YulFunctionCall","src":"46017:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46009:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45887:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45902:4:20","type":""}],"src":"45736:419:20"},{"body":{"nodeType":"YulBlock","src":"46267:75:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46289:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"46297:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46285:3:20"},"nodeType":"YulFunctionCall","src":"46285:14:20"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"46301:33:20","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46278:6:20"},"nodeType":"YulFunctionCall","src":"46278:57:20"},"nodeType":"YulExpressionStatement","src":"46278:57:20"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46259:6:20","type":""}],"src":"46161:181:20"},{"body":{"nodeType":"YulBlock","src":"46494:220:20","statements":[{"nodeType":"YulAssignment","src":"46504:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46570:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"46575:2:20","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46511:58:20"},"nodeType":"YulFunctionCall","src":"46511:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46504:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46676:3:20"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"46587:88:20"},"nodeType":"YulFunctionCall","src":"46587:93:20"},"nodeType":"YulExpressionStatement","src":"46587:93:20"},{"nodeType":"YulAssignment","src":"46689:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46700:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"46705:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46696:3:20"},"nodeType":"YulFunctionCall","src":"46696:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46689:3:20"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46482:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46490:3:20","type":""}],"src":"46348:366:20"},{"body":{"nodeType":"YulBlock","src":"46891:248:20","statements":[{"nodeType":"YulAssignment","src":"46901:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46913:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"46924:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46909:3:20"},"nodeType":"YulFunctionCall","src":"46909:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46901:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46948:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"46959:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46944:3:20"},"nodeType":"YulFunctionCall","src":"46944:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46967:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"46973:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46963:3:20"},"nodeType":"YulFunctionCall","src":"46963:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46937:6:20"},"nodeType":"YulFunctionCall","src":"46937:47:20"},"nodeType":"YulExpressionStatement","src":"46937:47:20"},{"nodeType":"YulAssignment","src":"46993:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47127:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47001:124:20"},"nodeType":"YulFunctionCall","src":"47001:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46993:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46871:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46886:4:20","type":""}],"src":"46720:419:20"},{"body":{"nodeType":"YulBlock","src":"47251:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47273:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47281:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47269:3:20"},"nodeType":"YulFunctionCall","src":"47269:14:20"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"47285:34:20","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47262:6:20"},"nodeType":"YulFunctionCall","src":"47262:58:20"},"nodeType":"YulExpressionStatement","src":"47262:58:20"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47341:6:20"},{"kind":"number","nodeType":"YulLiteral","src":"47349:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47337:3:20"},"nodeType":"YulFunctionCall","src":"47337:15:20"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"47354:4:20","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47330:6:20"},"nodeType":"YulFunctionCall","src":"47330:29:20"},"nodeType":"YulExpressionStatement","src":"47330:29:20"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47243:6:20","type":""}],"src":"47145:221:20"},{"body":{"nodeType":"YulBlock","src":"47518:220:20","statements":[{"nodeType":"YulAssignment","src":"47528:74:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47594:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"47599:2:20","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47535:58:20"},"nodeType":"YulFunctionCall","src":"47535:67:20"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47528:3:20"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47700:3:20"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"47611:88:20"},"nodeType":"YulFunctionCall","src":"47611:93:20"},"nodeType":"YulExpressionStatement","src":"47611:93:20"},{"nodeType":"YulAssignment","src":"47713:19:20","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47724:3:20"},{"kind":"number","nodeType":"YulLiteral","src":"47729:2:20","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47720:3:20"},"nodeType":"YulFunctionCall","src":"47720:12:20"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47713:3:20"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47506:3:20","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47514:3:20","type":""}],"src":"47372:366:20"},{"body":{"nodeType":"YulBlock","src":"47915:248:20","statements":[{"nodeType":"YulAssignment","src":"47925:26:20","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47937:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"47948:2:20","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47933:3:20"},"nodeType":"YulFunctionCall","src":"47933:18:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47925:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47972:9:20"},{"kind":"number","nodeType":"YulLiteral","src":"47983:1:20","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47968:3:20"},"nodeType":"YulFunctionCall","src":"47968:17:20"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47991:4:20"},{"name":"headStart","nodeType":"YulIdentifier","src":"47997:9:20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47987:3:20"},"nodeType":"YulFunctionCall","src":"47987:20:20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47961:6:20"},"nodeType":"YulFunctionCall","src":"47961:47:20"},"nodeType":"YulExpressionStatement","src":"47961:47:20"},{"nodeType":"YulAssignment","src":"48017:139:20","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48151:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48025:124:20"},"nodeType":"YulFunctionCall","src":"48025:131:20"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48017:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47895:9:20","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47910:4:20","type":""}],"src":"47744:419:20"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8 {\n        if slt(sub(dataEnd, headStart), 288) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade(memPtr) {\n\n        mstore(add(memPtr, 0), \"EIP712: Uninitialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: expired deadline\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101a95760003560e01c806379cc6790116100f9578063a457c2d711610097578063d505accf11610071578063d505accf146104a0578063dd62ed3e146104bc578063f2fde38b146104ec578063fdd9589414610508576101a9565b8063a457c2d714610410578063a9059cbb14610440578063aad41a4114610470576101a9565b80638456cb59116100d35780638456cb59146103a657806384b0196e146103b05780638da5cb5b146103d457806395d89b41146103f2576101a9565b806379cc6790146103505780637ecebe001461036c5780638129fc1c1461039c576101a9565b8063395093511161016657806342966c681161014057806342966c68146102dc5780635c975abb146102f857806370a0823114610316578063715018a614610346576101a9565b806339509351146102865780633f4ba83a146102b657806340c10f19146102c0576101a9565b806306fdde03146101ae578063095ea7b3146101cc57806318160ddd146101fc57806323b872dd1461021a578063313ce5671461024a5780633644e51514610268575b600080fd5b6101b6610524565b6040516101c391906123a6565b60405180910390f35b6101e660048036038101906101e19190612470565b6105b6565b6040516101f391906124cb565b60405180910390f35b6102046105d9565b60405161021191906124f5565b60405180910390f35b610234600480360381019061022f9190612510565b6105e3565b60405161024191906124cb565b60405180910390f35b610252610612565b60405161025f919061257f565b60405180910390f35b61027061061b565b60405161027d91906125b3565b60405180910390f35b6102a0600480360381019061029b9190612470565b61062a565b6040516102ad91906124cb565b60405180910390f35b6102be610661565b005b6102da60048036038101906102d59190612470565b610673565b005b6102f660048036038101906102f191906125ce565b610681565b005b610300610695565b60405161030d91906124cb565b60405180910390f35b610330600480360381019061032b91906125fb565b6106ac565b60405161033d91906124f5565b60405180910390f35b61034e6106f5565b005b61036a60048036038101906103659190612470565b610709565b005b610386600480360381019061038191906125fb565b610729565b60405161039391906124f5565b60405180910390f35b6103a461077a565b005b6103ae61097a565b005b6103b861098c565b6040516103cb9796959493929190612730565b60405180910390f35b6103dc610a8d565b6040516103e991906127b4565b60405180910390f35b6103fa610ab7565b60405161040791906123a6565b60405180910390f35b61042a60048036038101906104259190612470565b610b49565b60405161043791906124cb565b60405180910390f35b61045a60048036038101906104559190612470565b610bc0565b60405161046791906124cb565b60405180910390f35b61048a600480360381019061048591906129da565b610be3565b60405161049791906124f5565b60405180910390f35b6104ba60048036038101906104b59190612aaa565b610c51565b005b6104d660048036038101906104d19190612b4c565b610d93565b6040516104e391906124f5565b60405180910390f35b610506600480360381019061050191906125fb565b610e1a565b005b610522600480360381019061051d9190612b8c565b610e9d565b005b60606036805461053390612c85565b80601f016020809104026020016040519081016040528092919081815260200182805461055f90612c85565b80156105ac5780601f10610581576101008083540402835291602001916105ac565b820191906000526020600020905b81548152906001019060200180831161058f57829003601f168201915b5050505050905090565b6000806105c1610eda565b90506105ce818585610ee2565b600191505092915050565b6000603554905090565b6000806105ee610eda565b90506105fb8582856110ab565b610606858585611137565b60019150509392505050565b60006012905090565b60006106256113b0565b905090565b600080610635610eda565b90506106568185856106478589610d93565b6106519190612ce5565b610ee2565b600191505092915050565b6106696113bf565b61067161143d565b565b61067d82826114a0565b5050565b61069261068c610eda565b826115f7565b50565b6000609760009054906101000a900460ff16905090565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106fd6113bf565b61070760006117c6565b565b61071b82610715610eda565b836110ab565b61072582826115f7565b5050565b600061077361012f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061188c565b9050919050565b60008060019054906101000a900460ff161590508080156107ab5750600160008054906101000a900460ff1660ff16105b806107d857506107ba3061189a565b1580156107d75750600160008054906101000a900460ff1660ff16145b5b610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080e90612d8b565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610854576001600060016101000a81548160ff0219169083151502179055505b6108c86040518060400160405280600781526020017f54657374506f4c000000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f54500000000000000000000000000000000000000000000000000000000000008152506118bd565b6108d061191a565b6108d861196b565b6108e06119c4565b61091e6040518060400160405280600781526020017f54657374506f4c00000000000000000000000000000000000000000000000000815250611a1d565b80156109775760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161096e9190612df0565b60405180910390a15b50565b6109826113bf565b61098a611aae565b565b6000606080600080600060606000801b60fb541480156109b057506000801b60fc54145b6109ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e690612e57565b60405180910390fd5b6109f7611b11565b6109ff611ba3565b46306000801b600067ffffffffffffffff811115610a2057610a1f6127d4565b5b604051908082528060200260200182016040528015610a4e5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b600060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060378054610ac690612c85565b80601f0160208091040260200160405190810160405280929190818152602001828054610af290612c85565b8015610b3f5780601f10610b1457610100808354040283529160200191610b3f565b820191906000526020600020905b815481529060010190602001808311610b2257829003601f168201915b5050505050905090565b600080610b54610eda565b90506000610b628286610d93565b905083811015610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e90612ee9565b60405180910390fd5b610bb48286868403610ee2565b60019250505092915050565b600080610bcb610eda565b9050610bd8818585611137565b600191505092915050565b600080600090505b8351811015610c4757610c32848281518110610c0a57610c09612f09565b5b6020026020010151848381518110610c2557610c24612f09565b5b6020026020010151610bc0565b50600181610c409190612ce5565b9050610beb565b8091505092915050565b83421115610c94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8b90612f84565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610cc38c611c35565b89604051602001610cd996959493929190612fa4565b6040516020818303038152906040528051906020012090506000610cfc82611c94565b90506000610d0c82878787611cae565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7390613051565b60405180910390fd5b610d878a8a8a610ee2565b50505050505050505050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610e226113bf565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e88906130e3565b60405180910390fd5b610e9a816117c6565b50565b610eb789898789610eae9190612ce5565b87878787610c51565b610ec28988886105e3565b50610ece8933876105e3565b50505050505050505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4890613175565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb790613207565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161109e91906124f5565b60405180910390a3505050565b60006110b78484610d93565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146111315781811015611123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111a90613273565b60405180910390fd5b6111308484848403610ee2565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119d90613305565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120c90613397565b60405180910390fd5b611220838383611cd9565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156112a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129e90613429565b60405180910390fd5b818103603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161139791906124f5565b60405180910390a36113aa848484611cde565b50505050565b60006113ba611ce3565b905090565b6113c7610eda565b73ffffffffffffffffffffffffffffffffffffffff166113e5610a8d565b73ffffffffffffffffffffffffffffffffffffffff161461143b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143290613495565b60405180910390fd5b565b611445611d47565b6000609760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611489610eda565b60405161149691906127b4565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361150f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150690613501565b60405180910390fd5b61151b60008383611cd9565b806035600082825461152d9190612ce5565b9250508190555080603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115df91906124f5565b60405180910390a36115f360008383611cde565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165d90613593565b60405180910390fd5b61167282600083611cd9565b6000603360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156116f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f090613625565b60405180910390fd5b818103603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603560008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117ad91906124f5565b60405180910390a36117c183600084611cde565b505050565b600060c960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160c960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff1661190c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611903906136b7565b60405180910390fd5b6119168282611d90565b5050565b600060019054906101000a900460ff16611969576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611960906136b7565b60405180910390fd5b565b600060019054906101000a900460ff166119ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b1906136b7565b60405180910390fd5b6119c2611e03565b565b600060019054906101000a900460ff16611a13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0a906136b7565b60405180910390fd5b611a1b611e6f565b565b600060019054906101000a900460ff16611a6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a63906136b7565b60405180910390fd5b611aab816040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250611ed0565b50565b611ab6611f57565b6001609760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611afa610eda565b604051611b0791906127b4565b60405180910390a1565b606060fd8054611b2090612c85565b80601f0160208091040260200160405190810160405280929190818152602001828054611b4c90612c85565b8015611b995780601f10611b6e57610100808354040283529160200191611b99565b820191906000526020600020905b815481529060010190602001808311611b7c57829003601f168201915b5050505050905090565b606060fe8054611bb290612c85565b80601f0160208091040260200160405190810160405280929190818152602001828054611bde90612c85565b8015611c2b5780601f10611c0057610100808354040283529160200191611c2b565b820191906000526020600020905b815481529060010190602001808311611c0e57829003601f168201915b5050505050905090565b60008061012f60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611c838161188c565b9150611c8e81611fa1565b50919050565b6000611ca7611ca16113b0565b83611fb7565b9050919050565b6000806000611cbf87878787611ff8565b91509150611ccc816120da565b8192505050949350505050565b505050565b505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611d0e612240565b611d166122ab565b4630604051602001611d2c9594939291906136d7565b60405160208183030381529060405280519060200120905090565b611d4f610695565b611d8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8590613776565b60405180910390fd5b565b600060019054906101000a900460ff16611ddf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dd6906136b7565b60405180910390fd5b8160369081611dee9190613938565b508060379081611dfe9190613938565b505050565b600060019054906101000a900460ff16611e52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e49906136b7565b60405180910390fd5b6000609760006101000a81548160ff021916908315150217905550565b600060019054906101000a900460ff16611ebe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611eb5906136b7565b60405180910390fd5b611ece611ec9610eda565b6117c6565b565b600060019054906101000a900460ff16611f1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f16906136b7565b60405180910390fd5b8160fd9081611f2e9190613938565b508060fe9081611f3e9190613938565b506000801b60fb819055506000801b60fc819055505050565b611f5f610695565b15611f9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f9690613a56565b60405180910390fd5b565b6001816000016000828254019250508190555050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156120335760006003915091506120d1565b6000600187878787604051600081526020016040526040516120589493929190613a76565b6020604051602081039080840390855afa15801561207a573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036120c8576000600192509250506120d1565b80600092509250505b94509492505050565b600060048111156120ee576120ed613abb565b5b81600481111561210157612100613abb565b5b031561223d576001600481111561211b5761211a613abb565b5b81600481111561212e5761212d613abb565b5b0361216e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161216590613b36565b60405180910390fd5b6002600481111561218257612181613abb565b5b81600481111561219557612194613abb565b5b036121d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121cc90613ba2565b60405180910390fd5b600360048111156121e9576121e8613abb565b5b8160048111156121fc576121fb613abb565b5b0361223c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161223390613c34565b60405180910390fd5b5b50565b60008061224b611b11565b90506000815111156122675780805190602001209150506122a8565b600060fb5490506000801b81146122825780925050506122a8565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470925050505b90565b6000806122b6611ba3565b90506000815111156122d2578080519060200120915050612313565b600060fc5490506000801b81146122ed578092505050612313565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470925050505b90565b600081519050919050565b600082825260208201905092915050565b60005b83811015612350578082015181840152602081019050612335565b60008484015250505050565b6000601f19601f8301169050919050565b600061237882612316565b6123828185612321565b9350612392818560208601612332565b61239b8161235c565b840191505092915050565b600060208201905081810360008301526123c0818461236d565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612407826123dc565b9050919050565b612417816123fc565b811461242257600080fd5b50565b6000813590506124348161240e565b92915050565b6000819050919050565b61244d8161243a565b811461245857600080fd5b50565b60008135905061246a81612444565b92915050565b60008060408385031215612487576124866123d2565b5b600061249585828601612425565b92505060206124a68582860161245b565b9150509250929050565b60008115159050919050565b6124c5816124b0565b82525050565b60006020820190506124e060008301846124bc565b92915050565b6124ef8161243a565b82525050565b600060208201905061250a60008301846124e6565b92915050565b600080600060608486031215612529576125286123d2565b5b600061253786828701612425565b935050602061254886828701612425565b92505060406125598682870161245b565b9150509250925092565b600060ff82169050919050565b61257981612563565b82525050565b60006020820190506125946000830184612570565b92915050565b6000819050919050565b6125ad8161259a565b82525050565b60006020820190506125c860008301846125a4565b92915050565b6000602082840312156125e4576125e36123d2565b5b60006125f28482850161245b565b91505092915050565b600060208284031215612611576126106123d2565b5b600061261f84828501612425565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61265d81612628565b82525050565b61266c816123fc565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6126a78161243a565b82525050565b60006126b9838361269e565b60208301905092915050565b6000602082019050919050565b60006126dd82612672565b6126e7818561267d565b93506126f28361268e565b8060005b8381101561272357815161270a88826126ad565b9750612715836126c5565b9250506001810190506126f6565b5085935050505092915050565b600060e082019050612745600083018a612654565b8181036020830152612757818961236d565b9050818103604083015261276b818861236d565b905061277a60608301876124e6565b6127876080830186612663565b61279460a08301856125a4565b81810360c08301526127a681846126d2565b905098975050505050505050565b60006020820190506127c96000830184612663565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61280c8261235c565b810181811067ffffffffffffffff8211171561282b5761282a6127d4565b5b80604052505050565b600061283e6123c8565b905061284a8282612803565b919050565b600067ffffffffffffffff82111561286a576128696127d4565b5b602082029050602081019050919050565b600080fd5b600061289361288e8461284f565b612834565b905080838252602082019050602084028301858111156128b6576128b561287b565b5b835b818110156128df57806128cb8882612425565b8452602084019350506020810190506128b8565b5050509392505050565b600082601f8301126128fe576128fd6127cf565b5b813561290e848260208601612880565b91505092915050565b600067ffffffffffffffff821115612932576129316127d4565b5b602082029050602081019050919050565b600061295661295184612917565b612834565b905080838252602082019050602084028301858111156129795761297861287b565b5b835b818110156129a2578061298e888261245b565b84526020840193505060208101905061297b565b5050509392505050565b600082601f8301126129c1576129c06127cf565b5b81356129d1848260208601612943565b91505092915050565b600080604083850312156129f1576129f06123d2565b5b600083013567ffffffffffffffff811115612a0f57612a0e6123d7565b5b612a1b858286016128e9565b925050602083013567ffffffffffffffff811115612a3c57612a3b6123d7565b5b612a48858286016129ac565b9150509250929050565b612a5b81612563565b8114612a6657600080fd5b50565b600081359050612a7881612a52565b92915050565b612a878161259a565b8114612a9257600080fd5b50565b600081359050612aa481612a7e565b92915050565b600080600080600080600060e0888a031215612ac957612ac86123d2565b5b6000612ad78a828b01612425565b9750506020612ae88a828b01612425565b9650506040612af98a828b0161245b565b9550506060612b0a8a828b0161245b565b9450506080612b1b8a828b01612a69565b93505060a0612b2c8a828b01612a95565b92505060c0612b3d8a828b01612a95565b91505092959891949750929550565b60008060408385031215612b6357612b626123d2565b5b6000612b7185828601612425565b9250506020612b8285828601612425565b9150509250929050565b60008060008060008060008060006101208a8c031215612baf57612bae6123d2565b5b6000612bbd8c828d01612425565b9950506020612bce8c828d01612425565b9850506040612bdf8c828d01612425565b9750506060612bf08c828d0161245b565b9650506080612c018c828d0161245b565b95505060a0612c128c828d0161245b565b94505060c0612c238c828d01612a69565b93505060e0612c348c828d01612a95565b925050610100612c468c828d01612a95565b9150509295985092959850929598565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612c9d57607f821691505b602082108103612cb057612caf612c56565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612cf08261243a565b9150612cfb8361243a565b9250828201905080821115612d1357612d12612cb6565b5b92915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000612d75602e83612321565b9150612d8082612d19565b604082019050919050565b60006020820190508181036000830152612da481612d68565b9050919050565b6000819050919050565b6000819050919050565b6000612dda612dd5612dd084612dab565b612db5565b612563565b9050919050565b612dea81612dbf565b82525050565b6000602082019050612e056000830184612de1565b92915050565b7f4549503731323a20556e696e697469616c697a65640000000000000000000000600082015250565b6000612e41601583612321565b9150612e4c82612e0b565b602082019050919050565b60006020820190508181036000830152612e7081612e34565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000612ed3602583612321565b9150612ede82612e77565b604082019050919050565b60006020820190508181036000830152612f0281612ec6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b6000612f6e601d83612321565b9150612f7982612f38565b602082019050919050565b60006020820190508181036000830152612f9d81612f61565b9050919050565b600060c082019050612fb960008301896125a4565b612fc66020830188612663565b612fd36040830187612663565b612fe060608301866124e6565b612fed60808301856124e6565b612ffa60a08301846124e6565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b600061303b601e83612321565b915061304682613005565b602082019050919050565b6000602082019050818103600083015261306a8161302e565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006130cd602683612321565b91506130d882613071565b604082019050919050565b600060208201905081810360008301526130fc816130c0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061315f602483612321565b915061316a82613103565b604082019050919050565b6000602082019050818103600083015261318e81613152565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006131f1602283612321565b91506131fc82613195565b604082019050919050565b60006020820190508181036000830152613220816131e4565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061325d601d83612321565b915061326882613227565b602082019050919050565b6000602082019050818103600083015261328c81613250565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006132ef602583612321565b91506132fa82613293565b604082019050919050565b6000602082019050818103600083015261331e816132e2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000613381602383612321565b915061338c82613325565b604082019050919050565b600060208201905081810360008301526133b081613374565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000613413602683612321565b915061341e826133b7565b604082019050919050565b6000602082019050818103600083015261344281613406565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061347f602083612321565b915061348a82613449565b602082019050919050565b600060208201905081810360008301526134ae81613472565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006134eb601f83612321565b91506134f6826134b5565b602082019050919050565b6000602082019050818103600083015261351a816134de565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061357d602183612321565b915061358882613521565b604082019050919050565b600060208201905081810360008301526135ac81613570565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b600061360f602283612321565b915061361a826135b3565b604082019050919050565b6000602082019050818103600083015261363e81613602565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006136a1602b83612321565b91506136ac82613645565b604082019050919050565b600060208201905081810360008301526136d081613694565b9050919050565b600060a0820190506136ec60008301886125a4565b6136f960208301876125a4565b61370660408301866125a4565b61371360608301856124e6565b6137206080830184612663565b9695505050505050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000613760601483612321565b915061376b8261372a565b602082019050919050565b6000602082019050818103600083015261378f81613753565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026137f87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826137bb565b61380286836137bb565b95508019841693508086168417925050509392505050565b600061383561383061382b8461243a565b612db5565b61243a565b9050919050565b6000819050919050565b61384f8361381a565b61386361385b8261383c565b8484546137c8565b825550505050565b600090565b61387861386b565b613883818484613846565b505050565b5b818110156138a75761389c600082613870565b600181019050613889565b5050565b601f8211156138ec576138bd81613796565b6138c6846137ab565b810160208510156138d5578190505b6138e96138e1856137ab565b830182613888565b50505b505050565b600082821c905092915050565b600061390f600019846008026138f1565b1980831691505092915050565b600061392883836138fe565b9150826002028217905092915050565b61394182612316565b67ffffffffffffffff81111561395a576139596127d4565b5b6139648254612c85565b61396f8282856138ab565b600060209050601f8311600181146139a25760008415613990578287015190505b61399a858261391c565b865550613a02565b601f1984166139b086613796565b60005b828110156139d8578489015182556001820191506020850194506020810190506139b3565b868310156139f557848901516139f1601f8916826138fe565b8355505b6001600288020188555050505b505050505050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613a40601083612321565b9150613a4b82613a0a565b602082019050919050565b60006020820190508181036000830152613a6f81613a33565b9050919050565b6000608082019050613a8b60008301876125a4565b613a986020830186612570565b613aa560408301856125a4565b613ab260608301846125a4565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000613b20601883612321565b9150613b2b82613aea565b602082019050919050565b60006020820190508181036000830152613b4f81613b13565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000613b8c601f83612321565b9150613b9782613b56565b602082019050919050565b60006020820190508181036000830152613bbb81613b7f565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000613c1e602283612321565b9150613c2982613bc2565b604082019050919050565b60006020820190508181036000830152613c4d81613c11565b905091905056fea2646970667358221220a311eb750360f3b62e3a8e6ba1f0c5e3b9853df8263ccfef21dd60236c68624564736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x4A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xFDD95894 EQ PUSH2 0x508 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xAAD41A41 EQ PUSH2 0x470 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F2 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x39C JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x346 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2C0 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x268 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x5D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH2 0x612 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x62A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH2 0x661 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x300 PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x330 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34E PUSH2 0x6F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH2 0x77A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH2 0x97A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B8 PUSH2 0x98C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DC PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FA PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x437 SWAP2 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x455 SWAP2 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x29DA JUMP JUMPDEST PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B5 SWAP2 SWAP1 PUSH2 0x2AAA JUMP JUMPDEST PUSH2 0xC51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x2B4C JUMP JUMPDEST PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E3 SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x506 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH2 0xE1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x522 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51D SWAP2 SWAP1 PUSH2 0x2B8C JUMP JUMPDEST PUSH2 0xE9D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x533 SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x55F SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x581 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x58F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5C1 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH2 0x5CE DUP2 DUP6 DUP6 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5EE PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH2 0x5FB DUP6 DUP3 DUP6 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x606 DUP6 DUP6 DUP6 PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x625 PUSH2 0x13B0 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x635 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH2 0x656 DUP2 DUP6 DUP6 PUSH2 0x647 DUP6 DUP10 PUSH2 0xD93 JUMP JUMPDEST PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x2CE5 JUMP JUMPDEST PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x669 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x671 PUSH2 0x143D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x67D DUP3 DUP3 PUSH2 0x14A0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x692 PUSH2 0x68C PUSH2 0xEDA JUMP JUMPDEST DUP3 PUSH2 0x15F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FD PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x707 PUSH1 0x0 PUSH2 0x17C6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x71B DUP3 PUSH2 0x715 PUSH2 0xEDA JUMP JUMPDEST DUP4 PUSH2 0x10AB JUMP JUMPDEST PUSH2 0x725 DUP3 DUP3 PUSH2 0x15F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x773 PUSH2 0x12F PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x188C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x7AB JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x7D8 JUMPI POP PUSH2 0x7BA ADDRESS PUSH2 0x189A JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x7D7 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80E SWAP1 PUSH2 0x2D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x854 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x8C8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54657374506F4C00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5450000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x18BD JUMP JUMPDEST PUSH2 0x8D0 PUSH2 0x191A JUMP JUMPDEST PUSH2 0x8D8 PUSH2 0x196B JUMP JUMPDEST PUSH2 0x8E0 PUSH2 0x19C4 JUMP JUMPDEST PUSH2 0x91E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54657374506F4C00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1A1D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x977 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x96E SWAP2 SWAP1 PUSH2 0x2DF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH2 0x982 PUSH2 0x13BF JUMP JUMPDEST PUSH2 0x98A PUSH2 0x1AAE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 SHL PUSH1 0xFB SLOAD EQ DUP1 ISZERO PUSH2 0x9B0 JUMPI POP PUSH1 0x0 DUP1 SHL PUSH1 0xFC SLOAD EQ JUMPDEST PUSH2 0x9EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E6 SWAP1 PUSH2 0x2E57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F7 PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0x9FF PUSH2 0x1BA3 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA20 JUMPI PUSH2 0xA1F PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA4E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0xAC6 SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xAF2 SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB3F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB14 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB3F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB22 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB54 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB62 DUP3 DUP7 PUSH2 0xD93 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9E SWAP1 PUSH2 0x2EE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB4 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBCB PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH2 0xBD8 DUP2 DUP6 DUP6 PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC47 JUMPI PUSH2 0xC32 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC0A JUMPI PUSH2 0xC09 PUSH2 0x2F09 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC25 JUMPI PUSH2 0xC24 PUSH2 0x2F09 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xBC0 JUMP JUMPDEST POP PUSH1 0x1 DUP2 PUSH2 0xC40 SWAP2 SWAP1 PUSH2 0x2CE5 JUMP JUMPDEST SWAP1 POP PUSH2 0xBEB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xC94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8B SWAP1 PUSH2 0x2F84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xCC3 DUP13 PUSH2 0x1C35 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCD9 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xCFC DUP3 PUSH2 0x1C94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD0C DUP3 DUP8 DUP8 DUP8 PUSH2 0x1CAE JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD73 SWAP1 PUSH2 0x3051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD87 DUP11 DUP11 DUP11 PUSH2 0xEE2 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE22 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE88 SWAP1 PUSH2 0x30E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9A DUP2 PUSH2 0x17C6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEB7 DUP10 DUP10 DUP8 DUP10 PUSH2 0xEAE SWAP2 SWAP1 PUSH2 0x2CE5 JUMP JUMPDEST DUP8 DUP8 DUP8 DUP8 PUSH2 0xC51 JUMP JUMPDEST PUSH2 0xEC2 DUP10 DUP9 DUP9 PUSH2 0x5E3 JUMP JUMPDEST POP PUSH2 0xECE DUP10 CALLER DUP8 PUSH2 0x5E3 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF48 SWAP1 PUSH2 0x3175 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB7 SWAP1 PUSH2 0x3207 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x109E SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B7 DUP5 DUP5 PUSH2 0xD93 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1131 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111A SWAP1 PUSH2 0x3273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1130 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xEE2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119D SWAP1 PUSH2 0x3305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1215 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120C SWAP1 PUSH2 0x3397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1220 DUP4 DUP4 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129E SWAP1 PUSH2 0x3429 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1397 SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x13AA DUP5 DUP5 DUP5 PUSH2 0x1CDE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13BA PUSH2 0x1CE3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x13C7 PUSH2 0xEDA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13E5 PUSH2 0xA8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x143B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1432 SWAP1 PUSH2 0x3495 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1445 PUSH2 0x1D47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1489 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1496 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x150F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1506 SWAP1 PUSH2 0x3501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x151B PUSH1 0x0 DUP4 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x152D SWAP2 SWAP1 PUSH2 0x2CE5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x15DF SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x15F3 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1CDE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1666 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165D SWAP1 PUSH2 0x3593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1672 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F0 SWAP1 PUSH2 0x3625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x17AD SWAP2 SWAP1 PUSH2 0x24F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17C1 DUP4 PUSH1 0x0 DUP5 PUSH2 0x1CDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xC9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x190C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1903 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1916 DUP3 DUP3 PUSH2 0x1D90 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1969 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1960 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x19BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B1 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19C2 PUSH2 0x1E03 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0A SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A1B PUSH2 0x1E6F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A63 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AAB DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1ED0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AB6 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x97 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1AFA PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B07 SWAP2 SWAP1 PUSH2 0x27B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFD DUP1 SLOAD PUSH2 0x1B20 SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1B4C SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B99 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B6E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B99 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B7C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFE DUP1 SLOAD PUSH2 0x1BB2 SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1BDE SWAP1 PUSH2 0x2C85 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C2B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C00 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C2B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C0E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12F PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1C83 DUP2 PUSH2 0x188C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8E DUP2 PUSH2 0x1FA1 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA7 PUSH2 0x1CA1 PUSH2 0x13B0 JUMP JUMPDEST DUP4 PUSH2 0x1FB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1CBF DUP8 DUP8 DUP8 DUP8 PUSH2 0x1FF8 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1CCC DUP2 PUSH2 0x20DA JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x1D0E PUSH2 0x2240 JUMP JUMPDEST PUSH2 0x1D16 PUSH2 0x22AB JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D2C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D4F PUSH2 0x695 JUMP JUMPDEST PUSH2 0x1D8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D85 SWAP1 PUSH2 0x3776 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1DDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD6 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x36 SWAP1 DUP2 PUSH2 0x1DEE SWAP2 SWAP1 PUSH2 0x3938 JUMP JUMPDEST POP DUP1 PUSH1 0x37 SWAP1 DUP2 PUSH2 0x1DFE SWAP2 SWAP1 PUSH2 0x3938 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E49 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x97 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1EBE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB5 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1ECE PUSH2 0x1EC9 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x17C6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1F1F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F16 SWAP1 PUSH2 0x36B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0xFD SWAP1 DUP2 PUSH2 0x1F2E SWAP2 SWAP1 PUSH2 0x3938 JUMP JUMPDEST POP DUP1 PUSH1 0xFE SWAP1 DUP2 PUSH2 0x1F3E SWAP2 SWAP1 PUSH2 0x3938 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SHL PUSH1 0xFB DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SHL PUSH1 0xFC DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x1F5F PUSH2 0x695 JUMP JUMPDEST ISZERO PUSH2 0x1F9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F96 SWAP1 PUSH2 0x3A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2033 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x20D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x2058 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x207A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20C8 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x20D1 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x20EE JUMPI PUSH2 0x20ED PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2101 JUMPI PUSH2 0x2100 PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x223D JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x211B JUMPI PUSH2 0x211A PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x212E JUMPI PUSH2 0x212D PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x216E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2165 SWAP1 PUSH2 0x3B36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2182 JUMPI PUSH2 0x2181 PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2195 JUMPI PUSH2 0x2194 PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x21D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21CC SWAP1 PUSH2 0x3BA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x21E9 JUMPI PUSH2 0x21E8 PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x21FC JUMPI PUSH2 0x21FB PUSH2 0x3ABB JUMP JUMPDEST JUMPDEST SUB PUSH2 0x223C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2233 SWAP1 PUSH2 0x3C34 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x224B PUSH2 0x1B11 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2267 JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP PUSH2 0x22A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFB SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ PUSH2 0x2282 JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x22A8 JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22B6 PUSH2 0x1BA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x22D2 JUMPI DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP POP PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFC SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 EQ PUSH2 0x22ED JUMPI DUP1 SWAP3 POP POP POP PUSH2 0x2313 JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2350 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2335 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2378 DUP3 PUSH2 0x2316 JUMP JUMPDEST PUSH2 0x2382 DUP2 DUP6 PUSH2 0x2321 JUMP JUMPDEST SWAP4 POP PUSH2 0x2392 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2332 JUMP JUMPDEST PUSH2 0x239B DUP2 PUSH2 0x235C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23C0 DUP2 DUP5 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2407 DUP3 PUSH2 0x23DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2417 DUP2 PUSH2 0x23FC JUMP JUMPDEST DUP2 EQ PUSH2 0x2422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2434 DUP2 PUSH2 0x240E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244D DUP2 PUSH2 0x243A JUMP JUMPDEST DUP2 EQ PUSH2 0x2458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x246A DUP2 PUSH2 0x2444 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2487 JUMPI PUSH2 0x2486 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2495 DUP6 DUP3 DUP7 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24A6 DUP6 DUP3 DUP7 ADD PUSH2 0x245B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24C5 DUP2 PUSH2 0x24B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24E0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24EF DUP2 PUSH2 0x243A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x250A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x24E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2529 JUMPI PUSH2 0x2528 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2537 DUP7 DUP3 DUP8 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2548 DUP7 DUP3 DUP8 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2559 DUP7 DUP3 DUP8 ADD PUSH2 0x245B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2579 DUP2 PUSH2 0x2563 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2594 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25AD DUP2 PUSH2 0x259A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E4 JUMPI PUSH2 0x25E3 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25F2 DUP5 DUP3 DUP6 ADD PUSH2 0x245B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2611 JUMPI PUSH2 0x2610 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x261F DUP5 DUP3 DUP6 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x265D DUP2 PUSH2 0x2628 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x266C DUP2 PUSH2 0x23FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A7 DUP2 PUSH2 0x243A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B9 DUP4 DUP4 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26DD DUP3 PUSH2 0x2672 JUMP JUMPDEST PUSH2 0x26E7 DUP2 DUP6 PUSH2 0x267D JUMP JUMPDEST SWAP4 POP PUSH2 0x26F2 DUP4 PUSH2 0x268E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2723 JUMPI DUP2 MLOAD PUSH2 0x270A DUP9 DUP3 PUSH2 0x26AD JUMP JUMPDEST SWAP8 POP PUSH2 0x2715 DUP4 PUSH2 0x26C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26F6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2745 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x2654 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2757 DUP2 DUP10 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x276B DUP2 DUP9 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP PUSH2 0x277A PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x24E6 JUMP JUMPDEST PUSH2 0x2787 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2663 JUMP JUMPDEST PUSH2 0x2794 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x25A4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x27A6 DUP2 DUP5 PUSH2 0x26D2 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2663 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x280C DUP3 PUSH2 0x235C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x282B JUMPI PUSH2 0x282A PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x283E PUSH2 0x23C8 JUMP JUMPDEST SWAP1 POP PUSH2 0x284A DUP3 DUP3 PUSH2 0x2803 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x286A JUMPI PUSH2 0x2869 PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2893 PUSH2 0x288E DUP5 PUSH2 0x284F JUMP JUMPDEST PUSH2 0x2834 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x28B6 JUMPI PUSH2 0x28B5 PUSH2 0x287B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28DF JUMPI DUP1 PUSH2 0x28CB DUP9 DUP3 PUSH2 0x2425 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28B8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28FE JUMPI PUSH2 0x28FD PUSH2 0x27CF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x290E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2880 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2932 JUMPI PUSH2 0x2931 PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2956 PUSH2 0x2951 DUP5 PUSH2 0x2917 JUMP JUMPDEST PUSH2 0x2834 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2979 JUMPI PUSH2 0x2978 PUSH2 0x287B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29A2 JUMPI DUP1 PUSH2 0x298E DUP9 DUP3 PUSH2 0x245B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x297B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29C1 JUMPI PUSH2 0x29C0 PUSH2 0x27CF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x29D1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2943 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29F1 JUMPI PUSH2 0x29F0 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A0F JUMPI PUSH2 0x2A0E PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH2 0x2A1B DUP6 DUP3 DUP7 ADD PUSH2 0x28E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A3C JUMPI PUSH2 0x2A3B PUSH2 0x23D7 JUMP JUMPDEST JUMPDEST PUSH2 0x2A48 DUP6 DUP3 DUP7 ADD PUSH2 0x29AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A5B DUP2 PUSH2 0x2563 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A78 DUP2 PUSH2 0x2A52 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A87 DUP2 PUSH2 0x259A JUMP JUMPDEST DUP2 EQ PUSH2 0x2A92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AA4 DUP2 PUSH2 0x2A7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2AC9 JUMPI PUSH2 0x2AC8 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AD7 DUP11 DUP3 DUP12 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x2AE8 DUP11 DUP3 DUP12 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x2AF9 DUP11 DUP3 DUP12 ADD PUSH2 0x245B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x2B0A DUP11 DUP3 DUP12 ADD PUSH2 0x245B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x2B1B DUP11 DUP3 DUP12 ADD PUSH2 0x2A69 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x2B2C DUP11 DUP3 DUP12 ADD PUSH2 0x2A95 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x2B3D DUP11 DUP3 DUP12 ADD PUSH2 0x2A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B63 JUMPI PUSH2 0x2B62 PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B71 DUP6 DUP3 DUP7 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B82 DUP6 DUP3 DUP7 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x2BAF JUMPI PUSH2 0x2BAE PUSH2 0x23D2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BBD DUP13 DUP3 DUP14 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0x2BCE DUP13 DUP3 DUP14 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0x2BDF DUP13 DUP3 DUP14 ADD PUSH2 0x2425 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x2BF0 DUP13 DUP3 DUP14 ADD PUSH2 0x245B JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x2C01 DUP13 DUP3 DUP14 ADD PUSH2 0x245B JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x2C12 DUP13 DUP3 DUP14 ADD PUSH2 0x245B JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0x2C23 DUP13 DUP3 DUP14 ADD PUSH2 0x2A69 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 PUSH2 0x2C34 DUP13 DUP3 DUP14 ADD PUSH2 0x2A95 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH2 0x2C46 DUP13 DUP3 DUP14 ADD PUSH2 0x2A95 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C9D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2CB0 JUMPI PUSH2 0x2CAF PUSH2 0x2C56 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CF0 DUP3 PUSH2 0x243A JUMP JUMPDEST SWAP2 POP PUSH2 0x2CFB DUP4 PUSH2 0x243A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D13 JUMPI PUSH2 0x2D12 PUSH2 0x2CB6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D75 PUSH1 0x2E DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D80 DUP3 PUSH2 0x2D19 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DA4 DUP2 PUSH2 0x2D68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DDA PUSH2 0x2DD5 PUSH2 0x2DD0 DUP5 PUSH2 0x2DAB JUMP JUMPDEST PUSH2 0x2DB5 JUMP JUMPDEST PUSH2 0x2563 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DEA DUP2 PUSH2 0x2DBF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4549503731323A20556E696E697469616C697A65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E41 PUSH1 0x15 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E4C DUP3 PUSH2 0x2E0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E70 DUP2 PUSH2 0x2E34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ED3 PUSH1 0x25 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EDE DUP3 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F02 DUP2 PUSH2 0x2EC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F6E PUSH1 0x1D DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F79 DUP3 PUSH2 0x2F38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F9D DUP2 PUSH2 0x2F61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2FB9 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x2FC6 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2663 JUMP JUMPDEST PUSH2 0x2FD3 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2663 JUMP JUMPDEST PUSH2 0x2FE0 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x24E6 JUMP JUMPDEST PUSH2 0x2FED PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x24E6 JUMP JUMPDEST PUSH2 0x2FFA PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x24E6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x303B PUSH1 0x1E DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3046 DUP3 PUSH2 0x3005 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x306A DUP2 PUSH2 0x302E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30CD PUSH1 0x26 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x30D8 DUP3 PUSH2 0x3071 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30FC DUP2 PUSH2 0x30C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315F PUSH1 0x24 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x316A DUP3 PUSH2 0x3103 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x318E DUP2 PUSH2 0x3152 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31F1 PUSH1 0x22 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x31FC DUP3 PUSH2 0x3195 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3220 DUP2 PUSH2 0x31E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x325D PUSH1 0x1D DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3268 DUP3 PUSH2 0x3227 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x328C DUP2 PUSH2 0x3250 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32EF PUSH1 0x25 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x32FA DUP3 PUSH2 0x3293 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x331E DUP2 PUSH2 0x32E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3381 PUSH1 0x23 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x338C DUP3 PUSH2 0x3325 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33B0 DUP2 PUSH2 0x3374 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3413 PUSH1 0x26 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x341E DUP3 PUSH2 0x33B7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3442 DUP2 PUSH2 0x3406 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347F PUSH1 0x20 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x348A DUP3 PUSH2 0x3449 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34AE DUP2 PUSH2 0x3472 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34EB PUSH1 0x1F DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x34F6 DUP3 PUSH2 0x34B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x351A DUP2 PUSH2 0x34DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x357D PUSH1 0x21 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3588 DUP3 PUSH2 0x3521 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35AC DUP2 PUSH2 0x3570 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360F PUSH1 0x22 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x361A DUP3 PUSH2 0x35B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x363E DUP2 PUSH2 0x3602 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A1 PUSH1 0x2B DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x36AC DUP3 PUSH2 0x3645 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36D0 DUP2 PUSH2 0x3694 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x36EC PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x36F9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x3706 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x3713 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x24E6 JUMP JUMPDEST PUSH2 0x3720 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2663 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3760 PUSH1 0x14 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x376B DUP3 PUSH2 0x372A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x378F DUP2 PUSH2 0x3753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x37F8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x37BB JUMP JUMPDEST PUSH2 0x3802 DUP7 DUP4 PUSH2 0x37BB JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3835 PUSH2 0x3830 PUSH2 0x382B DUP5 PUSH2 0x243A JUMP JUMPDEST PUSH2 0x2DB5 JUMP JUMPDEST PUSH2 0x243A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x384F DUP4 PUSH2 0x381A JUMP JUMPDEST PUSH2 0x3863 PUSH2 0x385B DUP3 PUSH2 0x383C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x37C8 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3878 PUSH2 0x386B JUMP JUMPDEST PUSH2 0x3883 DUP2 DUP5 DUP5 PUSH2 0x3846 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x38A7 JUMPI PUSH2 0x389C PUSH1 0x0 DUP3 PUSH2 0x3870 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3889 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x38EC JUMPI PUSH2 0x38BD DUP2 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x38C6 DUP5 PUSH2 0x37AB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x38D5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x38E9 PUSH2 0x38E1 DUP6 PUSH2 0x37AB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3888 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x390F PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x38F1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3928 DUP4 DUP4 PUSH2 0x38FE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3941 DUP3 PUSH2 0x2316 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x395A JUMPI PUSH2 0x3959 PUSH2 0x27D4 JUMP JUMPDEST JUMPDEST PUSH2 0x3964 DUP3 SLOAD PUSH2 0x2C85 JUMP JUMPDEST PUSH2 0x396F DUP3 DUP3 DUP6 PUSH2 0x38AB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x39A2 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3990 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x399A DUP6 DUP3 PUSH2 0x391C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A02 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x39B0 DUP7 PUSH2 0x3796 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39D8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39B3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x39F5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x39F1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x38FE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A40 PUSH1 0x10 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A4B DUP3 PUSH2 0x3A0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A6F DUP2 PUSH2 0x3A33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3A8B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x3A98 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2570 JUMP JUMPDEST PUSH2 0x3AA5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x25A4 JUMP JUMPDEST PUSH2 0x3AB2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x25A4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B20 PUSH1 0x18 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B2B DUP3 PUSH2 0x3AEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B4F DUP2 PUSH2 0x3B13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8C PUSH1 0x1F DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B97 DUP3 PUSH2 0x3B56 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BBB DUP2 PUSH2 0x3B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C1E PUSH1 0x22 DUP4 PUSH2 0x2321 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C29 DUP3 PUSH2 0x3BC2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C4D DUP2 PUSH2 0x3C11 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 GT 0xEB PUSH22 0x360F3B62E3A8E6BA1F0C5E3B9853DF8263CCFEF21DD PUSH1 0x23 PUSH13 0x68624564736F6C634300081200 CALLER ","sourceMap":"575:1436:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:98:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4802:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3613:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5561:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3462:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3287:113:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6212:234:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1214:63:19;;;:::i;:::-;;1283:83;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;869:89:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1879:84:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3777:125:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2085:101:0;;;:::i;:::-;;1264:161:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3043:126:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;836:307:19;;;:::i;:::-;;1149:59;;;:::i;:::-;;4521:861:16;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1462:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2727:102:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6933:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4098:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1372:248:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2341:637:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4345:149:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2335:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1625:384:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2516:98:4;2570:13;2602:5;2595:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:98;:::o;4802:197::-;4885:4;4901:13;4917:12;:10;:12::i;:::-;4901:28;;4939:32;4948:5;4955:7;4964:6;4939:8;:32::i;:::-;4988:4;4981:11;;;4802:197;;;;:::o;3613:106::-;3674:7;3700:12;;3693:19;;3613:106;:::o;5561:256::-;5658:4;5674:15;5692:12;:10;:12::i;:::-;5674:30;;5714:38;5730:4;5736:7;5745:6;5714:15;:38::i;:::-;5762:27;5772:4;5778:2;5782:6;5762:9;:27::i;:::-;5806:4;5799:11;;;5561:256;;;;;:::o;3462:91::-;3520:5;3544:2;3537:9;;3462:91;:::o;3287:113:7:-;3347:7;3373:20;:18;:20::i;:::-;3366:27;;3287:113;:::o;6212:234:4:-;6300:4;6316:13;6332:12;:10;:12::i;:::-;6316:28;;6354:64;6363:5;6370:7;6407:10;6379:25;6389:5;6396:7;6379:9;:25::i;:::-;:38;;;;:::i;:::-;6354:8;:64::i;:::-;6435:4;6428:11;;;6212:234;;;;:::o;1214:63:19:-;1355:13:0;:11;:13::i;:::-;1260:10:19::1;:8;:10::i;:::-;1214:63::o:0;1283:83::-;1342:17;1348:2;1352:6;1342:5;:17::i;:::-;1283:83;;:::o;869:89:6:-;924:27;930:12;:10;:12::i;:::-;944:6;924:5;:27::i;:::-;869:89;:::o;1879:84:3:-;1926:4;1949:7;;;;;;;;;;;1942:14;;1879:84;:::o;3777:125:4:-;3851:7;3877:9;:18;3887:7;3877:18;;;;;;;;;;;;;;;;3870:25;;3777:125;;;:::o;2085:101:0:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;1264:161:6:-;1340:46;1356:7;1365:12;:10;:12::i;:::-;1379:6;1340:15;:46::i;:::-;1396:22;1402:7;1411:6;1396:5;:22::i;:::-;1264:161;;:::o;3043:126:7:-;3112:7;3138:24;:7;:14;3146:5;3138:14;;;;;;;;;;;;;;;:22;:24::i;:::-;3131:31;;3043:126;;;:::o;836:307:19:-;3279:19:2;3302:13;;;;;;;;;;;3301:14;3279:36;;3347:14;:34;;;;;3380:1;3365:12;;;;;;;;;;:16;;;3347:34;3346:108;;;;3388:44;3426:4;3388:29;:44::i;:::-;3387:45;:66;;;;;3452:1;3436:12;;;;;;;;;;:17;;;3387:66;3346:108;3325:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3551:1;3536:12;;:16;;;;;;;;;;;;;;;;;;3566:14;3562:65;;;3612:4;3596:13;;:20;;;;;;;;;;;;;;;;;;3562:65;887:29:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:29::i;:::-;926:22;:20;:22::i;:::-;958:17;:15;:17::i;:::-;985:16;:14;:16::i;:::-;1011:29;;;;;;;;;;;;;;;;;::::0;:18:::1;:29::i;:::-;3651:14:2::0;3647:99;;;3697:5;3681:13;;:21;;;;;;;;;;;;;;;;;;3721:14;3733:1;3721:14;;;;;;:::i;:::-;;;;;;;;3647:99;3269:483;836:307:19:o;1149:59::-;1355:13:0;:11;:13::i;:::-;1193:8:19::1;:6;:8::i;:::-;1149:59::o:0;4521:861:16:-;4636:13;4663:18;4695:21;4730:15;4759:25;4798:12;4824:27;5102:1;5087:16;;:11;;:16;:39;;;;;5125:1;5107:19;;:14;;:19;5087:39;5079:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;5214:13;:11;:13::i;:::-;5241:16;:14;:16::i;:::-;5271:13;5306:4;5333:1;5325:10;;5363:1;5349:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5163:212;;;;;;;;;;;;;;;;;;;;;4521:861;;;;;;;:::o;1462:85:0:-;1508:7;1534:6;;;;;;;;;;;1527:13;;1462:85;:::o;2727:102:4:-;2783:13;2815:7;2808:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2727:102;:::o;6933:427::-;7026:4;7042:13;7058:12;:10;:12::i;:::-;7042:28;;7080:24;7107:25;7117:5;7124:7;7107:9;:25::i;:::-;7080:52;;7170:15;7150:16;:35;;7142:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7261:60;7270:5;7277:7;7305:15;7286:16;:34;7261:8;:60::i;:::-;7349:4;7342:11;;;;6933:427;;;;:::o;4098:189::-;4177:4;4193:13;4209:12;:10;:12::i;:::-;4193:28;;4231;4241:5;4248:2;4252:6;4231:9;:28::i;:::-;4276:4;4269:11;;;4098:189;;;;:::o;1372:248:19:-;1456:7;1475:9;1487:1;1475:13;;1498:97;1509:5;:12;1505:1;:16;1498:97;;;1536:29;1545:5;1551:1;1545:8;;;;;;;;:::i;:::-;;;;;;;;1555:6;1562:1;1555:9;;;;;;;;:::i;:::-;;;;;;;;1536:8;:29::i;:::-;;1583:1;1578:6;;;;;:::i;:::-;;;1498:97;;;1611:1;1604:9;;;1372:248;;;;:::o;2341:637:7:-;2576:8;2557:15;:27;;2549:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2629:18;1372:95;2689:5;2696:7;2705:5;2712:16;2722:5;2712:9;:16::i;:::-;2730:8;2660:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2650:90;;;;;;2629:111;;2751:12;2766:28;2783:10;2766:16;:28::i;:::-;2751:43;;2805:14;2822:39;2847:4;2853:1;2856;2859;2822:24;:39::i;:::-;2805:56;;2889:5;2879:15;;:6;:15;;;2871:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2940:31;2949:5;2956:7;2965:5;2940:8;:31::i;:::-;2539:439;;;2341:637;;;;;;;:::o;4345:149:4:-;4434:7;4460:11;:18;4472:5;4460:18;;;;;;;;;;;;;;;:27;4479:7;4460:27;;;;;;;;;;;;;;;;4453:34;;4345:149;;;;:::o;2335:198:0:-;1355:13;:11;:13::i;:::-;2443:1:::1;2423:22;;:8;:22;;::::0;2415:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2498:28;2517:8;2498:18;:28::i;:::-;2335:198:::0;:::o;1625:384:19:-;1829:54;1836:5;1843:7;1860:3;1852:5;:11;;;;:::i;:::-;1865:8;1875:1;1878;1881;1829:6;:54::i;:::-;1919:37;1932:5;1939:9;1950:5;1919:12;:37::i;:::-;;1966:36;1979:5;1986:10;1998:3;1966:12;:36::i;:::-;;1625:384;;;;;;;;;:::o;886:96:12:-;939:7;965:10;958:17;;886:96;:::o;10815:340:4:-;10933:1;10916:19;;:5;:19;;;10908:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11013:1;10994:21;;:7;:21;;;10986:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11095:6;11065:11;:18;11077:5;11065:18;;;;;;;;;;;;;;;:27;11084:7;11065:27;;;;;;;;;;;;;;;:36;;;;11132:7;11116:32;;11125:5;11116:32;;;11141:6;11116:32;;;;;;:::i;:::-;;;;;;;;10815:340;;;:::o;11436:411::-;11536:24;11563:25;11573:5;11580:7;11563:9;:25::i;:::-;11536:52;;11622:17;11602:16;:37;11598:243;;11683:6;11663:16;:26;;11655:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11765:51;11774:5;11781:7;11809:6;11790:16;:25;11765:8;:51::i;:::-;11598:243;11526:321;11436:411;;;:::o;7814:788::-;7926:1;7910:18;;:4;:18;;;7902:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8002:1;7988:16;;:2;:16;;;7980:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;8055:38;8076:4;8082:2;8086:6;8055:20;:38::i;:::-;8104:19;8126:9;:15;8136:4;8126:15;;;;;;;;;;;;;;;;8104:37;;8174:6;8159:11;:21;;8151:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8289:6;8275:11;:20;8257:9;:15;8267:4;8257:15;;;;;;;;;;;;;;;:38;;;;8489:6;8472:9;:13;8482:2;8472:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8536:2;8521:26;;8530:4;8521:26;;;8540:6;8521:26;;;;;;:::i;:::-;;;;;;;;8558:37;8578:4;8584:2;8588:6;8558:19;:37::i;:::-;7892:710;7814:788;;;:::o;3325:109:16:-;3378:7;3404:23;:21;:23::i;:::-;3397:30;;3325:109;:::o;1620:130:0:-;1694:12;:10;:12::i;:::-;1683:23;;:7;:5;:7::i;:::-;:23;;;1675:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1620:130::o;2697:117:3:-;1750:16;:14;:16::i;:::-;2765:5:::1;2755:7;;:15;;;;;;;;;;;;;;;;;;2785:22;2794:12;:10;:12::i;:::-;2785:22;;;;;;:::i;:::-;;;;;;;;2697:117::o:0;8878:535:4:-;8980:1;8961:21;;:7;:21;;;8953:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;9029:49;9058:1;9062:7;9071:6;9029:20;:49::i;:::-;9105:6;9089:12;;:22;;;;;;;:::i;:::-;;;;;;;;9279:6;9257:9;:18;9267:7;9257:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9331:7;9310:37;;9327:1;9310:37;;;9340:6;9310:37;;;;;;:::i;:::-;;;;;;;;9358:48;9386:1;9390:7;9399:6;9358:19;:48::i;:::-;8878:535;;:::o;9733:659::-;9835:1;9816:21;;:7;:21;;;9808:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9886:49;9907:7;9924:1;9928:6;9886:20;:49::i;:::-;9946:22;9971:9;:18;9981:7;9971:18;;;;;;;;;;;;;;;;9946:43;;10025:6;10007:14;:24;;9999:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;10142:6;10125:14;:23;10104:9;:18;10114:7;10104:18;;;;;;;;;;;;;;;:44;;;;10257:6;10241:12;;:22;;;;;;;;;;;10315:1;10289:37;;10298:7;10289:37;;;10319:6;10289:37;;;;;;:::i;:::-;;;;;;;;10337:48;10357:7;10374:1;10378:6;10337:19;:48::i;:::-;9798:594;9733:659;;:::o;2687:187:0:-;2760:16;2779:6;;;;;;;;;;;2760:25;;2804:8;2795:6;;:17;;;;;;;;;;;;;;;;;;2858:8;2827:40;;2848:8;2827:40;;;;;;;;;;;;2750:124;2687:187;:::o;838:112:13:-;903:7;929;:14;;;922:21;;838:112;;;:::o;1423:320:11:-;1483:4;1735:1;1713:7;:19;;;:23;1706:30;;1423:320;;;:::o;2139:147:4:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:38:4::1;2264:5;2271:7;2241:22;:38::i;:::-;2139:147:::0;;:::o;615:65:6:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;615:65:6:o;1084:97:3:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1147:27:3::1;:25;:27::i;:::-;1084:97::o:0;1024:95:0:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1086:26:0::1;:24;:26::i;:::-;1024:95::o:0;2064:125:7:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2148:34:7::1;2172:4;2148:34;;;;;;;;;;;;;;;;::::0;:23:::1;:34::i;:::-;2064:125:::0;:::o;2450:115:3:-;1503:19;:17;:19::i;:::-;2519:4:::1;2509:7;;:14;;;;;;;;;;;;;;;;;;2538:20;2545:12;:10;:12::i;:::-;2538:20;;;;;;:::i;:::-;;;;;;;;2450:115::o:0;5606:98:16:-;5660:13;5692:5;5685:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5606:98;:::o;5931:104::-;5988:13;6020:8;6013:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5931:104;:::o;3531:214:7:-;3591:15;3618:41;3662:7;:14;3670:5;3662:14;;;;;;;;;;;;;;;3618:58;;3696:15;:5;:13;:15::i;:::-;3686:25;;3721:17;:5;:15;:17::i;:::-;3608:137;3531:214;;;:::o;4257:176:16:-;4334:7;4360:66;4393:20;:18;:20::i;:::-;4415:10;4360:32;:66::i;:::-;4353:73;;4257:176;;;:::o;6620:232:15:-;6705:7;6725:17;6744:18;6766:25;6777:4;6783:1;6786;6789;6766:10;:25::i;:::-;6724:67;;;;6801:18;6813:5;6801:11;:18::i;:::-;6836:9;6829:16;;;;6620:232;;;;;;:::o;12431:91:4:-;;;;:::o;13110:90::-;;;;:::o;3440:192:16:-;3495:7;1934:95;3554:17;:15;:17::i;:::-;3573:20;:18;:20::i;:::-;3595:13;3618:4;3531:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3521:104;;;;;;3514:111;;3440:192;:::o;2209:106:3:-;2275:8;:6;:8::i;:::-;2267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:106::o;2292:159:4:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2412:5:4::1;2404;:13;;;;;;:::i;:::-;;2437:7;2427;:17;;;;;;:::i;:::-;;2292:159:::0;;:::o;1187:95:3:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1270:5:3::1;1260:7;;:15;;;;;;;;;;;;;;;;;;1187:95::o:0;1125:111:0:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1197:32:0::1;1216:12;:10;:12::i;:::-;1197:18;:32::i;:::-;1125:111::o:0;2972:267:16:-;5374:13:2;;;;;;;;;;;5366:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3092:4:16::1;3084:5;:12;;;;;;:::i;:::-;;3117:7;3106:8;:18;;;;;;:::i;:::-;;3203:1;3189:15:::0;::::1;:11;:15;;;;3231:1;3214:18:::0;::::1;:14;:18;;;;2972:267:::0;;:::o;2031:106:3:-;2101:8;:6;:8::i;:::-;2100:9;2092:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:106::o;956:123:13:-;1061:1;1043:7;:14;;;:19;;;;;;;;;;;956:123;:::o;8369:397:15:-;8462:12;8569:4;8563:11;8599:10;8594:3;8587:23;8646:15;8639:4;8634:3;8630:14;8623:39;8698:10;8691:4;8686:3;8682:14;8675:34;8745:4;8740:3;8730:20;8722:28;;8538:222;8369:397;;;;:::o;5031:1456::-;5119:7;5128:12;6043:66;6038:1;6030:10;;:79;6026:161;;;6141:1;6145:30;6125:51;;;;;;6026:161;6281:14;6298:24;6308:4;6314:1;6317;6320;6298:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6281:41;;6354:1;6336:20;;:6;:20;;;6332:101;;6388:1;6392:29;6372:50;;;;;;;6332:101;6451:6;6459:20;6443:37;;;;;5031:1456;;;;;;;;:::o;592:511::-;669:20;660:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;656:441;705:7;656:441;765:29;756:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;752:345;;810:34;;;;;;;;;;:::i;:::-;;;;;;;;752:345;874:35;865:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;861:236;;925:41;;;;;;;;;;:::i;:::-;;;;;;;;861:236;996:30;987:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;983:114;;1042:44;;;;;;;;;;:::i;:::-;;;;;;;;983:114;592:511;;:::o;6250:630:16:-;6300:7;6319:18;6340:13;:11;:13::i;:::-;6319:34;;6388:1;6373:4;6367:18;:22;6363:511;;;6428:4;6412:22;;;;;;6405:29;;;;;6363:511;6688:18;6709:11;;6688:32;;6752:1;6738:15;;:10;:15;6734:130;;6780:10;6773:17;;;;;;6734:130;6836:13;6829:20;;;;6250:630;;:::o;7101:666::-;7154:7;7173:21;7197:16;:14;:16::i;:::-;7173:40;;7251:1;7233:7;7227:21;:25;7223:538;;;7291:7;7275:25;;;;;;7268:32;;;;;7223:538;7563:21;7587:14;;7563:38;;7636:1;7619:18;;:13;:18;7615:136;;7664:13;7657:20;;;;;;7615:136;7723:13;7716:20;;;;7101:666;;:::o;7:99:20:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:::-;5682:6;5731:2;5719:9;5710:7;5706:23;5702:32;5699:119;;;5737:79;;:::i;:::-;5699:119;5857:1;5882:53;5927:7;5918:6;5907:9;5903:22;5882:53;:::i;:::-;5872:63;;5828:117;5623:329;;;;:::o;5958:149::-;5994:7;6034:66;6027:5;6023:78;6012:89;;5958:149;;;:::o;6113:115::-;6198:23;6215:5;6198:23;:::i;:::-;6193:3;6186:36;6113:115;;:::o;6234:118::-;6321:24;6339:5;6321:24;:::i;:::-;6316:3;6309:37;6234:118;;:::o;6358:114::-;6425:6;6459:5;6453:12;6443:22;;6358:114;;;:::o;6478:184::-;6577:11;6611:6;6606:3;6599:19;6651:4;6646:3;6642:14;6627:29;;6478:184;;;;:::o;6668:132::-;6735:4;6758:3;6750:11;;6788:4;6783:3;6779:14;6771:22;;6668:132;;;:::o;6806:108::-;6883:24;6901:5;6883:24;:::i;:::-;6878:3;6871:37;6806:108;;:::o;6920:179::-;6989:10;7010:46;7052:3;7044:6;7010:46;:::i;:::-;7088:4;7083:3;7079:14;7065:28;;6920:179;;;;:::o;7105:113::-;7175:4;7207;7202:3;7198:14;7190:22;;7105:113;;;:::o;7254:732::-;7373:3;7402:54;7450:5;7402:54;:::i;:::-;7472:86;7551:6;7546:3;7472:86;:::i;:::-;7465:93;;7582:56;7632:5;7582:56;:::i;:::-;7661:7;7692:1;7677:284;7702:6;7699:1;7696:13;7677:284;;;7778:6;7772:13;7805:63;7864:3;7849:13;7805:63;:::i;:::-;7798:70;;7891:60;7944:6;7891:60;:::i;:::-;7881:70;;7737:224;7724:1;7721;7717:9;7712:14;;7677:284;;;7681:14;7977:3;7970:10;;7378:608;;;7254:732;;;;:::o;7992:1215::-;8341:4;8379:3;8368:9;8364:19;8356:27;;8393:69;8459:1;8448:9;8444:17;8435:6;8393:69;:::i;:::-;8509:9;8503:4;8499:20;8494:2;8483:9;8479:18;8472:48;8537:78;8610:4;8601:6;8537:78;:::i;:::-;8529:86;;8662:9;8656:4;8652:20;8647:2;8636:9;8632:18;8625:48;8690:78;8763:4;8754:6;8690:78;:::i;:::-;8682:86;;8778:72;8846:2;8835:9;8831:18;8822:6;8778:72;:::i;:::-;8860:73;8928:3;8917:9;8913:19;8904:6;8860:73;:::i;:::-;8943;9011:3;9000:9;8996:19;8987:6;8943:73;:::i;:::-;9064:9;9058:4;9054:20;9048:3;9037:9;9033:19;9026:49;9092:108;9195:4;9186:6;9092:108;:::i;:::-;9084:116;;7992:1215;;;;;;;;;;:::o;9213:222::-;9306:4;9344:2;9333:9;9329:18;9321:26;;9357:71;9425:1;9414:9;9410:17;9401:6;9357:71;:::i;:::-;9213:222;;;;:::o;9441:117::-;9550:1;9547;9540:12;9564:180;9612:77;9609:1;9602:88;9709:4;9706:1;9699:15;9733:4;9730:1;9723:15;9750:281;9833:27;9855:4;9833:27;:::i;:::-;9825:6;9821:40;9963:6;9951:10;9948:22;9927:18;9915:10;9912:34;9909:62;9906:88;;;9974:18;;:::i;:::-;9906:88;10014:10;10010:2;10003:22;9793:238;9750:281;;:::o;10037:129::-;10071:6;10098:20;;:::i;:::-;10088:30;;10127:33;10155:4;10147:6;10127:33;:::i;:::-;10037:129;;;:::o;10172:311::-;10249:4;10339:18;10331:6;10328:30;10325:56;;;10361:18;;:::i;:::-;10325:56;10411:4;10403:6;10399:17;10391:25;;10471:4;10465;10461:15;10453:23;;10172:311;;;:::o;10489:117::-;10598:1;10595;10588:12;10629:710;10725:5;10750:81;10766:64;10823:6;10766:64;:::i;:::-;10750:81;:::i;:::-;10741:90;;10851:5;10880:6;10873:5;10866:21;10914:4;10907:5;10903:16;10896:23;;10967:4;10959:6;10955:17;10947:6;10943:30;10996:3;10988:6;10985:15;10982:122;;;11015:79;;:::i;:::-;10982:122;11130:6;11113:220;11147:6;11142:3;11139:15;11113:220;;;11222:3;11251:37;11284:3;11272:10;11251:37;:::i;:::-;11246:3;11239:50;11318:4;11313:3;11309:14;11302:21;;11189:144;11173:4;11168:3;11164:14;11157:21;;11113:220;;;11117:21;10731:608;;10629:710;;;;;:::o;11362:370::-;11433:5;11482:3;11475:4;11467:6;11463:17;11459:27;11449:122;;11490:79;;:::i;:::-;11449:122;11607:6;11594:20;11632:94;11722:3;11714:6;11707:4;11699:6;11695:17;11632:94;:::i;:::-;11623:103;;11439:293;11362:370;;;;:::o;11738:311::-;11815:4;11905:18;11897:6;11894:30;11891:56;;;11927:18;;:::i;:::-;11891:56;11977:4;11969:6;11965:17;11957:25;;12037:4;12031;12027:15;12019:23;;11738:311;;;:::o;12072:710::-;12168:5;12193:81;12209:64;12266:6;12209:64;:::i;:::-;12193:81;:::i;:::-;12184:90;;12294:5;12323:6;12316:5;12309:21;12357:4;12350:5;12346:16;12339:23;;12410:4;12402:6;12398:17;12390:6;12386:30;12439:3;12431:6;12428:15;12425:122;;;12458:79;;:::i;:::-;12425:122;12573:6;12556:220;12590:6;12585:3;12582:15;12556:220;;;12665:3;12694:37;12727:3;12715:10;12694:37;:::i;:::-;12689:3;12682:50;12761:4;12756:3;12752:14;12745:21;;12632:144;12616:4;12611:3;12607:14;12600:21;;12556:220;;;12560:21;12174:608;;12072:710;;;;;:::o;12805:370::-;12876:5;12925:3;12918:4;12910:6;12906:17;12902:27;12892:122;;12933:79;;:::i;:::-;12892:122;13050:6;13037:20;13075:94;13165:3;13157:6;13150:4;13142:6;13138:17;13075:94;:::i;:::-;13066:103;;12882:293;12805:370;;;;:::o;13181:894::-;13299:6;13307;13356:2;13344:9;13335:7;13331:23;13327:32;13324:119;;;13362:79;;:::i;:::-;13324:119;13510:1;13499:9;13495:17;13482:31;13540:18;13532:6;13529:30;13526:117;;;13562:79;;:::i;:::-;13526:117;13667:78;13737:7;13728:6;13717:9;13713:22;13667:78;:::i;:::-;13657:88;;13453:302;13822:2;13811:9;13807:18;13794:32;13853:18;13845:6;13842:30;13839:117;;;13875:79;;:::i;:::-;13839:117;13980:78;14050:7;14041:6;14030:9;14026:22;13980:78;:::i;:::-;13970:88;;13765:303;13181:894;;;;;:::o;14081:118::-;14152:22;14168:5;14152:22;:::i;:::-;14145:5;14142:33;14132:61;;14189:1;14186;14179:12;14132:61;14081:118;:::o;14205:135::-;14249:5;14287:6;14274:20;14265:29;;14303:31;14328:5;14303:31;:::i;:::-;14205:135;;;;:::o;14346:122::-;14419:24;14437:5;14419:24;:::i;:::-;14412:5;14409:35;14399:63;;14458:1;14455;14448:12;14399:63;14346:122;:::o;14474:139::-;14520:5;14558:6;14545:20;14536:29;;14574:33;14601:5;14574:33;:::i;:::-;14474:139;;;;:::o;14619:1199::-;14730:6;14738;14746;14754;14762;14770;14778;14827:3;14815:9;14806:7;14802:23;14798:33;14795:120;;;14834:79;;:::i;:::-;14795:120;14954:1;14979:53;15024:7;15015:6;15004:9;15000:22;14979:53;:::i;:::-;14969:63;;14925:117;15081:2;15107:53;15152:7;15143:6;15132:9;15128:22;15107:53;:::i;:::-;15097:63;;15052:118;15209:2;15235:53;15280:7;15271:6;15260:9;15256:22;15235:53;:::i;:::-;15225:63;;15180:118;15337:2;15363:53;15408:7;15399:6;15388:9;15384:22;15363:53;:::i;:::-;15353:63;;15308:118;15465:3;15492:51;15535:7;15526:6;15515:9;15511:22;15492:51;:::i;:::-;15482:61;;15436:117;15592:3;15619:53;15664:7;15655:6;15644:9;15640:22;15619:53;:::i;:::-;15609:63;;15563:119;15721:3;15748:53;15793:7;15784:6;15773:9;15769:22;15748:53;:::i;:::-;15738:63;;15692:119;14619:1199;;;;;;;;;;:::o;15824:474::-;15892:6;15900;15949:2;15937:9;15928:7;15924:23;15920:32;15917:119;;;15955:79;;:::i;:::-;15917:119;16075:1;16100:53;16145:7;16136:6;16125:9;16121:22;16100:53;:::i;:::-;16090:63;;16046:117;16202:2;16228:53;16273:7;16264:6;16253:9;16249:22;16228:53;:::i;:::-;16218:63;;16173:118;15824:474;;;;;:::o;16304:1491::-;16433:6;16441;16449;16457;16465;16473;16481;16489;16497;16546:3;16534:9;16525:7;16521:23;16517:33;16514:120;;;16553:79;;:::i;:::-;16514:120;16673:1;16698:53;16743:7;16734:6;16723:9;16719:22;16698:53;:::i;:::-;16688:63;;16644:117;16800:2;16826:53;16871:7;16862:6;16851:9;16847:22;16826:53;:::i;:::-;16816:63;;16771:118;16928:2;16954:53;16999:7;16990:6;16979:9;16975:22;16954:53;:::i;:::-;16944:63;;16899:118;17056:2;17082:53;17127:7;17118:6;17107:9;17103:22;17082:53;:::i;:::-;17072:63;;17027:118;17184:3;17211:53;17256:7;17247:6;17236:9;17232:22;17211:53;:::i;:::-;17201:63;;17155:119;17313:3;17340:53;17385:7;17376:6;17365:9;17361:22;17340:53;:::i;:::-;17330:63;;17284:119;17442:3;17469:51;17512:7;17503:6;17492:9;17488:22;17469:51;:::i;:::-;17459:61;;17413:117;17569:3;17596:53;17641:7;17632:6;17621:9;17617:22;17596:53;:::i;:::-;17586:63;;17540:119;17698:3;17725:53;17770:7;17761:6;17750:9;17746:22;17725:53;:::i;:::-;17715:63;;17669:119;16304:1491;;;;;;;;;;;:::o;17801:180::-;17849:77;17846:1;17839:88;17946:4;17943:1;17936:15;17970:4;17967:1;17960:15;17987:320;18031:6;18068:1;18062:4;18058:12;18048:22;;18115:1;18109:4;18105:12;18136:18;18126:81;;18192:4;18184:6;18180:17;18170:27;;18126:81;18254:2;18246:6;18243:14;18223:18;18220:38;18217:84;;18273:18;;:::i;:::-;18217:84;18038:269;17987:320;;;:::o;18313:180::-;18361:77;18358:1;18351:88;18458:4;18455:1;18448:15;18482:4;18479:1;18472:15;18499:191;18539:3;18558:20;18576:1;18558:20;:::i;:::-;18553:25;;18592:20;18610:1;18592:20;:::i;:::-;18587:25;;18635:1;18632;18628:9;18621:16;;18656:3;18653:1;18650:10;18647:36;;;18663:18;;:::i;:::-;18647:36;18499:191;;;;:::o;18696:233::-;18836:34;18832:1;18824:6;18820:14;18813:58;18905:16;18900:2;18892:6;18888:15;18881:41;18696:233;:::o;18935:366::-;19077:3;19098:67;19162:2;19157:3;19098:67;:::i;:::-;19091:74;;19174:93;19263:3;19174:93;:::i;:::-;19292:2;19287:3;19283:12;19276:19;;18935:366;;;:::o;19307:419::-;19473:4;19511:2;19500:9;19496:18;19488:26;;19560:9;19554:4;19550:20;19546:1;19535:9;19531:17;19524:47;19588:131;19714:4;19588:131;:::i;:::-;19580:139;;19307:419;;;:::o;19732:85::-;19777:7;19806:5;19795:16;;19732:85;;;:::o;19823:60::-;19851:3;19872:5;19865:12;;19823:60;;;:::o;19889:154::-;19945:9;19978:59;19994:42;20003:32;20029:5;20003:32;:::i;:::-;19994:42;:::i;:::-;19978:59;:::i;:::-;19965:72;;19889:154;;;:::o;20049:143::-;20142:43;20179:5;20142:43;:::i;:::-;20137:3;20130:56;20049:143;;:::o;20198:234::-;20297:4;20335:2;20324:9;20320:18;20312:26;;20348:77;20422:1;20411:9;20407:17;20398:6;20348:77;:::i;:::-;20198:234;;;;:::o;20438:171::-;20578:23;20574:1;20566:6;20562:14;20555:47;20438:171;:::o;20615:366::-;20757:3;20778:67;20842:2;20837:3;20778:67;:::i;:::-;20771:74;;20854:93;20943:3;20854:93;:::i;:::-;20972:2;20967:3;20963:12;20956:19;;20615:366;;;:::o;20987:419::-;21153:4;21191:2;21180:9;21176:18;21168:26;;21240:9;21234:4;21230:20;21226:1;21215:9;21211:17;21204:47;21268:131;21394:4;21268:131;:::i;:::-;21260:139;;20987:419;;;:::o;21412:224::-;21552:34;21548:1;21540:6;21536:14;21529:58;21621:7;21616:2;21608:6;21604:15;21597:32;21412:224;:::o;21642:366::-;21784:3;21805:67;21869:2;21864:3;21805:67;:::i;:::-;21798:74;;21881:93;21970:3;21881:93;:::i;:::-;21999:2;21994:3;21990:12;21983:19;;21642:366;;;:::o;22014:419::-;22180:4;22218:2;22207:9;22203:18;22195:26;;22267:9;22261:4;22257:20;22253:1;22242:9;22238:17;22231:47;22295:131;22421:4;22295:131;:::i;:::-;22287:139;;22014:419;;;:::o;22439:180::-;22487:77;22484:1;22477:88;22584:4;22581:1;22574:15;22608:4;22605:1;22598:15;22625:179;22765:31;22761:1;22753:6;22749:14;22742:55;22625:179;:::o;22810:366::-;22952:3;22973:67;23037:2;23032:3;22973:67;:::i;:::-;22966:74;;23049:93;23138:3;23049:93;:::i;:::-;23167:2;23162:3;23158:12;23151:19;;22810:366;;;:::o;23182:419::-;23348:4;23386:2;23375:9;23371:18;23363:26;;23435:9;23429:4;23425:20;23421:1;23410:9;23406:17;23399:47;23463:131;23589:4;23463:131;:::i;:::-;23455:139;;23182:419;;;:::o;23607:775::-;23840:4;23878:3;23867:9;23863:19;23855:27;;23892:71;23960:1;23949:9;23945:17;23936:6;23892:71;:::i;:::-;23973:72;24041:2;24030:9;24026:18;24017:6;23973:72;:::i;:::-;24055;24123:2;24112:9;24108:18;24099:6;24055:72;:::i;:::-;24137;24205:2;24194:9;24190:18;24181:6;24137:72;:::i;:::-;24219:73;24287:3;24276:9;24272:19;24263:6;24219:73;:::i;:::-;24302;24370:3;24359:9;24355:19;24346:6;24302:73;:::i;:::-;23607:775;;;;;;;;;:::o;24388:180::-;24528:32;24524:1;24516:6;24512:14;24505:56;24388:180;:::o;24574:366::-;24716:3;24737:67;24801:2;24796:3;24737:67;:::i;:::-;24730:74;;24813:93;24902:3;24813:93;:::i;:::-;24931:2;24926:3;24922:12;24915:19;;24574:366;;;:::o;24946:419::-;25112:4;25150:2;25139:9;25135:18;25127:26;;25199:9;25193:4;25189:20;25185:1;25174:9;25170:17;25163:47;25227:131;25353:4;25227:131;:::i;:::-;25219:139;;24946:419;;;:::o;25371:225::-;25511:34;25507:1;25499:6;25495:14;25488:58;25580:8;25575:2;25567:6;25563:15;25556:33;25371:225;:::o;25602:366::-;25744:3;25765:67;25829:2;25824:3;25765:67;:::i;:::-;25758:74;;25841:93;25930:3;25841:93;:::i;:::-;25959:2;25954:3;25950:12;25943:19;;25602:366;;;:::o;25974:419::-;26140:4;26178:2;26167:9;26163:18;26155:26;;26227:9;26221:4;26217:20;26213:1;26202:9;26198:17;26191:47;26255:131;26381:4;26255:131;:::i;:::-;26247:139;;25974:419;;;:::o;26399:223::-;26539:34;26535:1;26527:6;26523:14;26516:58;26608:6;26603:2;26595:6;26591:15;26584:31;26399:223;:::o;26628:366::-;26770:3;26791:67;26855:2;26850:3;26791:67;:::i;:::-;26784:74;;26867:93;26956:3;26867:93;:::i;:::-;26985:2;26980:3;26976:12;26969:19;;26628:366;;;:::o;27000:419::-;27166:4;27204:2;27193:9;27189:18;27181:26;;27253:9;27247:4;27243:20;27239:1;27228:9;27224:17;27217:47;27281:131;27407:4;27281:131;:::i;:::-;27273:139;;27000:419;;;:::o;27425:221::-;27565:34;27561:1;27553:6;27549:14;27542:58;27634:4;27629:2;27621:6;27617:15;27610:29;27425:221;:::o;27652:366::-;27794:3;27815:67;27879:2;27874:3;27815:67;:::i;:::-;27808:74;;27891:93;27980:3;27891:93;:::i;:::-;28009:2;28004:3;28000:12;27993:19;;27652:366;;;:::o;28024:419::-;28190:4;28228:2;28217:9;28213:18;28205:26;;28277:9;28271:4;28267:20;28263:1;28252:9;28248:17;28241:47;28305:131;28431:4;28305:131;:::i;:::-;28297:139;;28024:419;;;:::o;28449:179::-;28589:31;28585:1;28577:6;28573:14;28566:55;28449:179;:::o;28634:366::-;28776:3;28797:67;28861:2;28856:3;28797:67;:::i;:::-;28790:74;;28873:93;28962:3;28873:93;:::i;:::-;28991:2;28986:3;28982:12;28975:19;;28634:366;;;:::o;29006:419::-;29172:4;29210:2;29199:9;29195:18;29187:26;;29259:9;29253:4;29249:20;29245:1;29234:9;29230:17;29223:47;29287:131;29413:4;29287:131;:::i;:::-;29279:139;;29006:419;;;:::o;29431:224::-;29571:34;29567:1;29559:6;29555:14;29548:58;29640:7;29635:2;29627:6;29623:15;29616:32;29431:224;:::o;29661:366::-;29803:3;29824:67;29888:2;29883:3;29824:67;:::i;:::-;29817:74;;29900:93;29989:3;29900:93;:::i;:::-;30018:2;30013:3;30009:12;30002:19;;29661:366;;;:::o;30033:419::-;30199:4;30237:2;30226:9;30222:18;30214:26;;30286:9;30280:4;30276:20;30272:1;30261:9;30257:17;30250:47;30314:131;30440:4;30314:131;:::i;:::-;30306:139;;30033:419;;;:::o;30458:222::-;30598:34;30594:1;30586:6;30582:14;30575:58;30667:5;30662:2;30654:6;30650:15;30643:30;30458:222;:::o;30686:366::-;30828:3;30849:67;30913:2;30908:3;30849:67;:::i;:::-;30842:74;;30925:93;31014:3;30925:93;:::i;:::-;31043:2;31038:3;31034:12;31027:19;;30686:366;;;:::o;31058:419::-;31224:4;31262:2;31251:9;31247:18;31239:26;;31311:9;31305:4;31301:20;31297:1;31286:9;31282:17;31275:47;31339:131;31465:4;31339:131;:::i;:::-;31331:139;;31058:419;;;:::o;31483:225::-;31623:34;31619:1;31611:6;31607:14;31600:58;31692:8;31687:2;31679:6;31675:15;31668:33;31483:225;:::o;31714:366::-;31856:3;31877:67;31941:2;31936:3;31877:67;:::i;:::-;31870:74;;31953:93;32042:3;31953:93;:::i;:::-;32071:2;32066:3;32062:12;32055:19;;31714:366;;;:::o;32086:419::-;32252:4;32290:2;32279:9;32275:18;32267:26;;32339:9;32333:4;32329:20;32325:1;32314:9;32310:17;32303:47;32367:131;32493:4;32367:131;:::i;:::-;32359:139;;32086:419;;;:::o;32511:182::-;32651:34;32647:1;32639:6;32635:14;32628:58;32511:182;:::o;32699:366::-;32841:3;32862:67;32926:2;32921:3;32862:67;:::i;:::-;32855:74;;32938:93;33027:3;32938:93;:::i;:::-;33056:2;33051:3;33047:12;33040:19;;32699:366;;;:::o;33071:419::-;33237:4;33275:2;33264:9;33260:18;33252:26;;33324:9;33318:4;33314:20;33310:1;33299:9;33295:17;33288:47;33352:131;33478:4;33352:131;:::i;:::-;33344:139;;33071:419;;;:::o;33496:181::-;33636:33;33632:1;33624:6;33620:14;33613:57;33496:181;:::o;33683:366::-;33825:3;33846:67;33910:2;33905:3;33846:67;:::i;:::-;33839:74;;33922:93;34011:3;33922:93;:::i;:::-;34040:2;34035:3;34031:12;34024:19;;33683:366;;;:::o;34055:419::-;34221:4;34259:2;34248:9;34244:18;34236:26;;34308:9;34302:4;34298:20;34294:1;34283:9;34279:17;34272:47;34336:131;34462:4;34336:131;:::i;:::-;34328:139;;34055:419;;;:::o;34480:220::-;34620:34;34616:1;34608:6;34604:14;34597:58;34689:3;34684:2;34676:6;34672:15;34665:28;34480:220;:::o;34706:366::-;34848:3;34869:67;34933:2;34928:3;34869:67;:::i;:::-;34862:74;;34945:93;35034:3;34945:93;:::i;:::-;35063:2;35058:3;35054:12;35047:19;;34706:366;;;:::o;35078:419::-;35244:4;35282:2;35271:9;35267:18;35259:26;;35331:9;35325:4;35321:20;35317:1;35306:9;35302:17;35295:47;35359:131;35485:4;35359:131;:::i;:::-;35351:139;;35078:419;;;:::o;35503:221::-;35643:34;35639:1;35631:6;35627:14;35620:58;35712:4;35707:2;35699:6;35695:15;35688:29;35503:221;:::o;35730:366::-;35872:3;35893:67;35957:2;35952:3;35893:67;:::i;:::-;35886:74;;35969:93;36058:3;35969:93;:::i;:::-;36087:2;36082:3;36078:12;36071:19;;35730:366;;;:::o;36102:419::-;36268:4;36306:2;36295:9;36291:18;36283:26;;36355:9;36349:4;36345:20;36341:1;36330:9;36326:17;36319:47;36383:131;36509:4;36383:131;:::i;:::-;36375:139;;36102:419;;;:::o;36527:230::-;36667:34;36663:1;36655:6;36651:14;36644:58;36736:13;36731:2;36723:6;36719:15;36712:38;36527:230;:::o;36763:366::-;36905:3;36926:67;36990:2;36985:3;36926:67;:::i;:::-;36919:74;;37002:93;37091:3;37002:93;:::i;:::-;37120:2;37115:3;37111:12;37104:19;;36763:366;;;:::o;37135:419::-;37301:4;37339:2;37328:9;37324:18;37316:26;;37388:9;37382:4;37378:20;37374:1;37363:9;37359:17;37352:47;37416:131;37542:4;37416:131;:::i;:::-;37408:139;;37135:419;;;:::o;37560:664::-;37765:4;37803:3;37792:9;37788:19;37780:27;;37817:71;37885:1;37874:9;37870:17;37861:6;37817:71;:::i;:::-;37898:72;37966:2;37955:9;37951:18;37942:6;37898:72;:::i;:::-;37980;38048:2;38037:9;38033:18;38024:6;37980:72;:::i;:::-;38062;38130:2;38119:9;38115:18;38106:6;38062:72;:::i;:::-;38144:73;38212:3;38201:9;38197:19;38188:6;38144:73;:::i;:::-;37560:664;;;;;;;;:::o;38230:170::-;38370:22;38366:1;38358:6;38354:14;38347:46;38230:170;:::o;38406:366::-;38548:3;38569:67;38633:2;38628:3;38569:67;:::i;:::-;38562:74;;38645:93;38734:3;38645:93;:::i;:::-;38763:2;38758:3;38754:12;38747:19;;38406:366;;;:::o;38778:419::-;38944:4;38982:2;38971:9;38967:18;38959:26;;39031:9;39025:4;39021:20;39017:1;39006:9;39002:17;38995:47;39059:131;39185:4;39059:131;:::i;:::-;39051:139;;38778:419;;;:::o;39203:141::-;39252:4;39275:3;39267:11;;39298:3;39295:1;39288:14;39332:4;39329:1;39319:18;39311:26;;39203:141;;;:::o;39350:93::-;39387:6;39434:2;39429;39422:5;39418:14;39414:23;39404:33;;39350:93;;;:::o;39449:107::-;39493:8;39543:5;39537:4;39533:16;39512:37;;39449:107;;;;:::o;39562:393::-;39631:6;39681:1;39669:10;39665:18;39704:97;39734:66;39723:9;39704:97;:::i;:::-;39822:39;39852:8;39841:9;39822:39;:::i;:::-;39810:51;;39894:4;39890:9;39883:5;39879:21;39870:30;;39943:4;39933:8;39929:19;39922:5;39919:30;39909:40;;39638:317;;39562:393;;;;;:::o;39961:142::-;40011:9;40044:53;40062:34;40071:24;40089:5;40071:24;:::i;:::-;40062:34;:::i;:::-;40044:53;:::i;:::-;40031:66;;39961:142;;;:::o;40109:75::-;40152:3;40173:5;40166:12;;40109:75;;;:::o;40190:269::-;40300:39;40331:7;40300:39;:::i;:::-;40361:91;40410:41;40434:16;40410:41;:::i;:::-;40402:6;40395:4;40389:11;40361:91;:::i;:::-;40355:4;40348:105;40266:193;40190:269;;;:::o;40465:73::-;40510:3;40465:73;:::o;40544:189::-;40621:32;;:::i;:::-;40662:65;40720:6;40712;40706:4;40662:65;:::i;:::-;40597:136;40544:189;;:::o;40739:186::-;40799:120;40816:3;40809:5;40806:14;40799:120;;;40870:39;40907:1;40900:5;40870:39;:::i;:::-;40843:1;40836:5;40832:13;40823:22;;40799:120;;;40739:186;;:::o;40931:543::-;41032:2;41027:3;41024:11;41021:446;;;41066:38;41098:5;41066:38;:::i;:::-;41150:29;41168:10;41150:29;:::i;:::-;41140:8;41136:44;41333:2;41321:10;41318:18;41315:49;;;41354:8;41339:23;;41315:49;41377:80;41433:22;41451:3;41433:22;:::i;:::-;41423:8;41419:37;41406:11;41377:80;:::i;:::-;41036:431;;41021:446;40931:543;;;:::o;41480:117::-;41534:8;41584:5;41578:4;41574:16;41553:37;;41480:117;;;;:::o;41603:169::-;41647:6;41680:51;41728:1;41724:6;41716:5;41713:1;41709:13;41680:51;:::i;:::-;41676:56;41761:4;41755;41751:15;41741:25;;41654:118;41603:169;;;;:::o;41777:295::-;41853:4;41999:29;42024:3;42018:4;41999:29;:::i;:::-;41991:37;;42061:3;42058:1;42054:11;42048:4;42045:21;42037:29;;41777:295;;;;:::o;42077:1395::-;42194:37;42227:3;42194:37;:::i;:::-;42296:18;42288:6;42285:30;42282:56;;;42318:18;;:::i;:::-;42282:56;42362:38;42394:4;42388:11;42362:38;:::i;:::-;42447:67;42507:6;42499;42493:4;42447:67;:::i;:::-;42541:1;42565:4;42552:17;;42597:2;42589:6;42586:14;42614:1;42609:618;;;;43271:1;43288:6;43285:77;;;43337:9;43332:3;43328:19;43322:26;43313:35;;43285:77;43388:67;43448:6;43441:5;43388:67;:::i;:::-;43382:4;43375:81;43244:222;42579:887;;42609:618;42661:4;42657:9;42649:6;42645:22;42695:37;42727:4;42695:37;:::i;:::-;42754:1;42768:208;42782:7;42779:1;42776:14;42768:208;;;42861:9;42856:3;42852:19;42846:26;42838:6;42831:42;42912:1;42904:6;42900:14;42890:24;;42959:2;42948:9;42944:18;42931:31;;42805:4;42802:1;42798:12;42793:17;;42768:208;;;43004:6;42995:7;42992:19;42989:179;;;43062:9;43057:3;43053:19;43047:26;43105:48;43147:4;43139:6;43135:17;43124:9;43105:48;:::i;:::-;43097:6;43090:64;43012:156;42989:179;43214:1;43210;43202:6;43198:14;43194:22;43188:4;43181:36;42616:611;;;42579:887;;42169:1303;;;42077:1395;;:::o;43478:166::-;43618:18;43614:1;43606:6;43602:14;43595:42;43478:166;:::o;43650:366::-;43792:3;43813:67;43877:2;43872:3;43813:67;:::i;:::-;43806:74;;43889:93;43978:3;43889:93;:::i;:::-;44007:2;44002:3;43998:12;43991:19;;43650:366;;;:::o;44022:419::-;44188:4;44226:2;44215:9;44211:18;44203:26;;44275:9;44269:4;44265:20;44261:1;44250:9;44246:17;44239:47;44303:131;44429:4;44303:131;:::i;:::-;44295:139;;44022:419;;;:::o;44447:545::-;44620:4;44658:3;44647:9;44643:19;44635:27;;44672:71;44740:1;44729:9;44725:17;44716:6;44672:71;:::i;:::-;44753:68;44817:2;44806:9;44802:18;44793:6;44753:68;:::i;:::-;44831:72;44899:2;44888:9;44884:18;44875:6;44831:72;:::i;:::-;44913;44981:2;44970:9;44966:18;44957:6;44913:72;:::i;:::-;44447:545;;;;;;;:::o;44998:180::-;45046:77;45043:1;45036:88;45143:4;45140:1;45133:15;45167:4;45164:1;45157:15;45184:174;45324:26;45320:1;45312:6;45308:14;45301:50;45184:174;:::o;45364:366::-;45506:3;45527:67;45591:2;45586:3;45527:67;:::i;:::-;45520:74;;45603:93;45692:3;45603:93;:::i;:::-;45721:2;45716:3;45712:12;45705:19;;45364:366;;;:::o;45736:419::-;45902:4;45940:2;45929:9;45925:18;45917:26;;45989:9;45983:4;45979:20;45975:1;45964:9;45960:17;45953:47;46017:131;46143:4;46017:131;:::i;:::-;46009:139;;45736:419;;;:::o;46161:181::-;46301:33;46297:1;46289:6;46285:14;46278:57;46161:181;:::o;46348:366::-;46490:3;46511:67;46575:2;46570:3;46511:67;:::i;:::-;46504:74;;46587:93;46676:3;46587:93;:::i;:::-;46705:2;46700:3;46696:12;46689:19;;46348:366;;;:::o;46720:419::-;46886:4;46924:2;46913:9;46909:18;46901:26;;46973:9;46967:4;46963:20;46959:1;46948:9;46944:17;46937:47;47001:131;47127:4;47001:131;:::i;:::-;46993:139;;46720:419;;;:::o;47145:221::-;47285:34;47281:1;47273:6;47269:14;47262:58;47354:4;47349:2;47341:6;47337:15;47330:29;47145:221;:::o;47372:366::-;47514:3;47535:67;47599:2;47594:3;47535:67;:::i;:::-;47528:74;;47611:93;47700:3;47611:93;:::i;:::-;47729:2;47724:3;47720:12;47713:19;;47372:366;;;:::o;47744:419::-;47910:4;47948:2;47937:9;47933:18;47925:26;;47997:9;47991:4;47987:20;47983:1;47972:9;47968:17;47961:47;48025:131;48151:4;48025:131;:::i;:::-;48017:139;;47744:419;;;:::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","initialize()":"8129fc1c","mint(address,uint256)":"40c10f19","multisend(address[],uint256[])":"aad41a41","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","transferWithPermit(address,address,address,uint256,uint256,uint256,uint8,bytes32,bytes32)":"fdd95894","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"dests\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multisend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"transferWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestPoL.sol\":\"TestPoL\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol\":{\"keccak256\":\"0xe562dab443278837fa50faddb76743399e942181881db8dccaea3bd1712994db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79ebe0e661396045cefe94f4256398cf632756d779a6871319db374c9eb128c9\",\"dweb:/ipfs/QmfCTCivb9fFhyCX8hzushzcKunvKL2N9RDsnRNdvbd11M\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0x28846e6988bf5a88b5d6ebb5871dc23141cbf5da8b29fc217a7435b0d2c46519\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a42556ee056b322c4dda747f2f7a3d0300d0c1a9ea0a2378959275793b754f3\",\"dweb:/ipfs/QmU9akpnUxNpheCowGotVhM9waNjJv7ZKqcffMkDSxh3ia\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x3d159b9049d4ef465c1fb41f7ff7620f18f52bf6f8f3018bae4ed95c2df537d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f7cfa624d878eec3c97e30dac64c6c00a79c65aa2799cebbf683e74488cd27\",\"dweb:/ipfs/QmdtMH3xSGXNqvBcndsxWCUfmjta6kebnUYwKasJZucTfP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x00e810854492bbbd7671481390a8a48ed7b801285519256a877f871f612244cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dff2e5db792996eb5eec7bb134ad32119b8a039693729771d70cc462daec97b7\",\"dweb:/ipfs/QmeN6brqda6yZe3y8yERqRTzYeaGGezYGmJar62SiB5JmU\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xa014f65d84b02827055d99993ccdbfb4b56b2c9e91eb278d82a93330659d06e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a7e716a74f3d48a7f549086faa94afcd58b9f18ac8e9f74af4571f3a1d8d5c\",\"dweb:/ipfs/QmTkDNWkq5o9Cv2jS7s6JvSmsPBkeunZhPe7Z2njGL31wo\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x7077d7f3369b21f286840c0d69b09a8a6d3d6e522fff67bfc240fd0a6cdf178c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f59e7a19530bd6ee236285f9a87c930d27b73464f6b7398e29a6f4cfc2670ac\",\"dweb:/ipfs/QmVfN4gHvJNac7KiuhLhtgtbdDo5a6Mw5hMcwJkzYugq5R\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"contracts/TestPoL.sol\":{\"keccak256\":\"0xd3b500450eea6c696a8c3b831635113eb8030b3b9f01fdf22e63357aab2761c2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e49f33ac887fdcc5a3c7b070c6686192124643819473e2bc86de5d25ff72e70a\",\"dweb:/ipfs/QmeArWMrsYLXV66R6ysPnmDcZfPcHAyvyDD18r8GEHYvkp\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":164,"contract":"contracts/TestPoL.sol:TestPoL","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":167,"contract":"contracts/TestPoL.sol:TestPoL","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":1846,"contract":"contracts/TestPoL.sol:TestPoL","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":474,"contract":"contracts/TestPoL.sol:TestPoL","label":"_balances","offset":0,"slot":"51","type":"t_mapping(t_address,t_uint256)"},{"astId":480,"contract":"contracts/TestPoL.sol:TestPoL","label":"_allowances","offset":0,"slot":"52","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":482,"contract":"contracts/TestPoL.sol:TestPoL","label":"_totalSupply","offset":0,"slot":"53","type":"t_uint256"},{"astId":484,"contract":"contracts/TestPoL.sol:TestPoL","label":"_name","offset":0,"slot":"54","type":"t_string_storage"},{"astId":486,"contract":"contracts/TestPoL.sol:TestPoL","label":"_symbol","offset":0,"slot":"55","type":"t_string_storage"},{"astId":1066,"contract":"contracts/TestPoL.sol:TestPoL","label":"__gap","offset":0,"slot":"56","type":"t_array(t_uint256)45_storage"},{"astId":1209,"contract":"contracts/TestPoL.sol:TestPoL","label":"__gap","offset":0,"slot":"101","type":"t_array(t_uint256)50_storage"},{"astId":348,"contract":"contracts/TestPoL.sol:TestPoL","label":"_paused","offset":0,"slot":"151","type":"t_bool"},{"astId":453,"contract":"contracts/TestPoL.sol:TestPoL","label":"__gap","offset":0,"slot":"152","type":"t_array(t_uint256)49_storage"},{"astId":11,"contract":"contracts/TestPoL.sol:TestPoL","label":"_owner","offset":0,"slot":"201","type":"t_address"},{"astId":131,"contract":"contracts/TestPoL.sol:TestPoL","label":"__gap","offset":0,"slot":"202","type":"t_array(t_uint256)49_storage"},{"astId":2535,"contract":"contracts/TestPoL.sol:TestPoL","label":"_hashedName","offset":0,"slot":"251","type":"t_bytes32"},{"astId":2538,"contract":"contracts/TestPoL.sol:TestPoL","label":"_hashedVersion","offset":0,"slot":"252","type":"t_bytes32"},{"astId":2540,"contract":"contracts/TestPoL.sol:TestPoL","label":"_name","offset":0,"slot":"253","type":"t_string_storage"},{"astId":2542,"contract":"contracts/TestPoL.sol:TestPoL","label":"_version","offset":0,"slot":"254","type":"t_string_storage"},{"astId":2800,"contract":"contracts/TestPoL.sol:TestPoL","label":"__gap","offset":0,"slot":"255","type":"t_array(t_uint256)48_storage"},{"astId":1237,"contract":"contracts/TestPoL.sol:TestPoL","label":"_nonces","offset":0,"slot":"303","type":"t_mapping(t_address,t_struct(Counter)1853_storage)"},{"astId":1245,"contract":"contracts/TestPoL.sol:TestPoL","label":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","offset":0,"slot":"304","type":"t_bytes32"},{"astId":1401,"contract":"contracts/TestPoL.sol:TestPoL","label":"__gap","offset":0,"slot":"305","type":"t_array(t_uint256)49_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)45_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[45]","numberOfBytes":"1440"},"t_array(t_uint256)48_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[48]","numberOfBytes":"1536"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_struct(Counter)1853_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct CountersUpgradeable.Counter)","numberOfBytes":"32","value":"t_struct(Counter)1853_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)1853_storage":{"encoding":"inplace","label":"struct CountersUpgradeable.Counter","members":[{"astId":1852,"contract":"contracts/TestPoL.sol:TestPoL","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}}}}}